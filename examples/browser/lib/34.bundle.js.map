{"version":3,"sources":["webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/browser/style/terminal-search.css","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/browser/base/terminal-widget.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/browser/search/terminal-search-widget.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/browser/terminal-contribution.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/browser/terminal-copy-on-selection-handler.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/browser/terminal-preferences.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/browser/terminal-theme-service.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/browser/terminal-widget-impl.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/common/base-terminal-protocol.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/common/shell-terminal-protocol.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/common/terminal-protocol.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/common/terminal-watcher.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/terminal/src/browser/style/terminal-search.css?2a77"],"names":[],"mappings":"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","file":"34.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2019 Red Hat, Inc. and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-search-terminal-widget-parent {\\n    background: var(--theia-sideBar-background);\\n    position: absolute;\\n    margin: 0px;\\n    border: var(--theia-border-width) solid transparent;\\n    padding: 0px;\\n    top: 1px;\\n    right: 19px;\\n\\n    z-index: 10;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box {\\n    display: flex;\\n    margin: 0px;\\n    border: var(--theia-border-width) solid transparent;\\n    padding: 0px;\\n    align-items: center;\\n    color: var(--theia-input-foreground);\\n    background: var(--theia-input-background);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box input {\\n    margin-left: 5px;\\n    padding: 0px;\\n    width: 100px;\\n    height: 18px;\\n    color: inherit;\\n    background-color: inherit;\\n    border: var(--theia-border-width) solid transparent;\\n    outline: none;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem {\\n    border: var(--theia-border-width) solid transparent;\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    height: 18px;\\n    width: 18px;\\n    margin: 1px;\\n    opacity: 0.7;\\n    outline: none;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem:hover {\\n    opacity: 1;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box.focused {\\n    border: var(--theia-border-width) solid var(--theia-focusBorder);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .search-elem.option-enabled {\\n    border: var(--theia-border-width) solid var(--theia-inputOption-activeBorder);\\n    background-color: var(--theia-inputOption-activeBackground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .whole-word {\\n    background-image: var(--theia-icon-whole-word);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .match-case {\\n    background-image: var(--theia-icon-case-sensitive);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .use-regexp {\\n    background-image: var(--theia-icon-regex);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget {\\n    margin: 2px;\\n    display: flex;\\n    align-items: center;\\n    font: var(--theia-content-font-size);\\n    color: var(--theia-input-foreground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button {\\n    background-color: transparent;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button:focus {\\n    border: var(--theia-border-width) var(--theia-focusBorder) solid;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget .search-elem.close {\\n    background-image: var(--theia-icon-close);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget .search-elem.arrow-up {\\n    background-image: var(--theia-icon-arrow-up);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget .search-elem.arrow-down {\\n    background-image: var(--theia-icon-arrow-down);\\n}\\n\", \"\"]);\n\n// exports\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Event } from '@theia/core';\nimport { BaseWidget } from '@theia/core/lib/browser';\nimport { CommandLineOptions } from '@theia/process/lib/common/shell-command-builder';\nimport { TerminalSearchWidget } from '../search/terminal-search-widget';\nimport { TerminalProcessInfo } from '../../common/base-terminal-protocol';\n\n/**\n * Terminal UI widget.\n */\nexport abstract class TerminalWidget extends BaseWidget {\n\n    abstract processId: Promise<number>;\n\n    /**\n     * Get the current executable and arguments.\n     */\n    abstract processInfo: Promise<TerminalProcessInfo>;\n\n    /** Terminal kind that indicates whether a terminal is created by a user or by some extension for a user */\n    abstract readonly kind: 'user' | string;\n\n    abstract readonly terminalId: number;\n\n    /**\n     * Start terminal and return terminal id.\n     * @param id - terminal id.\n     */\n    abstract start(id?: number): Promise<number>;\n\n    /**\n     * Send text to the terminal server.\n     * @param text - text content.\n     */\n    abstract sendText(text: string): void;\n\n    /**\n     * Resolves when the command is successfully sent, this doesn't mean that it\n     * was evaluated. Might reject if terminal wasn't properly started yet.\n     *\n     * Note that this method will try to escape your arguments as if it was\n     * someone inputting everything in a shell.\n     *\n     * Supported shells: `bash`, `cmd.exe`, `wsl.exe`, `pwsh/powershell.exe`\n     */\n    abstract executeCommand(commandOptions: CommandLineOptions): Promise<void>;\n\n    /** Event that fires when the terminal is connected or reconnected */\n    abstract onDidOpen: Event<void>;\n\n    /** Event that fires when the terminal fails to connect or reconnect */\n    abstract onDidOpenFailure: Event<void>;\n\n    abstract scrollLineUp(): void;\n\n    abstract scrollLineDown(): void;\n\n    abstract scrollToTop(): void;\n\n    abstract scrollToBottom(): void;\n\n    abstract scrollPageUp(): void;\n\n    abstract scrollPageDown(): void;\n\n    abstract resetTerminal(): void;\n    /**\n     * Event which fires when terminal did closed. Event value contains closed terminal widget definition.\n     */\n    abstract onTerminalDidClose: Event<TerminalWidget>;\n\n    /**\n     * Cleat terminal output.\n     */\n    abstract clearOutput(): void;\n\n    abstract writeLine(line: string): void;\n\n    /**\n     * Return Terminal search box widget.\n     */\n    abstract getSearchBox(): TerminalSearchWidget;\n    /**\n     * Whether the terminal process has child processes.\n     */\n    abstract hasChildProcesses(): Promise<boolean>;\n\n    abstract setTitle(title: string): void;\n}\n\n/**\n * Terminal widget options.\n */\nexport const TerminalWidgetOptions = Symbol('TerminalWidgetOptions');\nexport interface TerminalWidgetOptions {\n\n    /**\n     * Human readable terminal representation on the UI.\n     */\n    readonly title?: string;\n\n    /**\n     * Path to the executable shell. For example: `/bin/bash`, `bash`, `sh`.\n     */\n    readonly shellPath?: string;\n\n    /**\n     * Shell arguments to executable shell, for example: [`-l`] - without login.\n     */\n    readonly shellArgs?: string[];\n\n    /**\n     * Current working directory.\n     */\n    readonly cwd?: string;\n\n    /**\n     * Environment variables for terminal.\n     */\n    readonly env?: { [key: string]: string | null };\n\n    /**\n     * In case `destroyTermOnClose` is true - terminal process will be destroyed on close terminal widget, otherwise will be kept\n     * alive.\n     */\n    readonly destroyTermOnClose?: boolean;\n\n    /**\n     * Terminal server side can send to the client `terminal title` to display this value on the UI. If\n     * useServerTitle = true then display this title, otherwise display title defined by 'title' argument.\n     */\n    readonly useServerTitle?: boolean;\n\n    /**\n     * Terminal id. Should be unique for all DOM.\n     */\n    readonly id?: string;\n\n    /**\n     * Terminal attributes. Can be useful to apply some implementation specific information.\n     */\n    readonly attributes?: { [key: string]: string | null };\n\n    /**\n     * Terminal kind that indicates whether a terminal is created by a user or by some extension for a user\n     */\n    readonly kind?: 'user' | string;\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport * as React from 'react';\nimport '../../../src/browser/style/terminal-search.css';\nimport { Terminal } from 'xterm';\nimport { SearchAddon, ISearchOptions } from 'xterm-addon-search';\nimport { Key } from '@theia/core/lib/browser';\n\nexport const TERMINAL_SEARCH_WIDGET_FACTORY_ID = 'terminal-search';\nexport const TerminalSearchWidgetFactory = Symbol('TerminalSearchWidgetFactory');\nexport type TerminalSearchWidgetFactory = (terminal: Terminal) => TerminalSearchWidget;\n\n@injectable()\nexport class TerminalSearchWidget extends ReactWidget {\n\n    private searchInput: HTMLInputElement | null;\n    private searchBox: HTMLDivElement | null;\n    private searchOptions: ISearchOptions = {};\n    private searchAddon: SearchAddon;\n\n    @inject(Terminal)\n    protected terminal: Terminal;\n\n    @postConstruct()\n    protected init(): void {\n        this.node.classList.add('theia-search-terminal-widget-parent');\n\n        this.searchAddon = new SearchAddon();\n        this.terminal.loadAddon(this.searchAddon);\n\n        this.hide();\n        this.update();\n    }\n\n    protected render(): React.ReactNode {\n        return <div className='theia-search-terminal-widget'>\n            <div className='theia-search-elem-box' ref={searchBox => this.searchBox = searchBox} >\n                <input\n                    title='Find'\n                    type='text'\n                    placeholder='Find'\n                    ref={ip => this.searchInput = ip}\n                    onKeyUp={this.onInputChanged}\n                    onFocus={this.onSearchInputFocus}\n                    onBlur={this.onSearchInputBlur}\n                />\n                <div title='Match case' tabIndex={0} className='search-elem match-case' onClick={this.handleCaseSensitiveOptionClicked}></div>\n                <div title='Match whole word' tabIndex={0} className='search-elem whole-word' onClick={this.handleWholeWordOptionClicked}></div>\n                <div title='Use regular expression' tabIndex={0} className='search-elem use-regexp' onClick={this.handleRegexOptionClicked}></div>\n            </div>\n            <button title='Previous match' className='search-elem arrow-up' onClick={this.handlePreviousButtonClicked}></button>\n            <button title='Next match' className='search-elem arrow-down' onClick={this.handleNextButtonClicked}></button>\n            <button title='Close' className='search-elem close' onClick={this.handleHide}></button>\n       </div>;\n    }\n\n    onSearchInputFocus = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.add('focused');\n        }\n    };\n\n    onSearchInputBlur = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.remove('focused');\n        }\n    };\n\n    private handleHide = (): void => {\n        this.hide();\n    };\n\n    private handleCaseSensitiveOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.caseSensitive = !this.searchOptions.caseSensitive;\n        this.updateSearchInputBox(this.searchOptions.caseSensitive, event.currentTarget);\n    };\n\n    private handleWholeWordOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.wholeWord = !this.searchOptions.wholeWord;\n        this.updateSearchInputBox(this.searchOptions.wholeWord, event.currentTarget);\n    };\n\n    private handleRegexOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.regex = !this.searchOptions.regex;\n        this.updateSearchInputBox(this.searchOptions.regex, event.currentTarget);\n    };\n\n    private updateSearchInputBox(enable: boolean, optionElement: HTMLSpanElement): void {\n        if (enable) {\n            optionElement.classList.add('option-enabled');\n        } else {\n            optionElement.classList.remove('option-enabled');\n        }\n        this.searchInput!.focus();\n    }\n\n    private onInputChanged = (event: React.KeyboardEvent): void => {\n        // move to previous search result on `Shift + Enter`\n        if (event && event.shiftKey && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'previous');\n            return;\n        }\n        // move to next search result on `Enter`\n        if (event && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'next');\n            return;\n        }\n\n        this.search(true, 'next');\n    };\n\n    search(incremental: boolean, searchDirection: 'next' | 'previous'): void {\n        if (this.searchInput) {\n            this.searchOptions.incremental = incremental;\n            const searchText = this.searchInput.value;\n\n            if (searchDirection === 'next') {\n                this.searchAddon.findNext(searchText, this.searchOptions);\n            }\n\n            if (searchDirection === 'previous') {\n                this.searchAddon.findPrevious(searchText, this.searchOptions);\n            }\n        }\n    }\n\n    private handleNextButtonClicked = (): void => {\n        this.search(false, 'next');\n    };\n\n    private handlePreviousButtonClicked = (): void => {\n        this.search(false, 'previous');\n    };\n\n    onAfterHide(): void {\n        this.terminal.focus();\n    }\n\n    onAfterShow(): void {\n        if (this.searchInput) {\n            this.searchInput.select();\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { TerminalWidgetImpl } from './terminal-widget-impl';\n\nexport const TerminalContribution = Symbol('TerminalContribution');\nexport interface TerminalContribution {\n    onCreate(term: TerminalWidgetImpl): void;\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, postConstruct } from 'inversify';\nimport { isFirefox } from '@theia/core/lib/browser';\n\n@injectable()\nexport class TerminalCopyOnSelectionHandler {\n\n    private textToCopy: string;\n    private interceptCopy: boolean;\n\n    private copyListener = (ev: ClipboardEvent) => {\n        if (this.interceptCopy && ev.clipboardData) {\n            ev.clipboardData.setData('text/plain', this.textToCopy);\n            ev.preventDefault();\n        }\n    };\n\n    @postConstruct()\n    protected init(): void {\n        document.addEventListener('copy', this.copyListener);\n    }\n\n    private async clipBoardCopyIsGranted(): Promise<boolean> {\n        // Unfortunately Firefox doesn't support permission check `clipboard-write`, so let try to copy anyway,\n        if (isFirefox) {\n            return true;\n        }\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const permissions = (navigator as any).permissions;\n            const { state } = await permissions.query({ name: 'clipboard-write' });\n            if (state === 'granted') {\n                return true;\n            }\n        } catch (e) { }\n\n        return false;\n    }\n\n    private executeCommandCopy(): void {\n        try {\n            this.interceptCopy = true;\n            document.execCommand('copy');\n            this.interceptCopy = false;\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    private async writeToClipBoard(): Promise<void> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const clipboard = (navigator as any).clipboard;\n\n        if (!clipboard) {\n            this.executeCommandCopy();\n            return;\n        }\n\n        try {\n            await clipboard.writeText(this.textToCopy);\n        } catch (e) {\n            this.executeCommandCopy();\n        }\n    }\n\n    async copy(text: string): Promise<void> {\n        this.textToCopy = text;\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const permissions = (navigator as any).permissions;\n        if (permissions && permissions.query && await this.clipBoardCopyIsGranted()) {\n            await this.writeToClipBoard();\n        } else {\n            this.executeCommandCopy();\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Bitsler and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\nimport { EDITOR_FONT_DEFAULTS } from '@theia/editor/lib/browser';\n\nexport const TerminalConfigSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'terminal.enableCopy': {\n            type: 'boolean',\n            description: 'Enable ctrl-c (cmd-c on macOS) to copy selected text',\n            default: true\n        },\n        'terminal.enablePaste': {\n            type: 'boolean',\n            description: 'Enable ctrl-v (cmd-v on macOS) to paste from clipboard',\n            default: true\n        },\n        'terminal.integrated.fontFamily': {\n            type: 'string',\n            description: 'Controls the font family of the terminal.',\n            default: EDITOR_FONT_DEFAULTS.fontFamily\n        },\n        'terminal.integrated.fontSize': {\n            type: 'number',\n            description: 'Controls the font size in pixels of the terminal.',\n            minimum: 6,\n            default: EDITOR_FONT_DEFAULTS.fontSize\n        },\n        'terminal.integrated.fontWeight': {\n            type: 'string',\n            enum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n            description: 'The font weight to use within the terminal for non-bold text.',\n            default: 'normal'\n        },\n        'terminal.integrated.fontWeightBold': {\n            type: 'string',\n            enum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n            description: 'The font weight to use within the terminal for bold text.',\n            default: 'bold'\n        },\n        'terminal.integrated.drawBoldTextInBrightColors': {\n            description: 'Controls whether to draw bold text in bright colors.',\n            type: 'boolean',\n            default: true,\n        },\n        'terminal.integrated.letterSpacing': {\n            description: 'Controls the letter spacing of the terminal, this is an integer value which represents the amount of additional pixels to add between characters.',\n            type: 'number',\n            default: 1\n        },\n        'terminal.integrated.lineHeight': {\n            description: 'Controls the line height of the terminal, this number is multiplied by the terminal font size to get the actual line-height in pixels.',\n            type: 'number',\n            minimum: 1,\n            default: 1\n        },\n        'terminal.integrated.scrollback': {\n            description: 'Controls the maximum amount of lines the terminal keeps in its buffer.',\n            type: 'number',\n            default: 1000\n        },\n        'terminal.integrated.fastScrollSensitivity': {\n            description: 'Controls the scrolling speed when pressing \\'alt\\'.',\n            type: 'number',\n            default: 5,\n        },\n        'terminal.integrated.rendererType': {\n            description: 'Controls how the terminal is rendered.',\n            type: 'string',\n            enum: ['canvas', 'dom'],\n            default: 'canvas'\n        },\n        'terminal.integrated.copyOnSelection': {\n            description: 'Controls whether text selected in the terminal will be copied to the clipboard.',\n            type: 'boolean',\n            default: false,\n        },\n        'terminal.integrated.cursorBlinking': {\n            description: 'Controls whether the terminal cursor blinks.',\n            type: 'boolean',\n            default: false\n        },\n        'terminal.integrated.cursorStyle': {\n            description: 'Controls the style of the terminal cursor.',\n            enum: ['block', 'underline', 'line'],\n            default: 'block'\n        },\n        'terminal.integrated.cursorWidth': {\n            description: 'Controls the width of the cursor when \\'terminal.integrated.cursorStyle\\' is set to \\'line\\'.',\n            markdownDescription: 'Controls the width of the cursor when `#terminal.integrated.cursorStyle#` is set to `line`.',\n            type: 'number',\n            default: 1\n        },\n        'terminal.integrated.shell.windows': {\n            type: ['string', 'null'],\n            description: 'The path of the shell that the terminal uses on Windows. (default: C:\\\\Windows\\\\System32\\\\cmd.exe).',\n            markdownDescription: 'The path of the shell that the terminal uses on Windows. (default: C:\\\\Windows\\\\System32\\\\cmd.exe).',\n            default: undefined\n        },\n        'terminal.integrated.shell.osx': {\n            type: ['string', 'null'],\n            description: `The path of the shell that the terminal uses on macOS (default: ${process.env.SHELL || '/bin/bash'}).`,\n            markdownDescription: `The path of the shell that the terminal uses on macOS (default: ${process.env.SHELL || '/bin/bash'}).`,\n            default: undefined\n        },\n        'terminal.integrated.shell.linux': {\n            type: ['string', 'null'],\n            description: `The path of the shell that the terminal uses on Linux (default: ${process.env.SHELL || '/bin/bash'}).`,\n            markdownDescription: `The path of the shell that the terminal uses on Linux (default: ${process.env.SHELL || '/bin/bash'}).`,\n            default: undefined\n        },\n        'terminal.integrated.shellArgs.windows': {\n            type: 'array',\n            description: 'The command line arguments to use when on the Windows terminal.',\n            markdownDescription: 'The command line arguments to use when on the Windows terminal.',\n            default: []\n        },\n        'terminal.integrated.shellArgs.osx': {\n            type: 'array',\n            description: 'The command line arguments to use when on the macOS terminal.',\n            markdownDescription: 'The command line arguments to use when on the macOS terminal.',\n            default: [\n                '-l'\n            ]\n        },\n        'terminal.integrated.shellArgs.linux': {\n            type: 'array',\n            description: 'The command line arguments to use when on the Linux terminal.',\n            markdownDescription: 'The command line arguments to use when on the Linux terminal.',\n            default: []\n        },\n    }\n};\n\nexport interface TerminalConfiguration {\n    'terminal.enableCopy': boolean\n    'terminal.enablePaste': boolean\n    'terminal.integrated.fontFamily': string\n    'terminal.integrated.fontSize': number\n    'terminal.integrated.fontWeight': FontWeight\n    'terminal.integrated.fontWeightBold': FontWeight,\n    'terminal.integrated.drawBoldTextInBrightColors': boolean,\n    'terminal.integrated.letterSpacing': number\n    'terminal.integrated.lineHeight': number,\n    'terminal.integrated.scrollback': number,\n    'terminal.integrated.fastScrollSensitivity': number,\n    'terminal.integrated.rendererType': TerminalRendererType,\n    'terminal.integrated.copyOnSelection': boolean,\n    'terminal.integrated.cursorBlinking': boolean,\n    'terminal.integrated.cursorStyle': CursorStyleVSCode,\n    'terminal.integrated.cursorWidth': number,\n    'terminal.integrated.shell.windows': string | undefined,\n    'terminal.integrated.shell.osx': string | undefined,\n    'terminal.integrated.shell.linux': string | undefined,\n    'terminal.integrated.shellArgs.windows': string[],\n    'terminal.integrated.shellArgs.osx': string[],\n    'terminal.integrated.shellArgs.linux': string[],\n}\n\ntype FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type CursorStyle = 'block' | 'underline' | 'bar';\n// VS Code uses 'line' to represent 'bar'. The following conversion is necessary to support their preferences.\nexport type CursorStyleVSCode = CursorStyle | 'line';\nexport type TerminalRendererType = 'canvas' | 'dom';\nexport const DEFAULT_TERMINAL_RENDERER_TYPE = 'canvas';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isTerminalRendererType(arg: any): arg is TerminalRendererType {\n    return typeof arg === 'string' && (arg === 'canvas' || arg === 'dom');\n}\n\nexport const TerminalPreferences = Symbol('TerminalPreferences');\nexport type TerminalPreferences = PreferenceProxy<TerminalConfiguration>;\n\nexport function createTerminalPreferences(preferences: PreferenceService): TerminalPreferences {\n    return createPreferenceProxy(preferences, TerminalConfigSchema);\n}\n\nexport function bindTerminalPreferences(bind: interfaces.Bind): void {\n    bind(TerminalPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createTerminalPreferences(preferences);\n    });\n    bind(PreferenceContribution).toConstantValue({ schema: TerminalConfigSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ITheme } from 'xterm';\nimport { injectable, inject } from 'inversify';\nimport { ColorRegistry, ColorDefaults } from '@theia/core/lib/browser/color-registry';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\n\n/**\n * It should be aligned with https://github.com/microsoft/vscode/blob/0dfa355b3ad185a6289ba28a99c141ab9e72d2be/src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts#L40\n */\nexport const terminalAnsiColorMap: { [key: string]: { index: number, defaults: ColorDefaults } } = {\n    'terminal.ansiBlack': {\n        index: 0,\n        defaults: {\n            light: '#000000',\n            dark: '#000000',\n            hc: '#000000'\n        }\n    },\n    'terminal.ansiRed': {\n        index: 1,\n        defaults: {\n            light: '#cd3131',\n            dark: '#cd3131',\n            hc: '#cd0000'\n        }\n    },\n    'terminal.ansiGreen': {\n        index: 2,\n        defaults: {\n            light: '#00BC00',\n            dark: '#0DBC79',\n            hc: '#00cd00'\n        }\n    },\n    'terminal.ansiYellow': {\n        index: 3,\n        defaults: {\n            light: '#949800',\n            dark: '#e5e510',\n            hc: '#cdcd00'\n        }\n    },\n    'terminal.ansiBlue': {\n        index: 4,\n        defaults: {\n            light: '#0451a5',\n            dark: '#2472c8',\n            hc: '#0000ee'\n        }\n    },\n    'terminal.ansiMagenta': {\n        index: 5,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#bc3fbc',\n            hc: '#cd00cd'\n        }\n    },\n    'terminal.ansiCyan': {\n        index: 6,\n        defaults: {\n            light: '#0598bc',\n            dark: '#11a8cd',\n            hc: '#00cdcd'\n        }\n    },\n    'terminal.ansiWhite': {\n        index: 7,\n        defaults: {\n            light: '#555555',\n            dark: '#e5e5e5',\n            hc: '#e5e5e5'\n        }\n    },\n    'terminal.ansiBrightBlack': {\n        index: 8,\n        defaults: {\n            light: '#666666',\n            dark: '#666666',\n            hc: '#7f7f7f'\n        }\n    },\n    'terminal.ansiBrightRed': {\n        index: 9,\n        defaults: {\n            light: '#cd3131',\n            dark: '#f14c4c',\n            hc: '#ff0000'\n        }\n    },\n    'terminal.ansiBrightGreen': {\n        index: 10,\n        defaults: {\n            light: '#14CE14',\n            dark: '#23d18b',\n            hc: '#00ff00'\n        }\n    },\n    'terminal.ansiBrightYellow': {\n        index: 11,\n        defaults: {\n            light: '#b5ba00',\n            dark: '#f5f543',\n            hc: '#ffff00'\n        }\n    },\n    'terminal.ansiBrightBlue': {\n        index: 12,\n        defaults: {\n            light: '#0451a5',\n            dark: '#3b8eea',\n            hc: '#5c5cff'\n        }\n    },\n    'terminal.ansiBrightMagenta': {\n        index: 13,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#d670d6',\n            hc: '#ff00ff'\n        }\n    },\n    'terminal.ansiBrightCyan': {\n        index: 14,\n        defaults: {\n            light: '#0598bc',\n            dark: '#29b8db',\n            hc: '#00ffff'\n        }\n    },\n    'terminal.ansiBrightWhite': {\n        index: 15,\n        defaults: {\n            light: '#a5a5a5',\n            dark: '#e5e5e5',\n            hc: '#ffffff'\n        }\n    }\n};\n\n@injectable()\nexport class TerminalThemeService {\n\n    @inject(ColorRegistry)\n    protected readonly colorRegistry: ColorRegistry;\n\n    readonly onDidChange = ThemeService.get().onThemeChange;\n\n    get theme(): ITheme {\n        const foregroundColor = this.colorRegistry.getCurrentColor('terminal.foreground');\n        const backgroundColor = this.colorRegistry.getCurrentColor('terminal.background') || this.colorRegistry.getCurrentColor('panel.background');\n        const cursorColor = this.colorRegistry.getCurrentColor('terminalCursor.foreground') || foregroundColor;\n        const cursorAccentColor = this.colorRegistry.getCurrentColor('terminalCursor.background') || backgroundColor;\n        const selectionColor = this.colorRegistry.getCurrentColor('terminal.selectionBackground');\n\n        const theme: ITheme = {\n            background: backgroundColor,\n            foreground: foregroundColor,\n            cursor: cursorColor,\n            cursorAccent: cursorAccentColor,\n            selection: selectionColor\n        };\n        // eslint-disable-next-line guard-for-in\n        for (const id in terminalAnsiColorMap) {\n            const colorId = id.substring(13);\n            const colorName = colorId.charAt(0).toLowerCase() + colorId.slice(1);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (theme as any)[colorName] = this.colorRegistry.getCurrentColor(id);\n        }\n        return theme;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Terminal, RendererType } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { inject, injectable, named, postConstruct } from 'inversify';\nimport { ContributionProvider, Disposable, Event, Emitter, ILogger, DisposableCollection } from '@theia/core';\nimport { Widget, Message, WebSocketConnectionProvider, StatefulWidget, isFirefox, MessageLoop, KeyCode } from '@theia/core/lib/browser';\nimport { isOSX } from '@theia/core/lib/common';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ShellTerminalServerProxy, IShellTerminalPreferences } from '../common/shell-terminal-protocol';\nimport { terminalsPath } from '../common/terminal-protocol';\nimport { IBaseTerminalServer, TerminalProcessInfo } from '../common/base-terminal-protocol';\nimport { TerminalWatcher } from '../common/terminal-watcher';\nimport { TerminalWidgetOptions, TerminalWidget } from './base/terminal-widget';\nimport { MessageConnection } from 'vscode-jsonrpc';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { TerminalPreferences, TerminalRendererType, isTerminalRendererType, DEFAULT_TERMINAL_RENDERER_TYPE, CursorStyle } from './terminal-preferences';\nimport { TerminalContribution } from './terminal-contribution';\nimport URI from '@theia/core/lib/common/uri';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalSearchWidgetFactory, TerminalSearchWidget } from './search/terminal-search-widget';\nimport { TerminalCopyOnSelectionHandler } from './terminal-copy-on-selection-handler';\nimport { TerminalThemeService } from './terminal-theme-service';\nimport { CommandLineOptions, ShellCommandBuilder } from '@theia/process/lib/common/shell-command-builder';\n\nexport const TERMINAL_WIDGET_FACTORY_ID = 'terminal';\n\nexport interface TerminalWidgetFactoryOptions extends Partial<TerminalWidgetOptions> {\n    /* a unique string per terminal */\n    created: string\n}\n\n@injectable()\nexport class TerminalWidgetImpl extends TerminalWidget implements StatefulWidget {\n\n    private readonly TERMINAL = 'Terminal';\n    protected terminalKind = 'user';\n    protected _terminalId = -1;\n    protected readonly onTermDidClose = new Emitter<TerminalWidget>();\n    protected fitAddon: FitAddon;\n    protected term: Terminal;\n    protected searchBox: TerminalSearchWidget;\n    protected restored = false;\n    protected closeOnDispose = true;\n    protected waitForConnection: Deferred<MessageConnection> | undefined;\n    protected hoverMessage: HTMLDivElement;\n    protected lastTouchEnd: TouchEvent | undefined;\n\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(WebSocketConnectionProvider) protected readonly webSocketConnectionProvider: WebSocketConnectionProvider;\n    @inject(TerminalWidgetOptions) options: TerminalWidgetOptions;\n    @inject(ShellTerminalServerProxy) protected readonly shellTerminalServer: ShellTerminalServerProxy;\n    @inject(TerminalWatcher) protected readonly terminalWatcher: TerminalWatcher;\n    @inject(ILogger) @named('terminal') protected readonly logger: ILogger;\n    @inject('terminal-dom-id') public readonly id: string;\n    @inject(TerminalPreferences) protected readonly preferences: TerminalPreferences;\n    @inject(ContributionProvider) @named(TerminalContribution) protected readonly terminalContributionProvider: ContributionProvider<TerminalContribution>;\n    @inject(TerminalService) protected readonly terminalService: TerminalService;\n    @inject(TerminalSearchWidgetFactory) protected readonly terminalSearchBoxFactory: TerminalSearchWidgetFactory;\n    @inject(TerminalCopyOnSelectionHandler) protected readonly copyOnSelectionHandler: TerminalCopyOnSelectionHandler;\n    @inject(TerminalThemeService) protected readonly themeService: TerminalThemeService;\n    @inject(ShellCommandBuilder) protected readonly shellCommandBuilder: ShellCommandBuilder;\n\n    protected readonly onDidOpenEmitter = new Emitter<void>();\n    readonly onDidOpen: Event<void> = this.onDidOpenEmitter.event;\n\n    protected readonly onDidOpenFailureEmitter = new Emitter<void>();\n    readonly onDidOpenFailure: Event<void> = this.onDidOpenFailureEmitter.event;\n\n    protected readonly toDisposeOnConnect = new DisposableCollection();\n\n    @postConstruct()\n    protected init(): void {\n        this.setTitle(this.options.title || this.TERMINAL);\n        this.title.iconClass = 'fa fa-terminal';\n\n        if (this.options.kind) {\n            this.terminalKind = this.options.kind;\n        }\n\n        if (this.options.destroyTermOnClose === true) {\n            this.toDispose.push(Disposable.create(() =>\n                this.term.dispose()\n            ));\n        }\n\n        this.title.closable = true;\n        this.addClass('terminal-container');\n\n        this.term = new Terminal({\n            cursorBlink: this.preferences['terminal.integrated.cursorBlinking'],\n            cursorStyle: this.getCursorStyle(),\n            cursorWidth: this.preferences['terminal.integrated.cursorWidth'],\n            fontFamily: this.preferences['terminal.integrated.fontFamily'],\n            fontSize: this.preferences['terminal.integrated.fontSize'],\n            fontWeight: this.preferences['terminal.integrated.fontWeight'],\n            fontWeightBold: this.preferences['terminal.integrated.fontWeightBold'],\n            drawBoldTextInBrightColors: this.preferences['terminal.integrated.drawBoldTextInBrightColors'],\n            letterSpacing: this.preferences['terminal.integrated.letterSpacing'],\n            lineHeight: this.preferences['terminal.integrated.lineHeight'],\n            scrollback: this.preferences['terminal.integrated.scrollback'],\n            fastScrollSensitivity: this.preferences['terminal.integrated.fastScrollSensitivity'],\n            rendererType: this.getTerminalRendererType(this.preferences['terminal.integrated.rendererType']),\n            theme: this.themeService.theme\n        });\n\n        this.fitAddon = new FitAddon();\n        this.term.loadAddon(this.fitAddon);\n\n        this.hoverMessage = document.createElement('div');\n        this.hoverMessage.textContent = 'Cmd + click to follow link';\n        this.hoverMessage.style.position = 'fixed';\n        // TODO use `var(--theia-editorHoverWidget-foreground) with a newer Monaco version\n        this.hoverMessage.style.color = 'var(--theia-editorWidget-foreground)';\n        this.hoverMessage.style.backgroundColor = 'var(--theia-editorHoverWidget-background)';\n        this.hoverMessage.style.borderColor = 'var(--theia-editorHoverWidget-border)';\n        this.hoverMessage.style.borderWidth = '0.5px';\n        this.hoverMessage.style.borderStyle = 'solid';\n        this.hoverMessage.style.padding = '5px';\n        // Above the xterm.js canvas layers:\n        // https://github.com/xtermjs/xterm.js/blob/ff790236c1b205469f17a21246141f512d844295/src/renderer/Renderer.ts#L41-L46\n        this.hoverMessage.style.zIndex = '10';\n        // Initially invisible:\n        this.hoverMessage.style.display = 'none';\n        this.node.appendChild(this.hoverMessage);\n\n        this.toDispose.push(this.preferences.onPreferenceChanged(change => {\n            const lastSeparator = change.preferenceName.lastIndexOf('.');\n            if (lastSeparator > 0) {\n                let preferenceName = change.preferenceName.substr(lastSeparator + 1);\n                let preferenceValue = this.preferences[change.preferenceName];\n\n                if (preferenceName === 'rendererType') {\n                    const newRendererType: string = this.preferences[change.preferenceName] as string;\n                    if (newRendererType !== this.getTerminalRendererType(newRendererType)) {\n                        // given terminal renderer type is not supported or invalid\n                        preferenceValue = DEFAULT_TERMINAL_RENDERER_TYPE;\n                    }\n                }\n\n                // Convert the terminal preference into a valid `xterm` option.\n                if (preferenceName === 'cursorBlinking') {\n                    preferenceName = 'cursorBlink';\n                } else if (preferenceName === 'cursorStyle') {\n                    preferenceValue = this.getCursorStyle();\n                }\n\n                this.term.setOption(preferenceName, preferenceValue);\n                this.needsResize = true;\n                this.update();\n            }\n        }));\n\n        this.toDispose.push(this.themeService.onDidChange(() => this.term.setOption('theme', this.themeService.theme)));\n        this.attachCustomKeyEventHandler();\n        const titleChangeListenerDispose = this.term.onTitleChange((title: string) => {\n            if (this.options.useServerTitle) {\n                this.title.label = title;\n            }\n        });\n        this.toDispose.push(titleChangeListenerDispose);\n\n        this.toDispose.push(this.terminalWatcher.onTerminalError(({ terminalId, error }) => {\n            if (terminalId === this.terminalId) {\n                this.dispose();\n                this.onTermDidClose.fire(this);\n                this.onTermDidClose.dispose();\n                this.logger.error(`The terminal process terminated. Cause: ${error}`);\n            }\n        }));\n        this.toDispose.push(this.terminalWatcher.onTerminalExit(({ terminalId }) => {\n            if (terminalId === this.terminalId) {\n                this.dispose();\n                this.onTermDidClose.fire(this);\n                this.onTermDidClose.dispose();\n            }\n        }));\n        this.toDispose.push(this.toDisposeOnConnect);\n        this.toDispose.push(this.shellTerminalServer.onDidCloseConnection(() => {\n            const disposable = this.shellTerminalServer.onDidOpenConnection(() => {\n                disposable.dispose();\n                this.reconnectTerminalProcess();\n            });\n            this.toDispose.push(disposable);\n        }));\n        this.toDispose.push(this.onTermDidClose);\n        this.toDispose.push(this.onDidOpenEmitter);\n        this.toDispose.push(this.onDidOpenFailureEmitter);\n\n        const touchEndListener = (event: TouchEvent) => {\n            if (this.node.contains(event.target as Node)) {\n                this.lastTouchEnd = event;\n            }\n        };\n        document.addEventListener('touchend', touchEndListener, { passive: true });\n        this.onDispose(() => {\n            document.removeEventListener('touchend', touchEndListener);\n        });\n\n        this.toDispose.push(this.term.onSelectionChange(() => {\n            if (this.copyOnSelection) {\n                this.copyOnSelectionHandler.copy(this.term.getSelection());\n            }\n        }));\n\n        for (const contribution of this.terminalContributionProvider.getContributions()) {\n            contribution.onCreate(this);\n        }\n\n        this.searchBox = this.terminalSearchBoxFactory(this.term);\n        this.toDispose.push(this.searchBox);\n    }\n\n    get kind(): 'user' | string {\n        return this.terminalKind;\n    }\n\n    /**\n     * Get the cursor style compatible with `xterm`.\n     * @returns CursorStyle\n     */\n    private getCursorStyle(): CursorStyle {\n        const value = this.preferences['terminal.integrated.cursorStyle'];\n        return value === 'line' ? 'bar' : value;\n    }\n\n    /**\n     * Returns given renderer type if it is valid and supported or default renderer otherwise.\n     *\n     * @param terminalRendererType desired terminal renderer type\n     */\n    private getTerminalRendererType(terminalRendererType?: string | TerminalRendererType): RendererType {\n        if (terminalRendererType && isTerminalRendererType(terminalRendererType)) {\n            return terminalRendererType;\n        }\n        return DEFAULT_TERMINAL_RENDERER_TYPE;\n    }\n\n    showHoverMessage(x: number, y: number, message: string): void {\n        this.hoverMessage.innerText = message;\n        this.hoverMessage.style.display = 'inline';\n        this.hoverMessage.style.top = `${y - 30}px`;\n        this.hoverMessage.style.left = `${x - 60}px`;\n    }\n\n    hideHover(): void {\n        this.hoverMessage.style.display = 'none';\n    }\n\n    getTerminal(): Terminal {\n        return this.term;\n    }\n\n    getSearchBox(): TerminalSearchWidget {\n        return this.searchBox;\n    }\n\n    get cwd(): Promise<URI> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        if (this.terminalService.getById(this.id)) {\n            return this.shellTerminalServer.getCwdURI(this.terminalId)\n                .then(cwdUrl => new URI(cwdUrl));\n        }\n        return Promise.resolve(new URI());\n    }\n\n    get processId(): Promise<number> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessId(this.terminalId);\n    }\n\n    get processInfo(): Promise<TerminalProcessInfo> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessInfo(this.terminalId);\n    }\n\n    get terminalId(): number {\n        return this._terminalId;\n    }\n\n    get lastTouchEndEvent(): TouchEvent | undefined {\n        return this.lastTouchEnd;\n    }\n\n    onDispose(onDispose: () => void): void {\n        this.toDispose.push(Disposable.create(onDispose));\n    }\n\n    clearOutput(): void {\n        this.term.clear();\n    }\n\n    async hasChildProcesses(): Promise<boolean> {\n        return this.shellTerminalServer.hasChildProcesses(await this.processId);\n    }\n\n    storeState(): object {\n        this.closeOnDispose = false;\n        return { terminalId: this.terminalId, titleLabel: this.title.label };\n    }\n\n    restoreState(oldState: object): void {\n        if (this.restored === false) {\n            const state = oldState as { terminalId: number, titleLabel: string };\n            /* This is a workaround to issue #879 */\n            this.restored = true;\n            this.title.label = state.titleLabel;\n            this.start(state.terminalId);\n        }\n    }\n\n    /**\n     * Create a new shell terminal in the back-end and attach it to a\n     * new terminal widget.\n     * If id is provided attach to the terminal for this id.\n     */\n    async start(id?: number): Promise<number> {\n        this._terminalId = typeof id !== 'number' ? await this.createTerminal() : await this.attachTerminal(id);\n        this.resizeTerminalProcess();\n        this.connectTerminalProcess();\n        if (IBaseTerminalServer.validateId(this.terminalId)) {\n            this.onDidOpenEmitter.fire(undefined);\n            return this.terminalId;\n        }\n        this.onDidOpenFailureEmitter.fire(undefined);\n        throw new Error('Failed to start terminal' + (id ? ` for id: ${id}.` : '.'));\n    }\n\n    protected async attachTerminal(id: number): Promise<number> {\n        const terminalId = await this.shellTerminalServer.attach(id);\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            return terminalId;\n        }\n        this.logger.error(`Error attaching to terminal id ${id}, the terminal is most likely gone. Starting up a new terminal instead.`);\n        if (this.kind === 'user') {\n            return this.createTerminal();\n        } else {\n            return -1;\n        }\n    }\n\n    protected async createTerminal(): Promise<number> {\n        let rootURI = this.options.cwd;\n        if (!rootURI) {\n            const root = (await this.workspaceService.roots)[0];\n            rootURI = root && root.uri;\n        }\n        const { cols, rows } = this.term;\n\n        const terminalId = await this.shellTerminalServer.create({\n            shellPreferences: this.shellPreferences,\n            shell: this.options.shellPath,\n            args: this.options.shellArgs,\n            env: this.options.env,\n            rootURI,\n            cols,\n            rows\n        });\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            return terminalId;\n        }\n        throw new Error('Error creating terminal widget, see the backend error log for more information.');\n    }\n\n    processMessage(msg: Message): void {\n        super.processMessage(msg);\n        switch (msg.type) {\n            case 'fit-request':\n                this.onFitRequest(msg);\n                break;\n            default:\n                break;\n        }\n    }\n    protected onFitRequest(msg: Message): void {\n        super.onFitRequest(msg);\n        MessageLoop.sendMessage(this, Widget.ResizeMessage.UnknownSize);\n    }\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.term.focus();\n    }\n    protected onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.update();\n    }\n    protected onAfterAttach(msg: Message): void {\n        Widget.attach(this.searchBox, this.node);\n        super.onAfterAttach(msg);\n        this.update();\n    }\n    protected onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        this.needsResize = true;\n        this.update();\n    }\n\n    protected needsResize = true;\n    protected onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        if (!this.isVisible || !this.isAttached) {\n            return;\n        }\n\n        this.open();\n\n        if (this.needsResize) {\n            this.resizeTerminal();\n            this.needsResize = false;\n\n            this.resizeTerminalProcess();\n        }\n    }\n\n    // Device status code emitted by Xterm.js\n    // Check: https://github.com/xtermjs/xterm.js/blob/release/3.14/src/InputHandler.ts#L1055-L1082\n    protected readonly deviceStatusCodes = new Set(['\\u001B[>0;276;0c', '\\u001B[>85;95;0c', '\\u001B[>83;40003;0c', '\\u001B[?1;2c', '\\u001B[?6c']);\n\n    protected connectTerminalProcess(): void {\n        if (typeof this.terminalId !== 'number') {\n            return;\n        }\n        this.toDisposeOnConnect.dispose();\n        this.toDispose.push(this.toDisposeOnConnect);\n        const waitForConnection = this.waitForConnection = new Deferred<MessageConnection>();\n        this.webSocketConnectionProvider.listen({\n            path: `${terminalsPath}/${this.terminalId}`,\n            onConnection: connection => {\n                connection.onNotification('onData', (data: string) => this.write(data));\n\n                // Excludes the device status code emitted by Xterm.js\n                const sendData = (data?: string) => {\n                    if (data && !this.deviceStatusCodes.has(data)) {\n                        return connection.sendRequest('write', data);\n                    }\n                };\n\n                const disposable = this.term.onData(sendData);\n                connection.onDispose(() => disposable.dispose());\n\n                this.toDisposeOnConnect.push(connection);\n                connection.listen();\n                if (waitForConnection) {\n                    waitForConnection.resolve(connection);\n                }\n            }\n        }, { reconnecting: false });\n    }\n    protected async reconnectTerminalProcess(): Promise<void> {\n        if (typeof this.terminalId === 'number') {\n            await this.start(this.terminalId);\n        }\n    }\n\n    protected termOpened = false;\n    protected initialData = '';\n    protected open(): void {\n        if (this.termOpened) {\n            return;\n        }\n        this.term.open(this.node);\n        if (this.initialData) {\n            this.term.write(this.initialData);\n        }\n        this.termOpened = true;\n        this.initialData = '';\n\n        if (isFirefox) {\n            // The software scrollbars don't work with xterm.js, so we disable the scrollbar if we are on firefox.\n            if (this.term.element) {\n                (this.term.element.children.item(0) as HTMLElement).style.overflow = 'hidden';\n            }\n        }\n    }\n    protected write(data: string): void {\n        if (this.termOpened) {\n            this.term.write(data);\n        } else {\n            this.initialData += data;\n        }\n    }\n\n    sendText(text: string): void {\n        if (this.waitForConnection) {\n            this.waitForConnection.promise.then(connection =>\n                connection.sendRequest('write', text)\n            );\n        }\n    }\n\n    async executeCommand(commandOptions: CommandLineOptions): Promise<void> {\n        this.sendText(this.shellCommandBuilder.buildCommand(await this.processInfo, commandOptions) + '\\n');\n    }\n\n    scrollLineUp(): void {\n        this.term.scrollLines(-1);\n    }\n\n    scrollLineDown(): void {\n        this.term.scrollLines(1);\n    }\n\n    scrollToTop(): void {\n        this.term.scrollToTop();\n    }\n\n    scrollToBottom(): void {\n        this.term.scrollToBottom();\n    }\n\n    scrollPageUp(): void {\n        this.term.scrollPages(-1);\n    }\n\n    scrollPageDown(): void {\n        this.term.scrollPages(1);\n    }\n\n    resetTerminal(): void {\n        this.term.reset();\n    }\n\n    writeLine(text: string): void {\n        this.term.writeln(text);\n    }\n\n    get onTerminalDidClose(): Event<TerminalWidget> {\n        return this.onTermDidClose.event;\n    }\n\n    dispose(): void {\n        /* Close the backend terminal only when explicitly closing the terminal\n         * a refresh for example won't close it.  */\n        if (this.closeOnDispose === true && typeof this.terminalId === 'number') {\n            this.shellTerminalServer.close(this.terminalId);\n            this.onTermDidClose.fire(this);\n        }\n        super.dispose();\n    }\n\n    protected resizeTerminal(): void {\n        const geo = this.fitAddon.proposeDimensions();\n        const cols = geo.cols;\n        const rows = geo.rows - 1; // subtract one row for margin\n        this.term.resize(cols, rows);\n    }\n\n    protected resizeTerminalProcess(): void {\n        if (!IBaseTerminalServer.validateId(this.terminalId)\n            && !this.terminalService.getById(this.id)) {\n            return;\n        }\n        const { cols, rows } = this.term;\n        this.shellTerminalServer.resize(this.terminalId, cols, rows);\n    }\n\n    protected get enableCopy(): boolean {\n        return this.preferences['terminal.enableCopy'];\n    }\n\n    protected get enablePaste(): boolean {\n        return this.preferences['terminal.enablePaste'];\n    }\n\n    protected get shellPreferences(): IShellTerminalPreferences {\n        return {\n            shell: {\n                Windows: this.preferences['terminal.integrated.shell.windows'],\n                Linux: this.preferences['terminal.integrated.shell.linux'],\n                OSX: this.preferences['terminal.integrated.shell.osx'],\n            },\n            shellArgs: {\n                Windows: this.preferences['terminal.integrated.shellArgs.windows'],\n                Linux: this.preferences['terminal.integrated.shellArgs.linux'],\n                OSX: this.preferences['terminal.integrated.shellArgs.osx'],\n            }\n        };\n    }\n\n    protected customKeyHandler(event: KeyboardEvent): boolean {\n        const keyBindings = KeyCode.createKeyCode(event).toString();\n        const ctrlCmdCopy = (isOSX && keyBindings === 'meta+c') || (!isOSX && keyBindings === 'ctrl+c');\n        const ctrlCmdPaste = (isOSX && keyBindings === 'meta+v') || (!isOSX && keyBindings === 'ctrl+v');\n        if (ctrlCmdCopy && this.enableCopy && this.term.hasSelection()) {\n            return false;\n        }\n        if (ctrlCmdPaste && this.enablePaste) {\n            return false;\n        }\n        return true;\n    }\n\n    protected get copyOnSelection(): boolean {\n        return this.preferences['terminal.integrated.copyOnSelection'];\n    }\n\n    protected attachCustomKeyEventHandler(): void {\n        this.term.attachCustomKeyEventHandler(e => this.customKeyHandler(e));\n    }\n\n    setTitle(title: string): void {\n        this.title.caption = title;\n        this.title.label = title;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { JsonRpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { Disposable } from '@theia/core';\n\nexport interface TerminalProcessInfo {\n    executable: string\n    arguments: string[]\n}\n\nexport interface IBaseTerminalServerOptions { }\n\nexport interface IBaseTerminalServer extends JsonRpcServer<IBaseTerminalClient> {\n    create(IBaseTerminalServerOptions: object): Promise<number>;\n    getProcessId(id: number): Promise<number>;\n    getProcessInfo(id: number): Promise<TerminalProcessInfo>;\n    getCwdURI(id: number): Promise<string>;\n    resize(id: number, cols: number, rows: number): Promise<void>;\n    attach(id: number): Promise<number>;\n    close(id: number): Promise<void>;\n    getDefaultShell(): Promise<string>;\n}\nexport namespace IBaseTerminalServer {\n    export function validateId(id?: number): boolean {\n        return typeof id === 'number' && id !== -1;\n    }\n}\n\nexport interface IBaseTerminalExitEvent {\n    terminalId: number;\n\n    // Exactly one of code and signal will be set.\n    code?: number;\n    signal?: string;\n}\n\nexport interface IBaseTerminalErrorEvent {\n    terminalId: number;\n    error: Error\n}\n\nexport interface IBaseTerminalClient {\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void;\n    onTerminalError(event: IBaseTerminalErrorEvent): void;\n}\n\nexport class DispatchingBaseTerminalClient {\n\n    protected readonly clients = new Set<IBaseTerminalClient>();\n\n    push(client: IBaseTerminalClient): Disposable {\n        this.clients.add(client);\n        return Disposable.create(() => this.clients.delete(client));\n    }\n\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalExitChanged(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    onTerminalError(event: IBaseTerminalErrorEvent): void {\n\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalError(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { JsonRpcProxy } from '@theia/core';\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\nimport { OS } from '@theia/core/lib/common/os';\n\nexport const IShellTerminalServer = Symbol('IShellTerminalServer');\n\nexport interface IShellTerminalServer extends IBaseTerminalServer {\n    hasChildProcesses(processId: number | undefined): Promise<boolean>;\n}\n\nexport const shellTerminalPath = '/services/shell-terminal';\n\nexport type ShellTerminalOSPreferences<T> = {\n    [key in OS.Type]: T\n};\n\nexport interface IShellTerminalPreferences {\n    shell: ShellTerminalOSPreferences<string | undefined>,\n    shellArgs: ShellTerminalOSPreferences<string[]>\n};\n\nexport interface IShellTerminalServerOptions extends IBaseTerminalServerOptions {\n    shellPreferences?: IShellTerminalPreferences,\n    shell?: string,\n    args?: string[],\n    rootURI?: string,\n    cols?: number,\n    rows?: number,\n    env?: { [key: string]: string | null };\n}\n\nexport const ShellTerminalServerProxy = Symbol('ShellTerminalServerProxy');\nexport type ShellTerminalServerProxy = JsonRpcProxy<IShellTerminalServer>;\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\n\nexport const ITerminalServer = Symbol('ITerminalServer');\n\nexport const terminalPath = '/services/terminal';\nexport const terminalsPath = '/services/terminals';\n\nexport interface ITerminalServer extends IBaseTerminalServer {\n    create(ITerminalServerOptions: object): Promise<number>;\n}\n\nexport interface ITerminalServerOptions extends IBaseTerminalServerOptions {\n    command: string,\n    args?: string[],\n    options?: object\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { IBaseTerminalClient, IBaseTerminalExitEvent, IBaseTerminalErrorEvent } from './base-terminal-protocol';\n\n@injectable()\nexport class TerminalWatcher {\n\n    getTerminalClient(): IBaseTerminalClient {\n        const exitEmitter = this.onTerminalExitEmitter;\n        const errorEmitter = this.onTerminalErrorEmitter;\n        return {\n            onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n                exitEmitter.fire(event);\n            },\n            onTerminalError(event: IBaseTerminalErrorEvent): void {\n                errorEmitter.fire(event);\n            }\n        };\n    }\n\n    private onTerminalExitEmitter = new Emitter<IBaseTerminalExitEvent>();\n    private onTerminalErrorEmitter = new Emitter<IBaseTerminalErrorEvent>();\n\n    get onTerminalExit(): Event<IBaseTerminalExitEvent> {\n        return this.onTerminalExitEmitter.event;\n    }\n\n    get onTerminalError(): Event<IBaseTerminalErrorEvent> {\n        return this.onTerminalErrorEmitter.event;\n    }\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!./terminal-search.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!./terminal-search.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!./terminal-search.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}