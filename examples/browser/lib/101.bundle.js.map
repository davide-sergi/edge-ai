{"version":3,"sources":["webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/http-client/src/browser/http-client-contribution.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/http-client/src/browser/http-client-frontend-module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wGAA+C;AAC/C,4GAAmI;AACnI,+GAAsD;AAEtD,IAAM,KAAK,GAAG,mBAAO,CAAC,gDAAO,CAAC,CAAC;AAC/B,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,mBAAO,CAAC,6EAAyB,CAAC,CAAC;AAE/C,yBAAiB,GAAG;IAC7B,EAAE,EAAE,oBAAoB;IACxB,KAAK,EAAE,mBAAmB;CAC7B,CAAC;AAGF;IAEI,uCAC6C,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IACvE,CAAC;IAEL,wDAAgB,GAAhB,UAAiB,QAAyB;QAA1C,iBASC;QARG,QAAQ,CAAC,eAAe,CAAC,yBAAiB,EAAE;YACxC,OAAO,EAAE,UAAC,OAAO;gBACb,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;gBACjD,IAAI,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBAC9C,OAAO,QAAQ,CAAC;YACpB,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAfQ,6BAA6B;QADzC,sBAAU,EAAE;QAIJ,6BAAM,CAAC,uBAAc,CAAC;yCAAkC,uBAAc;OAHlE,6BAA6B,CAgBzC;IAAD,oCAAC;CAAA;AAhBY,sEAA6B;AAmB1C;IAAA;IAQA,CAAC;IANG,kDAAa,GAAb,UAAc,KAAwB;QAClC,KAAK,CAAC,kBAAkB,CAAC,qBAAW,CAAC,SAAS,EAAE;YAC5C,SAAS,EAAE,yBAAiB,CAAC,EAAE;YAC/B,KAAK,EAAE,yBAAiB,CAAC,KAAK;SACjC,CAAC,CAAC;IACP,CAAC;IAPQ,0BAA0B;QADtC,sBAAU,EAAE;OACA,0BAA0B,CAQtC;IAAD,iCAAC;CAAA;AARY,gEAA0B;;;;;;;;;;;;;;;;;;;AChCvC;;GAEG;AACH,6JAAuG;AACvG,4GAGgC;AAChC,wGAA4C;AAE5C,kBAAe,IAAI,2BAAe,CAAC,cAAI;IACnC,sCAAsC;IACtC,IAAI,CAAC,4BAAmB,CAAC,CAAC,EAAE,CAAC,wDAA6B,CAAC,CAAC;IAC5D,IAAI,CAAC,yBAAgB,CAAC,CAAC,EAAE,CAAC,qDAA0B,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC","file":"101.bundle.js","sourcesContent":["import { injectable, inject } from \"inversify\";\nimport { CommandContribution, CommandRegistry, MenuContribution, MenuModelRegistry, MessageService } from \"@theia/core/lib/common\";\nimport { CommonMenus } from \"@theia/core/lib/browser\";\n\nconst axios = require(\"axios\");\naxios.defaults.adapter = require('axios/lib/adapters/http');\n\nexport const HttpClientCommand = {\n    id: 'HttpClient.command',\n    label: \"Send HTTP request\"\n};\n\n@injectable()\nexport class HttpClientCommandContribution implements CommandContribution {\n\n    constructor(\n        @inject(MessageService) private readonly messageService: MessageService,\n    ) { }\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(HttpClientCommand, {\n            execute: (options) => {\n                this.messageService.info('Sending HTTP request');\n                let response = axios.request(options[0]);\n                this.messageService.info('HTTP request sent');\n                return response;\n            }\n        });\n    }\n}\n\n@injectable()\nexport class HttpClientMenuContribution implements MenuContribution {\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(CommonMenus.EDIT_FIND, {\n            commandId: HttpClientCommand.id,\n            label: HttpClientCommand.label\n        });\n    }\n}\n","/**\n * Generated using theia-extension-generator\n */\nimport { HttpClientCommandContribution, HttpClientMenuContribution } from './http-client-contribution';\nimport {\n    CommandContribution,\n    MenuContribution\n} from \"@theia/core/lib/common\";\nimport { ContainerModule } from \"inversify\";\n\nexport default new ContainerModule(bind => {\n    // add your contribution bindings here\n    bind(CommandContribution).to(HttpClientCommandContribution);\n    bind(MenuContribution).to(HttpClientMenuContribution);\n});\n"],"sourceRoot":""}