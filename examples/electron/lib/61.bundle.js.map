{"version":3,"sources":["webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/style/index.css","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/style/preference-array.css","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/style/preference-context-menu.css","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/style/preference-object.css","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/style/search-input.css","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/core/src/browser/clipboard-service.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/folder-preference-provider.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/folders-preferences-provider.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/preference-bindings.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/preference-contribution.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/preference-frontend-module.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/preference-tree-provider.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/preferences-decorator-service.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/preferences-decorator.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/preferences-frontend-application-contribution.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/preferences-monaco-contribution.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/util/preference-event-service.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/util/preference-scope-command-manager.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/util/preference-tree-generator.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/util/preference-types.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/components/index.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/components/preference-array-input.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/components/preference-boolean-input.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/components/preference-json-input.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/components/preference-number-input.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/components/preference-select-input.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/components/preference-string-input.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/components/single-preference-display-factory.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/components/single-preference-wrapper.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/preference-editor-widget.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/preference-scope-tabbar-widget.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/preference-searchbar-widget.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/preference-tree-widget.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/preference-widget-bindings.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/views/preference-widget.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/workspace-file-preference-provider.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/workspace-preference-provider.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/preferences/src/browser/style/index.css?b733"],"names":[],"mappings":"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","file":"61.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../../node_modules/css-loader/index.js!./preference-context-menu.css\"), \"\");\nexports.i(require(\"-!../../../../../node_modules/css-loader/index.js!./preference-array.css\"), \"\");\nexports.i(require(\"-!../../../../../node_modules/css-loader/index.js!./preference-object.css\"), \"\");\nexports.i(require(\"-!../../../../../node_modules/css-loader/index.js!./search-input.css\"), \"\");\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2019 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n#preferences_container_widget .p-SplitPanel-handle {\\n    border-right: var(--theia-border-width) solid var(--theia-editorGroup-border);\\n}\\n\\n#preferences_container_widget .p-TabBar-tabIcon {\\n    align-items: center;\\n    display: flex;\\n    line-height: var(--theia-content-line-height) !important;\\n}\\n\\n/* UI View */\\n\\n.theia-settings-container {\\n    max-width: 1000px;\\n    padding-top: 11px;\\n    display: grid;\\n    grid-template-areas:\\n        \\\"header header\\\"\\n        \\\"tabbar tabbar\\\"\\n        \\\"navbar editor\\\";\\n    grid-template-columns: minmax(150px, 280px) 1fr;\\n    grid-template-rows: 45px 45px 1fr;\\n}\\n\\n.theia-settings-container .settings-no-results-announcement {\\n    font-weight: bold;\\n    font-size: var(--theia-ui-font-size3);\\n    padding-left: var(--theia-ui-padding);\\n    margin: calc(2*var(--theia-ui-padding)) 0px;\\n}\\n\\n.theia-settings-container .preferences-searchbar-widget {\\n    grid-area: header;\\n    margin: 3px 24px 0px 24px;\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget {\\n    grid-area: tabbar;\\n    margin: 3px 24px 0px 24px;\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget.with-shadow {\\n    box-shadow: 0px 6px 5px -5px var(--theia-widget-shadow);\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget .preferences-scope-tab .p-TabBar-tabIcon:not(.preferences-folder-dropdown-icon) {\\n    display: none;\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab {\\n    background: var(--theia-editor-background);\\n    border-right: unset;\\n    border-bottom: var(--theia-border-width) solid var(--theia-tab-unfocusedInactiveForeground);\\n}\\n\\n#theia-main-content-panel .theia-settings-container .tabbar-underline {\\n    width: 100%;\\n    position:absolute;\\n    top: calc(var(--theia-private-horizontal-tab-height) + var(--theia-private-horizontal-tab-scrollbar-rail-height) / 2 - 1px);\\n    border-top: 1px solid var(--theia-tab-unfocusedInactiveForeground);\\n    z-index: -1;\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.p-mod-current {\\n    color: var(--theia-panelTitle-activeForeground);\\n    border-bottom: var(--theia-border-width) solid var(--theia-panelTitle-activeBorder);\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.p-mod-current:not(.theia-mod-active) {\\n    border-top: unset;\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.preferences-folder-tab .p-TabBar-tabLabel::after {\\n    content: 'Folder';\\n    padding-left: 4px;\\n    font-size: 0.8em;\\n    color: var(--theia-tab-inactiveForeground);\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.preferences-folder-dropdown {\\n    position: relative;\\n    padding-right: 23px;\\n}\\n\\n.preferences-folder-dropdown-icon {\\n    background: var(--theia-icon-chevron-right) center center no-repeat;\\n    transform: rotate(90deg);\\n    width: 15px;\\n    height: 15px;\\n    position: absolute;\\n    right: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .preferences-editor-widget {\\n    grid-area: editor;\\n    padding: 0 24px;\\n}\\n\\n.theia-settings-container .preferences-editor-widget.full-pane {\\n    grid-column-start: 1;\\n    grid-column-end: 3;\\n}\\n\\n.theia-settings-container .preferences-tree-widget {\\n    grid-area: navbar;\\n    padding-left: 31px;\\n}\\n\\n.theia-settings-container .preferences-tree-widget .theia-mod-selected {\\n    font-weight: bold;\\n}\\n\\n.theia-settings-container .preferences-tree-widget .theia-TreeNodeSegment {\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    max-width: 90%;\\n}\\n\\n.theia-settings-container .settings-main {\\n    height: 100%;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.theia-settings-container .settings-main-scroll-container {\\n    position: relative;\\n    width: 100%;\\n    flex: 1 1 auto;\\n}\\n\\n.theia-settings-container .settings-main-sticky-misc {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    flex: 0 1 50px;\\n}\\n\\n.theia-settings-container .settings-main-sticky-misc .json-button>i {\\n    display: inline-block;\\n    background: var(--theia-icon-open-json) no-repeat;\\n    background-position-y: 1px;\\n    -webkit-filter: invert(1);\\n    filter: invert(1);\\n    height: var(--theia-icon-size);\\n    width: var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .settings-scope>label {\\n    margin-right: 12px;\\n}\\n\\n.theia-settings-container .settings-section {\\n    padding-left: 0;\\n    padding-top: var(--theia-ui-padding);\\n    margin-top: calc(var(--theia-ui-padding) * -1);\\n}\\n\\n.theia-settings-container .settings-section a {\\n    border: none;\\n    color: var(--theia-foreground);\\n    font-weight: 500;\\n    outline: 0;\\n    text-decoration: none;\\n}\\n\\n.theia-settings-container .settings-section a:hover {\\n    text-decoration: underline;\\n}\\n\\n\\n\\n.theia-settings-container .settings-section-title {\\n    font-weight: bold;\\n    font-size: var(--theia-ui-font-size3);\\n    padding-left: calc(2 * var(--theia-ui-padding));\\n}\\n\\n.theia-settings-container .settings-section>li {\\n    list-style-type: none;\\n    margin: var(--theia-ui-padding) 0px;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: justify;\\n    -ms-flex-pack: justify;\\n    justify-content: space-between;\\n    -webkit-box-align: start;\\n    -ms-flex-align: start;\\n    align-items: start;\\n}\\n\\n.theia-settings-container li.single-pref {\\n    list-style-type: none;\\n    margin: 12px 0 18px 0;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    box-sizing: border-box;\\n    padding-left: calc(2 * var(--theia-ui-padding));\\n    position: relative;\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter {\\n    position: absolute;\\n    height: 100%;\\n    left: -16px;\\n    padding-right: 4px;\\n    border-right: 2px hidden;\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter .settings-context-menu-btn {\\n    opacity: 0;\\n    transition: opacity .5s;\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter .settings-context-menu-btn.show-cog {\\n    opacity: 1;\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter.theia-mod-item-modified {\\n    border-right: 2px solid var(--theia-settings-modifiedItemIndicator);\\n}\\n\\n.theia-settings-container li.single-pref input[type=\\\"text\\\"] {\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n}\\n\\n.theia-settings-container .settings-main {\\n    margin: 0;\\n}\\n\\n.theia-settings-container .settings-main-sticky {\\n    top: 0;\\n    padding-top: calc(var(--theia-ui-padding));\\n    margin-top: calc(var(--theia-ui-padding) * -1);\\n    background-color: var(--theia-editor-background);\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n    z-index: 1000;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-around;\\n}\\n\\n.theia-settings-container .pref-name {\\n    padding: 0;\\n    font-weight: bold;\\n}\\n\\n.preferences-tree-spacer {\\n    padding-left: calc(var(--theia-ui-padding)/2);\\n    padding-right: calc(var(--theia-ui-padding)/2);\\n    min-width: var(--theia-icon-size);\\n    min-height: var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .pref-description {\\n    padding: var(--theia-ui-padding) 0;\\n    color: var(--theia-descriptionForeground);\\n    line-height: 18px;\\n}\\n\\n.theia-settings-container .theia-select:focus {\\n    outline-width: 1px;\\n    outline-style: solid;\\n    outline-offset: -1px;\\n    opacity: 1 !important;\\n    outline-color: var(--theia-focusBorder);\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"text\\\"] {\\n    border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"checkbox\\\"]:focus {\\n    outline-width: 2px;\\n}\\n\\n.theia-settings-container .pref-content-container a.theia-json-input {\\n    text-decoration: underline;\\n}\\n\\n.theia-settings-container .pref-content-container a.theia-json-input:hover {\\n    text-decoration: none;\\n    cursor: pointer;\\n}\\n\\n.theia-settings-container .pref-content-container {\\n    width: 100%;\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input {\\n    padding: var(--theia-ui-padding) 0;\\n    width: 100%;\\n    max-width: 320px;\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input>select,\\n.theia-settings-container .pref-content-container .pref-input>input {\\n    width: 100%;\\n}\\n\\n\\n/* These specifications for the boolean class ensure that the\\n    checkbox is rendered to the left of the description.\\n*/\\n.theia-settings-container .pref-content-container.boolean {\\n    display: grid;\\n    grid-template-columns: 30px 1fr;\\n}\\n\\n.theia-settings-container .pref-content-container.boolean .pref-description {\\n    grid-column-start: 2;\\n    grid-row-start: 1;\\n}\\n\\n.theia-settings-container .pref-content-container.boolean .pref-input {\\n    grid-column-start: 1;\\n    grid-row-start: 1;\\n    margin: 0;\\n}\\n\\n.theia-settings-container .settings-section>li:last-child {\\n    margin-bottom: 20px;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .preference-array {\\n  list-style: none;\\n  padding   : 0;\\n}\\n\\n.theia-settings-container .preference-array-element {\\n  display          : -webkit-box;\\n  display          : -ms-flexbox;\\n  display          : flex;\\n  -webkit-box-pack : justify;\\n  -ms-flex-pack    : justify;\\n  justify-content  : space-between;\\n  -webkit-box-align: center;\\n  -ms-flex-align   : center;\\n  align-items      : center;\\n  padding          : calc(var(--thiea-ui-padding) / 2) var(--thiea-ui-padding);\\n  border-bottom    : var(--theia-panel-border) 2px solid;\\n}\\n\\n.theia-settings-container .pref-input li:nth-last-child(2) {\\n  border-bottom: none;\\n}\\n\\n.theia-settings-container .pref-input li:last-child {\\n  display          : -webkit-box;\\n  display          : -ms-flexbox;\\n  display          : flex;\\n  -webkit-box-align: center;\\n  -ms-flex-align   : center;\\n  align-items      : center;\\n}\\n\\n.theia-settings-container .preference-array-element:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n}\\n\\n.theia-settings-container .preference-array-element-btn {\\n  width            : 1.5em;\\n  height           : 1.5em;\\n  display          : -webkit-box;\\n  display          : -ms-flexbox;\\n  display          : flex;\\n  -webkit-box-pack : center;\\n  -ms-flex-pack    : center;\\n  justify-content  : center;\\n  -webkit-box-align: center;\\n  -ms-flex-align   : center;\\n  align-items      : center;\\n}\\n\\n.theia-settings-container .preference-array-element .preference-array-element-btn {\\n  opacity: 0;\\n}\\n\\n.theia-settings-container .preference-array-element:hover .preference-array-element-btn {\\n  opacity: 1;\\n}\\n\\n.theia-settings-container .preference-array-element-btn:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n  cursor          : pointer;\\n}\\n\\n.theia-settings-container .preference-array .add-btn {\\n  margin-left : calc((var(--theia-icon-size) + 4px) * -1);\\n  margin-right: 4px;\\n  width       : var(--theia-icon-size);\\n  height      : var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .preference-array-clear-item {\\n  background: var(--theia-icon-close) no-repeat;\\n  width     : var(--theia-icon-size);\\n  height    : var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .preference-array-input {\\n  padding-right: calc(var(--theia-icon-size) + var(--thiea-ui-padding));\\n  width        : 100%;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .settings-context-menu-container {\\n  position: relative;\\n  padding-left: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .settings-context-menu-btn {\\n  cursor: pointer;\\n}\\n\\n.theia-settings-container .settings-context-menu {\\n  position: absolute;\\n  width: var(--theia-settingsSidebar-width);\\n  list-style: none;\\n  padding: var(--theia-ui-padding);\\n  bottom: calc(100% + 10px);\\n  left: -10px;\\n  z-index: 9999;\\n  background-color: var(--theia-menu-background);\\n}\\n\\n.theia-settings-container .settings-context-menu:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  left: 10px;\\n  bottom: -10px;\\n  width: 0;\\n  height: 0;\\n  border-left: 10px solid transparent;\\n  border-right: 10px solid transparent;\\n  border-top: 10px solid var(--theia-menu-background);\\n}\\n\\n.theia-settings-container .settings-context-menu li {\\n  padding: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .settings-context-menu li:hover {\\n  background-color: var(--theia-menu-selectionBackground);\\n}\\n\\n.theia-settings-container .settings-context-menu i {\\n  padding-right: var(--theia-ui-padding);\\n  width: var(--theia-icon-size);\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n}\\n\\n.theia-settings-container .pref-context-menu-btn {\\n  margin-left: 5px;\\n}\\n\\n.theia-settings-container .pref-context-menu-btn:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .object-preference-input-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n  -ms-flex-pack: justify;\\n  justify-content: space-between;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n}\\n\\n.theia-settings-container .object-preference-input {\\n  width: 100%;\\n  max-height: 250px;\\n  resize: none;\\n  color: var(--theia-settings-textInputForeground);\\n  background-color: var(--theia-settings-textInputBackground);\\n  border-color: var(--theia-panel-border);\\n  font-size: var(--theia-code-font-size);\\n  margin-bottom: 10px;\\n}\\n\\n.theia-settings-container .object-preference-input-btn-toggle {\\n  padding: 0 calc(var(--theia-ui-padding) / 2);\\n}\\n\\n.theia-settings-container .object-preference-input-btn-toggle-icon {\\n  display: inline-block;\\n  background: var(--theia-icon-open-json) no-repeat;\\n  background-position-y: 1px;\\n  height: var(--theia-icon-size);\\n  width: var(--theia-icon-size);\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .settings-search-container {\\n  width: 100%;\\n  position: relative;\\n}\\n\\n.theia-settings-container .settings-search-container .settings-search-input {\\n  width: 100%;\\n  text-indent: 8px;\\n  padding: calc(var(--theia-ui-padding) / 2) 0;\\n  box-sizing: border-box;\\n  border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n.theia-settings-container .settings-search-container .settings-search-icon {\\n  position: absolute;\\n  height: 100%;\\n  left: 8px;\\n  font-size: var(--theia-ui-font-size0);\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: center;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n}\\n\", \"\"]);\n\n// exports\n","/********************************************************************************\n * Copyright (C) 2019 RedHat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { MaybePromise } from '../common/types';\n\nexport const ClipboardService = Symbol('ClipboardService');\nexport interface ClipboardService {\n    readText(): MaybePromise<string>;\n    writeText(value: string): MaybePromise<void>;\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceScope } from '@theia/core/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { SectionPreferenceProvider } from './section-preference-provider';\n\nexport const FolderPreferenceProviderFactory = Symbol('FolderPreferenceProviderFactory');\nexport interface FolderPreferenceProviderFactory {\n    (uri: URI, section: string, folder: FileStat): FolderPreferenceProvider;\n}\n\nexport const FolderPreferenceProviderFolder = Symbol('FolderPreferenceProviderFolder');\nexport interface FolderPreferenceProviderOptions {\n    readonly configUri: URI;\n    readonly sectionName: string | undefined;\n}\n\n@injectable()\nexport class FolderPreferenceProvider extends SectionPreferenceProvider {\n\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(FolderPreferenceProviderFolder) protected readonly folder: FileStat;\n\n    private _folderUri: URI;\n\n    get folderUri(): URI {\n        if (!this._folderUri) {\n            this._folderUri = new URI(this.folder.uri);\n        }\n        return this._folderUri;\n    }\n    protected getScope(): PreferenceScope {\n        if (!this.workspaceService.isMultiRootWorkspaceOpened) {\n            // when FolderPreferenceProvider is used as a delegate of WorkspacePreferenceProvider in a one-folder workspace\n            return PreferenceScope.Workspace;\n        }\n        return PreferenceScope.Folder;\n    }\n\n    getDomain(): string[] {\n        return [this.folderUri.toString()];\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceProvider, PreferenceResolveResult } from '@theia/core/lib/browser/preferences/preference-provider';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { FolderPreferenceProvider, FolderPreferenceProviderFactory } from './folder-preference-provider';\nimport { FileStat } from '@theia/filesystem/lib/common';\n\n@injectable()\nexport class FoldersPreferencesProvider extends PreferenceProvider {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(FolderPreferenceProviderFactory)\n    protected readonly folderPreferenceProviderFactory: FolderPreferenceProviderFactory;\n\n    @inject(PreferenceConfigurations)\n    protected readonly configurations: PreferenceConfigurations;\n\n    protected readonly providers = new Map<string, FolderPreferenceProvider>();\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        await this.workspaceService.roots;\n\n        this.updateProviders();\n        this.workspaceService.onWorkspaceChanged(() => this.updateProviders());\n\n        const readyPromises: Promise<void>[] = [];\n        for (const provider of this.providers.values()) {\n            readyPromises.push(provider.ready.catch(e => console.error(e)));\n        }\n        Promise.all(readyPromises).then(() => this._ready.resolve());\n    }\n\n    protected updateProviders(): void {\n        const roots = this.workspaceService.tryGetRoots();\n        const toDelete = new Set(this.providers.keys());\n        for (const folder of roots) {\n            for (const configPath of this.configurations.getPaths()) {\n                for (const configName of [...this.configurations.getSectionNames(), this.configurations.getConfigName()]) {\n                    const sectionUri = this.configurations.createUri(new URI(folder.uri), configPath, configName);\n                    const sectionKey = sectionUri.toString();\n                    toDelete.delete(sectionKey);\n                    if (!this.providers.has(sectionKey)) {\n                        const provider = this.createProvider(sectionUri, configName, folder);\n                        this.providers.set(sectionKey, provider);\n                    }\n                }\n            }\n        }\n        for (const key of toDelete) {\n            const provider = this.providers.get(key);\n            if (provider) {\n                this.providers.delete(key);\n                provider.dispose();\n            }\n        }\n    }\n\n    getConfigUri(resourceUri?: string): URI | undefined {\n        for (const provider of this.getFolderProviders(resourceUri)) {\n            const configUri = provider.getConfigUri(resourceUri);\n            if (this.configurations.isConfigUri(configUri)) {\n                return configUri;\n            }\n        }\n        return undefined;\n    }\n\n    getContainingConfigUri(resourceUri?: string): URI | undefined {\n        for (const provider of this.getFolderProviders(resourceUri)) {\n            const configUri = provider.getConfigUri();\n            if (this.configurations.isConfigUri(configUri) && provider.contains(resourceUri)) {\n                return configUri;\n            }\n        }\n        return undefined;\n    }\n\n    getDomain(): string[] {\n        return this.workspaceService.tryGetRoots().map(root => root.uri);\n    }\n\n    resolve<T>(preferenceName: string, resourceUri?: string): PreferenceResolveResult<T> {\n        const result: PreferenceResolveResult<T> = {};\n        const groups = this.groupProvidersByConfigName(resourceUri);\n        for (const group of groups.values()) {\n            for (const provider of group) {\n                const { value, configUri } = provider.resolve<T>(preferenceName, resourceUri);\n                if (configUri && value !== undefined) {\n                    result.configUri = configUri;\n                    result.value = PreferenceProvider.merge(result.value as any, value as any) as any;\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    getPreferences(resourceUri?: string): { [p: string]: any } {\n        let result = {};\n        const groups = this.groupProvidersByConfigName(resourceUri);\n        for (const group of groups.values()) {\n            for (const provider of group) {\n                if (provider.getConfigUri(resourceUri)) {\n                    const preferences = provider.getPreferences();\n                    result = PreferenceProvider.merge(result, preferences) as any;\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    async setPreference(preferenceName: string, value: any, resourceUri?: string): Promise<boolean> {\n        const sectionName = preferenceName.split('.', 1)[0];\n        const configName = this.configurations.isSectionName(sectionName) ? sectionName : this.configurations.getConfigName();\n\n        const providers = this.getFolderProviders(resourceUri);\n        let configPath: string | undefined;\n\n        const iterator: (() => FolderPreferenceProvider | undefined)[] = [];\n        for (const provider of providers) {\n            if (configPath === undefined) {\n                const configUri = provider.getConfigUri(resourceUri);\n                if (configUri) {\n                    configPath = this.configurations.getPath(configUri);\n                }\n            }\n            if (this.configurations.getName(provider.getConfigUri()) === configName) {\n                iterator.push(() => {\n                    if (provider.getConfigUri(resourceUri)) {\n                        return provider;\n                    }\n                    iterator.push(() => {\n                        if (this.configurations.getPath(provider.getConfigUri()) === configPath) {\n                            return provider;\n                        }\n                        iterator.push(() => provider);\n                    });\n                });\n            }\n        }\n\n        let next = iterator.shift();\n        while (next) {\n            const provider = next();\n            if (provider) {\n                if (await provider.setPreference(preferenceName, value, resourceUri)) {\n                    return true;\n                }\n            }\n            next = iterator.shift();\n        }\n        return false;\n    }\n\n    protected groupProvidersByConfigName(resourceUri?: string): Map<string, FolderPreferenceProvider[]> {\n        const groups = new Map<string, FolderPreferenceProvider[]>();\n        const providers = this.getFolderProviders(resourceUri);\n        for (const configName of [this.configurations.getConfigName(), ...this.configurations.getSectionNames()]) {\n            const group = [];\n            for (const provider of providers) {\n                if (this.configurations.getName(provider.getConfigUri()) === configName) {\n                    group.push(provider);\n                }\n            }\n            groups.set(configName, group);\n        }\n        return groups;\n    }\n\n    protected getFolderProviders(resourceUri?: string): FolderPreferenceProvider[] {\n        if (!resourceUri) {\n            return [];\n        }\n        const resourcePath = new URI(resourceUri).path;\n        let folder: Readonly<{ relativity: number, uri?: string }> = { relativity: Number.MAX_SAFE_INTEGER };\n        const providers = new Map<string, FolderPreferenceProvider[]>();\n        for (const provider of this.providers.values()) {\n            const uri = provider.folderUri.toString();\n            const folderProviders = (providers.get(uri) || []);\n            folderProviders.push(provider);\n            providers.set(uri, folderProviders);\n\n            // in case we have nested folders mounted as workspace roots, select the innermost enclosing folder\n            const relativity = provider.folderUri.path.relativity(resourcePath);\n            if (relativity >= 0 && folder.relativity > relativity) {\n                folder = { relativity, uri };\n            }\n        }\n        return folder.uri && providers.get(folder.uri) || [];\n    }\n\n    protected createProvider(uri: URI, section: string, folder: FileStat): FolderPreferenceProvider {\n        const provider = this.folderPreferenceProviderFactory(uri, section, folder);\n        this.toDispose.push(provider);\n        this.toDispose.push(provider.onDidPreferencesChanged(change => {\n            this.onDidPreferencesChangedEmitter.fire(change);\n        }\n        ));\n        return provider;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Container, interfaces } from 'inversify';\nimport { PreferenceProvider, PreferenceScope } from '@theia/core/lib/browser/preferences';\nimport { UserPreferenceProvider, UserPreferenceProviderFactory } from './user-preference-provider';\nimport { WorkspacePreferenceProvider } from './workspace-preference-provider';\nimport { WorkspaceFilePreferenceProvider, WorkspaceFilePreferenceProviderFactory, WorkspaceFilePreferenceProviderOptions } from './workspace-file-preference-provider';\nimport { FoldersPreferencesProvider } from './folders-preferences-provider';\nimport { FolderPreferenceProvider, FolderPreferenceProviderFactory, FolderPreferenceProviderFolder } from './folder-preference-provider';\nimport { UserConfigsPreferenceProvider } from './user-configs-preference-provider';\nimport { SectionPreferenceProviderUri, SectionPreferenceProviderSection } from './section-preference-provider';\n\nexport function bindWorkspaceFilePreferenceProvider(bind: interfaces.Bind): void {\n    bind(WorkspaceFilePreferenceProviderFactory).toFactory(ctx => (options: WorkspaceFilePreferenceProviderOptions) => {\n        const child = new Container({ defaultScope: 'Singleton' });\n        child.parent = ctx.container;\n        child.bind(WorkspaceFilePreferenceProvider).toSelf();\n        child.bind(WorkspaceFilePreferenceProviderOptions).toConstantValue(options);\n        return child.get(WorkspaceFilePreferenceProvider);\n    });\n}\n\nexport function bindFactory<F, C>(bind: interfaces.Bind,\n    factoryId: interfaces.ServiceIdentifier<F>,\n    constructor: interfaces.Newable<C>,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ...parameterBindings: interfaces.ServiceIdentifier<any>[]): void {\n    bind(factoryId).toFactory(ctx =>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (...args: any[]) => {\n            const child = new Container({ defaultScope: 'Singleton' });\n            child.parent = ctx.container;\n            for (let i = 0; i < parameterBindings.length; i++) {\n                child.bind(parameterBindings[i]).toConstantValue(args[i]);\n            }\n            child.bind(constructor).to(constructor);\n            return child.get(constructor);\n        }\n    );\n}\n\nexport function bindPreferenceProviders(bind: interfaces.Bind, unbind: interfaces.Unbind): void {\n    unbind(PreferenceProvider);\n\n    bind(PreferenceProvider).to(UserConfigsPreferenceProvider).inSingletonScope().whenTargetNamed(PreferenceScope.User);\n    bind(PreferenceProvider).to(WorkspacePreferenceProvider).inSingletonScope().whenTargetNamed(PreferenceScope.Workspace);\n    bind(PreferenceProvider).to(FoldersPreferencesProvider).inSingletonScope().whenTargetNamed(PreferenceScope.Folder);\n    bindWorkspaceFilePreferenceProvider(bind);\n    bindFactory(bind, UserPreferenceProviderFactory, UserPreferenceProvider, SectionPreferenceProviderUri, SectionPreferenceProviderSection);\n    bindFactory(bind, FolderPreferenceProviderFactory, FolderPreferenceProvider, SectionPreferenceProviderUri, SectionPreferenceProviderSection, FolderPreferenceProviderFolder);\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct, named } from 'inversify';\nimport { MenuModelRegistry, CommandRegistry } from '@theia/core';\nimport {\n    CommonMenus,\n    AbstractViewContribution,\n    CommonCommands,\n    KeybindingRegistry,\n    Widget,\n    PreferenceScope,\n    PreferenceProvider,\n    PreferenceService,\n    PreferenceItem\n} from '@theia/core/lib/browser';\nimport { isFirefox } from '@theia/core/lib/browser';\nimport { isOSX } from '@theia/core/lib/common/os';\nimport { TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { FileSystem } from '@theia/filesystem/lib/common';\nimport { EditorManager, EditorWidget } from '@theia/editor/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferencesWidget } from './views/preference-widget';\nimport { PreferencesEventService } from './util/preference-event-service';\nimport { WorkspacePreferenceProvider } from './workspace-preference-provider';\nimport { USER_PREFERENCE_URI } from './user-preference-provider';\nimport { Preference, PreferencesCommands, PreferenceMenus } from './util/preference-types';\nimport { ClipboardService } from '@theia/core/lib/browser/clipboard-service';\n\n@injectable()\nexport class PreferencesContribution extends AbstractViewContribution<PreferencesWidget> {\n\n    @inject(PreferencesEventService) protected readonly preferencesEventService: PreferencesEventService;\n    @inject(FileSystem) protected readonly filesystem: FileSystem;\n    @inject(PreferenceProvider) @named(PreferenceScope.Workspace) protected readonly workspacePreferenceProvider: WorkspacePreferenceProvider;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(PreferenceService) protected readonly preferenceValueRetrievalService: PreferenceService;\n    @inject(ClipboardService) protected readonly clipboardService: ClipboardService;\n\n    protected preferencesScope = Preference.DEFAULT_SCOPE;\n\n    constructor() {\n        super({\n            widgetId: PreferencesWidget.ID,\n            widgetName: PreferencesWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'main',\n            },\n        });\n    }\n\n    @postConstruct()\n    init(): void {\n        this.preferencesEventService.onTabScopeSelected.event(async e => {\n            const widget: PreferencesWidget = await this.widget;\n            this.preferencesScope = e;\n            widget.preferenceScope = this.preferencesScope;\n        });\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(CommonCommands.OPEN_PREFERENCES, {\n            execute: () => this.openView({ reveal: true }),\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR, {\n            isEnabled: () => true,\n            isVisible: w => this.withWidget(w, () => true),\n            execute: (preferenceNode: Preference.NodeWithValueInAllScopes) => {\n                this.openPreferencesJSON(preferenceNode);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.COPY_JSON_NAME, {\n            isEnabled: Preference.EditorCommandArgs.is,\n            isVisible: Preference.EditorCommandArgs.is,\n            execute: ({ id, value }: Preference.EditorCommandArgs) => {\n                this.clipboardService.writeText(id);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.COPY_JSON_VALUE, {\n            isEnabled: Preference.EditorCommandArgs.is,\n            isVisible: Preference.EditorCommandArgs.is,\n            execute: ({ id, value }: { id: string, value: string }) => {\n                const jsonString = `\"${id}\": ${JSON.stringify(value)}`;\n                this.clipboardService.writeText(jsonString);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.RESET_PREFERENCE, {\n            isEnabled: Preference.EditorCommandArgs.is,\n            isVisible: Preference.EditorCommandArgs.is,\n            execute: ({ id, value }: Preference.EditorCommandArgs) => {\n                this.preferenceValueRetrievalService.set(id, undefined, Number(this.preferencesScope.scope), this.preferencesScope.uri);\n            }\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(CommonMenus.FILE_SETTINGS_SUBMENU_OPEN, {\n            commandId: CommonCommands.OPEN_PREFERENCES.id,\n            label: CommonCommands.OPEN_PREFERENCES.label,\n            order: 'a10',\n        });\n        menus.registerMenuAction(PreferenceMenus.PREFERENCE_EDITOR_CONTEXT_MENU, {\n            commandId: PreferencesCommands.RESET_PREFERENCE.id,\n            label: PreferencesCommands.RESET_PREFERENCE.label,\n            order: 'a'\n        });\n        menus.registerMenuAction(PreferenceMenus.PREFERENCE_EDITOR_COPY_ACTIONS, {\n            commandId: PreferencesCommands.COPY_JSON_VALUE.id,\n            label: PreferencesCommands.COPY_JSON_VALUE.label,\n            order: 'b'\n        });\n        menus.registerMenuAction(PreferenceMenus.PREFERENCE_EDITOR_COPY_ACTIONS, {\n            commandId: PreferencesCommands.COPY_JSON_NAME.id,\n            label: PreferencesCommands.COPY_JSON_NAME.label,\n            order: 'c'\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        if (isOSX && !isFirefox) {\n            keybindings.registerKeybinding({\n                command: CommonCommands.OPEN_PREFERENCES.id,\n                keybinding: 'cmd+,'\n            });\n        }\n\n        keybindings.registerKeybinding({\n            command: CommonCommands.OPEN_PREFERENCES.id,\n            keybinding: 'ctrl+,',\n        });\n    }\n\n    registerToolbarItems(toolbar: TabBarToolbarRegistry): void {\n        toolbar.registerItem({\n            id: PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id,\n            command: PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id,\n            tooltip: 'Open Preferences in JSON',\n            priority: 0,\n        });\n    }\n\n    protected async openPreferencesJSON(preferenceNode: Preference.NodeWithValueInAllScopes): Promise<void> {\n        const wasOpenedFromEditor = preferenceNode.constructor.name !== 'PreferencesWidget';\n        const { scope, activeScopeIsFolder, uri } = this.preferencesScope;\n        const preferenceId = wasOpenedFromEditor ? preferenceNode.id : '';\n        // when opening from toolbar, widget is passed as arg by default (we don't need this info)\n        if (wasOpenedFromEditor) {\n            const currentPreferenceValue = preferenceNode.preference.values!;\n            const key = Preference.LookupKeys[Number(scope)] as keyof Preference.ValuesInAllScopes;\n            const valueInCurrentScope = currentPreferenceValue[key] === undefined ? currentPreferenceValue.defaultValue : currentPreferenceValue[key] as PreferenceItem;\n            this.preferenceValueRetrievalService.set(preferenceId, valueInCurrentScope, Number(scope), uri);\n        }\n\n        let jsonEditorWidget: EditorWidget;\n        const jsonUriToOpen = await this.getPreferencesJSONUri(scope, activeScopeIsFolder, uri);\n        if (jsonUriToOpen) {\n            jsonEditorWidget = await this.editorManager.open(jsonUriToOpen);\n\n            if (wasOpenedFromEditor) {\n                const text = jsonEditorWidget.editor.document.getText();\n                if (preferenceId) {\n                    const { index } = text.match(preferenceId)!;\n                    const numReturns = text.slice(0, index).match(new RegExp('\\n', 'g'))!.length;\n                    jsonEditorWidget.editor.cursor = { line: numReturns, character: 4 + preferenceId.length + 4 };\n                }\n            }\n        }\n    }\n\n    private async getPreferencesJSONUri(scope: string, activeScopeIsFolder: string, uri: string): Promise<URI | undefined> {\n        const scopeNumber = Number(scope);\n        if (PreferenceScope.User === scopeNumber) {\n            return USER_PREFERENCE_URI;\n        } else if (PreferenceScope.Workspace === scopeNumber) {\n            if (activeScopeIsFolder === 'true') {\n                return this.getOrCreateSettingsFile(uri);\n            } else {\n                const wsURI = this.workspacePreferenceProvider.getConfigUri();\n                if (wsURI) {\n                    const wsURIString = wsURI.toString();\n                    if (!await this.filesystem.exists(wsURIString)) {\n                        await this.filesystem.createFile(wsURIString);\n                    }\n                    return new URI(wsURIString);\n                }\n            }\n\n        } else if (PreferenceScope.Folder === scopeNumber) {\n            return this.getOrCreateSettingsFile(uri);\n        }\n        return undefined;\n    }\n\n    protected async getOrCreateSettingsFile(folderURI: string): Promise<URI> {\n        const folderSettingsURI = `${folderURI}/.theia/settings.json`;\n        if (folderSettingsURI && !await this.filesystem.exists(folderSettingsURI)) {\n            await this.filesystem.createFile(folderSettingsURI);\n        }\n        return new URI(folderSettingsURI);\n    }\n\n    /**\n     * Determine if the current widget is the PreferencesWidget.\n     */\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), fn: (widget: PreferencesWidget) => T): T | false {\n        if (widget instanceof PreferencesWidget && widget.id === PreferencesWidget.ID) {\n            return fn(widget);\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/style/index.css';\nimport './preferences-monaco-contribution';\nimport { ContainerModule, interfaces } from 'inversify';\nimport { FrontendApplicationContribution, bindViewContribution } from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { PreferenceTreeGenerator } from './util/preference-tree-generator';\nimport { bindPreferenceProviders } from './preference-bindings';\nimport { bindPreferencesWidgets } from './views/preference-widget-bindings';\nimport { PreferencesEventService } from './util/preference-event-service';\nimport { PreferencesTreeProvider } from './preference-tree-provider';\nimport { PreferencesContribution } from './preference-contribution';\nimport { PreferenceScopeCommandManager } from './util/preference-scope-command-manager';\nimport { PreferencesFrontendApplicationContribution } from './preferences-frontend-application-contribution';\n\nexport function bindPreferences(bind: interfaces.Bind, unbind: interfaces.Unbind): void {\n    bindPreferenceProviders(bind, unbind);\n    bindPreferencesWidgets(bind);\n\n    bind(PreferencesEventService).toSelf().inSingletonScope();\n    bind(PreferencesTreeProvider).toSelf().inSingletonScope();\n    bind(PreferenceTreeGenerator).toSelf().inSingletonScope();\n\n    bindViewContribution(bind, PreferencesContribution);\n\n    bind(PreferenceScopeCommandManager).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).to(PreferencesFrontendApplicationContribution).inSingletonScope();\n    bind(TabBarToolbarContribution).toService(PreferencesContribution);\n}\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bindPreferences(bind, unbind);\n});\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport * as fuzzy from 'fuzzy';\nimport { debounce } from 'lodash';\nimport { TreeNode, CompositeTreeNode, PreferenceSchemaProvider, PreferenceDataSchema, PreferenceDataProperty, PreferenceScope } from '@theia/core/lib/browser';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { PreferencesEventService } from './util/preference-event-service';\nimport { PreferenceTreeGenerator } from './util/preference-tree-generator';\nimport { Preference } from './util/preference-types';\n\ninterface PreferenceFilterOptions {\n    minLength?: number;\n    baseSchemaAltered?: boolean;\n};\n\nconst filterDefaults: Required<PreferenceFilterOptions> = {\n    minLength: 1,\n    baseSchemaAltered: false,\n};\n\n@injectable()\nexport class PreferencesTreeProvider {\n\n    protected _isFiltered: boolean = false;\n    protected lastSearchedLiteral: string = '';\n    protected lastSearchedFuzzy: string = '';\n    protected baseSchema: PreferenceDataSchema;\n    protected baseTree: CompositeTreeNode;\n    protected _currentTree: CompositeTreeNode;\n    protected currentScope: Preference.SelectedScopeDetails = Preference.DEFAULT_SCOPE;\n    protected handleUnderlyingDataChange = debounce(\n        (options: PreferenceFilterOptions, newScope?: Preference.SelectedScopeDetails) => this.updateUnderlyingData(options, newScope),\n        200\n    );\n\n    @inject(PreferencesEventService) protected readonly preferencesEventService: PreferencesEventService;\n    @inject(PreferenceSchemaProvider) protected readonly schemaProvider: PreferenceSchemaProvider;\n    @inject(PreferenceConfigurations) protected readonly preferenceConfigs: PreferenceConfigurations;\n    @inject(PreferenceTreeGenerator) protected readonly preferencesTreeGenerator: PreferenceTreeGenerator;\n\n    @postConstruct()\n    protected init(): void {\n        this.updateUnderlyingData({ baseSchemaAltered: true });\n        this.schemaProvider.onDidPreferenceSchemaChanged(() => this.handleUnderlyingDataChange({ baseSchemaAltered: true }));\n        this.preferencesEventService.onSearch.event(searchEvent => this.updateDisplay(searchEvent.query));\n        this.preferencesEventService.onTabScopeSelected.event(scopeEvent => this.handleUnderlyingDataChange({}, scopeEvent));\n    }\n\n    protected updateUnderlyingData(options: PreferenceFilterOptions, newScope?: Preference.SelectedScopeDetails): void {\n        if (options.baseSchemaAltered) {\n            this.baseSchema = this.schemaProvider.getCombinedSchema();\n        }\n        if (newScope) {\n            this.currentScope = newScope;\n        }\n        this.updateDisplay(this.lastSearchedLiteral, options);\n    }\n\n    protected updateDisplay(term: string = this.lastSearchedLiteral, options: PreferenceFilterOptions = {}): void {\n        if (options.baseSchemaAltered) {\n            this.baseTree = this.preferencesTreeGenerator.generateTree();\n        }\n\n        this._currentTree = this.filter(term, Number(this.currentScope.scope), this.baseTree, options);\n\n        this.preferencesEventService.onDisplayChanged.fire();\n    }\n\n    protected filter<Tree extends TreeNode>(\n        searchTerm: string,\n        currentScope: PreferenceScope,\n        tree: Tree,\n        filterOptions: PreferenceFilterOptions = {},\n    ): Tree {\n        const { minLength } = { ...filterDefaults, ...filterOptions };\n\n        this.lastSearchedLiteral = searchTerm;\n        this.lastSearchedFuzzy = searchTerm.replace(/\\s/g, '');\n        this._isFiltered = searchTerm.length >= minLength;\n\n        return this.recurseAndSetVisible(currentScope, tree);\n    }\n\n    protected recurseAndSetVisible<Tree extends TreeNode>(\n        scope: PreferenceScope,\n        tree: Tree,\n    ): Tree {\n        let currentNodeShouldBeVisible = false;\n\n        if (CompositeTreeNode.is(tree)) {\n            tree.children = tree.children.map(child => {\n                const newChild = this.recurseAndSetVisible(scope, child);\n                currentNodeShouldBeVisible = currentNodeShouldBeVisible || !!newChild.visible;\n                return newChild;\n            });\n            if (Preference.Branch.is(tree)) {\n                tree.leaves = (tree.leaves || []).map(child => {\n                    const newChild = this.recurseAndSetVisible(scope, child);\n                    currentNodeShouldBeVisible = currentNodeShouldBeVisible || !!newChild.visible;\n                    return newChild;\n                });\n            }\n        } else {\n            currentNodeShouldBeVisible = this.schemaProvider.isValidInScope(tree.id, scope)\n                && (\n                    !this._isFiltered // search too short.\n                    || fuzzy.test(this.lastSearchedFuzzy, tree.id || '') // search matches preference name.\n                    // search matches description. Fuzzy isn't ideal here because the score dependens on the order of discovery.\n                    || (this.baseSchema.properties[tree.id].description || '').includes(this.lastSearchedLiteral)\n                );\n        }\n\n        return { ...tree, visible: currentNodeShouldBeVisible };\n    }\n\n    get currentTree(): CompositeTreeNode {\n        return this._currentTree;\n    }\n\n    get propertyList(): { [key: string]: PreferenceDataProperty; } {\n        return this.baseSchema.properties;\n    }\n\n    get isFiltered(): boolean {\n        return this._isFiltered;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { AbstractTreeDecoratorService } from '@theia/core/lib/browser/tree/tree-decorator';\nimport { PreferencesDecorator } from './preferences-decorator';\n\n@injectable()\nexport class PreferencesDecoratorService extends AbstractTreeDecoratorService {\n\n    constructor(@inject(PreferencesDecorator) protected readonly preferencesTreeDecorator: PreferencesDecorator) {\n        super([preferencesTreeDecorator]);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Tree, TreeDecorator, TreeDecoration, PreferenceDataProperty, PreferenceService } from '@theia/core/lib/browser';\nimport { Emitter, Event, MaybePromise } from '@theia/core';\nimport { escapeInvisibleChars } from '@theia/core/lib/common/strings';\n\n@injectable()\nexport class PreferencesDecorator implements TreeDecorator {\n    readonly id: string = 'theia-preferences-decorator';\n\n    protected activeFolderUri: string | undefined;\n    protected preferences: { [id: string]: PreferenceDataProperty }[];\n    protected preferencesDecorations: Map<string, TreeDecoration.Data> = new Map();\n    protected readonly emitter: Emitter<(tree: Tree) => Map<string, TreeDecoration.Data>> = new Emitter();\n\n    @inject(PreferenceService) protected readonly preferencesService: PreferenceService;\n\n    @postConstruct()\n    protected init(): void {\n        this.preferencesService.onPreferenceChanged(() => {\n            this.fireDidChangeDecorations(this.preferences);\n        });\n    }\n\n    get onDidChangeDecorations(): Event<(tree: Tree) => Map<string, TreeDecoration.Data>> {\n        return this.emitter.event;\n    }\n\n    fireDidChangeDecorations(preferences: { [id: string]: PreferenceDataProperty }[]): void {\n        if (!this.preferences) {\n            this.preferences = preferences;\n        }\n        if (preferences) {\n            this.preferencesDecorations = new Map(preferences.map(m => {\n                const preferenceName = Object.keys(m)[0];\n                const preferenceValue = m[preferenceName];\n                const storedValue = this.preferencesService.get(preferenceName, undefined, this.activeFolderUri);\n                const description = this.getDescription(preferenceValue);\n                return [preferenceName, {\n                    tooltip: this.buildTooltip(preferenceValue),\n                    captionSuffixes: [\n                        {\n                            data: `: ${this.getPreferenceDisplayValue(storedValue, preferenceValue.defaultValue)}`\n                        },\n                        {\n                            data: ' ' + description,\n                            fontData: { color: 'var(--theia-descriptionForeground)' }\n                        }]\n                }] as [string, TreeDecoration.Data];\n            }));\n        }\n        this.emitter.fire(() => this.preferencesDecorations);\n    }\n\n    decorations(tree: Tree): MaybePromise<Map<string, TreeDecoration.Data>> {\n        return this.preferencesDecorations;\n    }\n\n    protected setActiveFolder(folder: string): void {\n        this.activeFolderUri = folder;\n        this.fireDidChangeDecorations(this.preferences);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected getPreferenceDisplayValue(storedValue: any, defaultValue: any): any {\n        if (storedValue !== undefined) {\n            if (typeof storedValue === 'string') {\n                return escapeInvisibleChars(storedValue);\n            }\n            return storedValue;\n        }\n        return defaultValue;\n    }\n\n    protected buildTooltip(data: PreferenceDataProperty): string {\n        let tooltips: string = '';\n        if (data.description) {\n            tooltips = data.description;\n        }\n        if (data.defaultValue) {\n            tooltips += `\\nDefault: ${JSON.stringify(data.defaultValue)}`;\n        } else if (data.default !== undefined) {\n            tooltips += `\\nDefault: ${JSON.stringify(data.default)}`;\n        }\n        if (data.minimum) {\n            tooltips += `\\nMin: ${data.minimum}`;\n        }\n        if (data.enum) {\n            tooltips += `\\nAccepted Values: ${data.enum.join(', ')}`;\n        }\n        return tooltips;\n    }\n\n    /**\n     * Get the description for the preference for display purposes.\n     * @param value {PreferenceDataProperty} the preference data property.\n     * @returns the description if available.\n     */\n    protected getDescription(value: PreferenceDataProperty): string {\n\n        /**\n         * Format the string for consistency and display purposes.\n         * Formatting includes:\n         * - capitalizing the string.\n         * - ensuring it ends in punctuation (`.`).\n         * @param str {string} the string to format.\n         * @returns the formatted string.\n         */\n        function format(str: string): string {\n            if (str.endsWith('.')) {\n                return str.charAt(0).toUpperCase() + str.slice(1);\n            }\n            return `${str.charAt(0).toUpperCase() + str.slice(1)}.`;\n        }\n\n        if (value.description) {\n            return format(value.description);\n        } else if (value.markdownDescription) {\n            return format(value.markdownDescription);\n        }\n        return '';\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { FrontendApplicationContribution, PreferenceSchemaProvider } from '@theia/core/lib/browser';\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { InMemoryResources } from '@theia/core';\nimport { JsonSchemaStore } from '@theia/core/lib/browser/json-schema-store';\nimport { USER_PREFERENCE_URI } from './user-preference-provider';\n\n@injectable()\nexport class PreferencesFrontendApplicationContribution implements FrontendApplicationContribution {\n\n    @inject(JsonSchemaStore) jsonSchemaStore: JsonSchemaStore;\n    @inject(PreferenceSchemaProvider) schemaProvider: PreferenceSchemaProvider;\n    @inject(InMemoryResources) inmemoryResources: InMemoryResources;\n\n    onStart(): void {\n        const serializeSchema = () => JSON.stringify(this.schemaProvider.getCombinedSchema());\n        const uri = new URI('vscode://schemas/settings/user');\n        this.inmemoryResources.add(uri, serializeSchema());\n        this.jsonSchemaStore.registerSchema({\n            fileMatch: ['settings.json', USER_PREFERENCE_URI.toString()],\n            url: uri.toString()\n        });\n        this.schemaProvider.onDidPreferenceSchemaChanged(() =>\n            this.inmemoryResources.update(uri, serializeSchema())\n        );\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nmonaco.languages.register({\n    id: 'jsonc',\n    'aliases': [\n        'JSON with Comments'\n    ],\n    'filenames': [\n        'settings.json'\n    ],\n    'extensions': [\n        '.theia-workspace'\n    ]\n});\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable } from 'inversify';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { Preference } from './preference-types';\n\n@injectable()\nexport class PreferencesEventService {\n    onTabScopeSelected = new Emitter<Preference.SelectedScopeDetails>();\n    onSearch = new Emitter<Preference.SearchQuery>();\n    onEditorScroll = new Emitter<Preference.MouseScrollDetails>();\n    onNavTreeSelection = new Emitter<Preference.SelectedTreeNode>();\n    onDisplayChanged = new Emitter<void>();\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { PreferenceScope, LabelProvider } from '@theia/core/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { CommandRegistry, MenuModelRegistry, Command } from '@theia/core/lib/common';\nimport { Preference } from './preference-types';\n\nexport const FOLDER_SCOPE_MENU_PATH = ['preferences:scope.menu'];\n\n@injectable()\nexport class PreferenceScopeCommandManager {\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(MenuModelRegistry) protected readonly menuModelRegistry: MenuModelRegistry;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    protected foldersAsCommands: Command[] = [];\n\n    createFolderWorkspacesMenu(\n        folderWorkspaces: FileStat[],\n        currentFolderURI: string,\n    ): void {\n        this.foldersAsCommands.forEach(folderCommand => {\n            this.menuModelRegistry.unregisterMenuAction(folderCommand, FOLDER_SCOPE_MENU_PATH);\n            this.commandRegistry.unregisterCommand(folderCommand);\n        });\n        this.foldersAsCommands.length = 0;\n\n        folderWorkspaces.forEach(folderWorkspace => {\n            const folderLabel = this.labelProvider.getName(new URI(folderWorkspace.uri));\n\n            const iconClass = currentFolderURI === folderWorkspace.uri ? 'fa fa-check' : '';\n            const newFolderAsCommand = {\n                id: `preferenceScopeCommand:${folderWorkspace.uri}`,\n                label: folderLabel,\n                iconClass: iconClass\n            };\n\n            this.foldersAsCommands.push(newFolderAsCommand);\n\n            this.commandRegistry.registerCommand(newFolderAsCommand, {\n                isVisible: (callback, check) => check === 'from-tabbar',\n                isEnabled: (callback, check) => check === 'from-tabbar',\n                execute: (callback: (scopeDetails: Preference.SelectedScopeDetails) => void) => {\n                    callback({ scope: PreferenceScope.Folder.toString(), uri: folderWorkspace.uri, activeScopeIsFolder: 'true' });\n                }\n            });\n\n            this.menuModelRegistry.registerMenuAction(FOLDER_SCOPE_MENU_PATH, {\n                commandId: newFolderAsCommand.id,\n                label: newFolderAsCommand.label\n            });\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { CompositeTreeNode, PreferenceSchemaProvider, SelectableTreeNode } from '@theia/core/lib/browser';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { Preference } from './preference-types';\n\n@injectable()\nexport class PreferenceTreeGenerator {\n\n    @inject(PreferenceSchemaProvider) schemaProvider: PreferenceSchemaProvider;\n    @inject(PreferenceConfigurations) preferenceConfigs: PreferenceConfigurations;\n\n    generateTree(): CompositeTreeNode {\n        const preferencesSchema = this.schemaProvider.getCombinedSchema();\n        const propertyNames = Object.keys(preferencesSchema.properties).sort((a, b) => a.localeCompare(b));\n        const preferencesGroups: Preference.Branch[] = [];\n        const groups = new Map<string, Preference.Branch>();\n        const propertyPattern = Object.keys(preferencesSchema.patternProperties)[0]; // TODO: there may be a better way to get this data.\n        const overridePropertyIdentifier = new RegExp(propertyPattern, 'i');\n\n        const root = this.createRootNode(preferencesGroups);\n\n        for (const propertyName of propertyNames) {\n            if (!this.preferenceConfigs.isSectionName(propertyName) && !overridePropertyIdentifier.test(propertyName)) {\n                const labels = propertyName.split('.');\n                const group = labels[0];\n                const subgroup = labels.length > 2 && labels.slice(0, 2).join('.');\n                if (!groups.has(group)) {\n                    const parentPreferencesGroup = this.createPreferencesGroup(group, root);\n                    groups.set(group, parentPreferencesGroup);\n                    preferencesGroups.push(parentPreferencesGroup);\n                }\n                if (subgroup && !groups.has(subgroup)) {\n                    const remoteParent = groups.get(group) as Preference.Branch;\n                    const newBranch = this.createPreferencesGroup(subgroup, remoteParent);\n                    groups.set(subgroup, newBranch);\n                    CompositeTreeNode.addChild(remoteParent, newBranch);\n                }\n                const parent = groups.get(subgroup || group) as Preference.Branch;\n                const leafNode = this.createLeafNode(propertyName, parent);\n                parent.leaves.push(leafNode);\n            }\n        }\n\n        return root;\n    };\n\n    protected createRootNode = (preferencesGroups: Preference.Branch[]): CompositeTreeNode => ({\n        id: 'root-node-id',\n        name: '',\n        parent: undefined,\n        visible: true,\n        children: preferencesGroups\n    });\n\n    protected createLeafNode = (property: string, preferencesGroup: Preference.Branch): SelectableTreeNode => {\n        const propertySpecifier = this.split(property).slice(1);\n        const name = propertySpecifier.map(word => word.slice(0, 1).toLocaleUpperCase() + word.slice(1)).join(' ').trim();\n        return {\n            id: property,\n            name,\n            parent: preferencesGroup,\n            visible: true,\n            selected: false,\n        };\n    };\n\n    protected createPreferencesGroup = (group: string, root: CompositeTreeNode): Preference.Branch => {\n        const isSubgroup = 'expanded' in root;\n        const [groupname, subgroupname] = group.split('.');\n        const label = isSubgroup ? subgroupname : groupname;\n        const newNode = {\n            id: `${group}-id`,\n            name: this.toTitleCase(label),\n            visible: true,\n            parent: root,\n            children: [],\n            leaves: [],\n            expanded: false,\n            selected: false,\n        };\n        return newNode;\n    };\n\n    protected toTitleCase(nonTitle: string): string {\n        // Any non-word character or the 0-length space between a non-upper-case character and an upper-case character\n        return this.split(nonTitle).map(word => this.capitalizeFirst(word)).join(' ').trim();\n    }\n\n    protected capitalizeFirst(maybeLowerCase: string): string {\n        return maybeLowerCase.slice(0, 1).toLocaleUpperCase() + maybeLowerCase.slice(1);\n    }\n\n    /**\n     * Split based on any non-word character or the 0-length space between a non-upper-case character and an upper-case character\n     */\n    private split(string: string): string[] {\n        const split: string[] = [];\n        const regex = /[A-Z]+[a-z0-9]*|[A-Z]*[a-z0-9]+/g;\n        // eslint-disable-next-line no-null/no-null\n        let match; while ((match = regex.exec(string)) !== null) {\n            split.push(match[0]);\n        }\n        return split;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { PreferenceDataProperty, SelectableTreeNode, PreferenceItem, Title, PreferenceScope, TreeNode, CompositeTreeNode, ExpandableTreeNode } from '@theia/core/lib/browser';\nimport { Command, MenuPath } from '@theia/core';\n\nexport namespace Preference {\n    interface MaximalTree extends SelectableTreeNode, ExpandableTreeNode {\n        leaves: TreeExtension[];\n    }\n\n    export type TreeExtension = TreeNode & {\n        expanded?: MaximalTree['expanded'];\n        selected?: MaximalTree['selected'];\n        focus?: MaximalTree['focus'];\n        children?: MaximalTree['children'];\n        leaves?: MaximalTree['leaves'];\n    };\n\n    export interface Branch extends CompositeTreeNode {\n        leaves: TreeExtension[];\n    }\n\n    export namespace Branch {\n        export function is(node: TreeNode | Branch): node is Branch {\n            return 'leaves' in node && Array.isArray(node.leaves);\n        }\n    }\n\n    export interface ValueInSingleScope { value?: PreferenceItem, data: PreferenceDataProperty; }\n    export interface NodeWithValueInSingleScope extends SelectableTreeNode {\n        preference: ValueInSingleScope;\n    }\n\n    export interface ValuesInAllScopes {\n        preferenceName: string;\n        defaultValue: PreferenceItem | undefined;\n        globalValue: PreferenceItem | undefined;\n        workspaceValue: PreferenceItem | undefined;\n        workspaceFolderValue: PreferenceItem | undefined;\n    }\n\n    export interface PreferenceWithValueInAllScopes {\n        values?: ValuesInAllScopes;\n        data: PreferenceDataProperty;\n    }\n\n    export interface EditorCommandArgs {\n        id: string;\n        value: string | undefined;\n    }\n\n    export namespace EditorCommandArgs {\n        export function is(prefObject: EditorCommandArgs): prefObject is EditorCommandArgs {\n            return !!prefObject && 'id' in prefObject && 'value' in prefObject;\n        }\n    }\n\n    export interface NodeWithValueInAllScopes extends SelectableTreeNode {\n        preference: PreferenceWithValueInAllScopes;\n    }\n\n    export enum LookupKeys {\n        defaultValue,\n        globalValue,\n        workspaceValue,\n        workspaceFolderValue,\n    }\n\n    export interface SelectedScopeDetails extends Title.Dataset {\n        scope: string;\n        uri: string;\n        activeScopeIsFolder: string;\n    };\n\n    export const DEFAULT_SCOPE: SelectedScopeDetails = {\n        scope: PreferenceScope.User.toString(),\n        uri: '',\n        activeScopeIsFolder: 'false'\n    };\n\n    export interface SearchQuery {\n        query: string;\n    };\n\n    export interface MouseScrollDetails {\n        firstVisibleChildId: string;\n        isTop: boolean;\n    };\n\n    export interface SelectedTreeNode {\n        nodeID: string;\n    }\n\n    export interface ContextMenuCallbacks {\n        resetCallback(): void;\n        copyIDCallback(): void;\n        copyJSONCallback(): void;\n    }\n}\n\nexport namespace PreferencesCommands {\n    export const OPEN_PREFERENCES_JSON_TOOLBAR: Command = {\n        id: 'preferences:openJson.toolbar',\n        iconClass: 'codicon codicon-json'\n    };\n    export const COPY_JSON_NAME: Command = {\n        id: 'preferences:copyJson.name',\n        label: 'Copy Setting ID'\n    };\n    export const RESET_PREFERENCE: Command = {\n        id: 'preferences:reset',\n        label: 'Reset Setting'\n    };\n\n    export const COPY_JSON_VALUE: Command = {\n        id: 'preferences:copyJson.value',\n        label: 'Copy Setting as JSON',\n    };\n}\n\nexport namespace PreferenceMenus {\n    export const PREFERENCE_EDITOR_CONTEXT_MENU: MenuPath = ['preferences:editor.contextMenu'];\n    export const PREFERENCE_EDITOR_COPY_ACTIONS: MenuPath = [...PREFERENCE_EDITOR_CONTEXT_MENU, 'preferences:editor.contextMenu.copy'];\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport { PreferenceArrayInput } from './preference-array-input';\nexport { PreferenceBooleanInput } from './preference-boolean-input';\nexport { PreferenceJSONInput } from './preference-json-input';\nexport { PreferenceNumberInput } from './preference-number-input';\nexport { PreferenceSelectInput } from './preference-select-input';\nexport { PreferenceStringInput } from './preference-string-input';\n","\n/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { Preference } from '../../util/preference-types';\n\ninterface PreferenceArrayInputProps {\n    preferenceDisplayNode: Preference.NodeWithValueInSingleScope;\n    setPreference(preferenceName: string, preferenceValue: string[]): void;\n}\n\nexport const PreferenceArrayInput: React.FC<PreferenceArrayInputProps> = ({ preferenceDisplayNode, setPreference }) => {\n    const values = preferenceDisplayNode.preference.value || [] as string[];\n    const { id: preferenceID } = preferenceDisplayNode;\n    const [value, setValue] = React.useState('');\n\n    const doSubmit = React.useCallback((): void => {\n        if (value) {\n            setPreference(preferenceID, [...values, value]);\n            setValue('');\n        }\n    }, [values, value]);\n\n    const handleEnter = React.useCallback((e: React.KeyboardEvent): void => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            doSubmit();\n        }\n    }, []);\n\n    const handleChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue(e.target.value);\n    }, []);\n\n    const handleRemove = React.useCallback((e: React.MouseEvent | React.KeyboardEvent): void => {\n        const target = e.currentTarget as HTMLSpanElement;\n        const key = (e as React.KeyboardEvent).key;\n        if (key && key !== 'Enter') {\n            return;\n        }\n\n        const indexAttribute = target.getAttribute('data-index');\n        const removalIndex = Number(indexAttribute);\n        if (indexAttribute) {\n            const newValues = [...values.slice(0, removalIndex), ...values.slice(removalIndex + 1)];\n            setPreference(preferenceID, newValues);\n        }\n    }, []);\n\n    return (\n        <ul className=\"preference-array\">\n            {\n                values.map((val: string, i: number): JSX.Element => (\n                    <li className=\"preference-array-element\" key={`${preferenceID}-li-${i}`}>\n                        <span className=\"preference-array-element-val\">{val}</span>\n                        <span\n                            className=\"preference-array-element-btn remove-btn\"\n                            onClick={handleRemove}\n                            onKeyDown={handleRemove}\n                            role=\"button\"\n                            tabIndex={0}\n                            data-index={i}\n                        >\n                            <i className=\"preference-array-clear-item\" />\n                        </span>\n                    </li>\n                ))\n            }\n            <li>\n                <input\n                    className=\"preference-array-input theia-input\"\n                    type=\"text\"\n                    placeholder=\"Add Value...\"\n                    onKeyPress={handleEnter}\n                    onChange={handleChange}\n                    value={value}\n                    aria-label=\"Preference String Input\"\n                />\n                <span\n                    className=\"preference-array-element-btn add-btn\"\n                    onClick={doSubmit}\n                    onKeyDown={doSubmit}\n                    role=\"button\"\n                    tabIndex={0}\n                    aria-label=\"Submit Preference Input\"\n                >\n                    <i className=\"fa fa-plus\" />\n                </span>\n            </li>\n        </ul>\n    );\n};\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { Preference } from '../../util/preference-types';\n\ninterface PreferenceBooleanInputProps {\n    preferenceDisplayNode: Preference.NodeWithValueInSingleScope;\n    setPreference: (preferenceName: string, preferenceValue: boolean) => void;\n}\n\nexport const PreferenceBooleanInput: React.FC<PreferenceBooleanInputProps> = ({ preferenceDisplayNode, setPreference }) => {\n    const { id } = preferenceDisplayNode;\n    const value = preferenceDisplayNode.preference.value as boolean | undefined;\n\n    // Tracks local state for quicker refreshes on user click.\n    const [checked, setChecked] = React.useState<boolean>(!!value);\n\n    // Allows user to reset value using cogwheel.\n    React.useEffect(() => {\n        setChecked(!!value);\n    }, [value]);\n\n    const setValue = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setChecked(!checked);\n        setPreference(id, e.target.checked);\n    }, [checked]);\n\n    return (\n        <label htmlFor={`preference-checkbox-${id}`}>\n            <input\n                type=\"checkbox\"\n                className=\"theia-input\"\n                checked={checked}\n                readOnly={false}\n                onChange={setValue}\n                id={`preference-checkbox-${id}`}\n                data-preference-id={id}\n            />\n        </label>\n    );\n};\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { Preference } from '../../util/preference-types';\n\ninterface PreferenceJSONInputProps {\n    preferenceDisplayNode: Preference.NodeWithValueInSingleScope;\n    onClick(): void;\n}\n\nexport const PreferenceJSONInput: React.FC<PreferenceJSONInputProps> = ({ preferenceDisplayNode, onClick }) => (\n    <a\n        role='button'\n        title={preferenceDisplayNode.name}\n        onClick={onClick}\n        className='theia-json-input'\n    >\n        Edit in settings.json\n    </a >\n);\n","\n/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { Preference } from '../../util/preference-types';\n\ninterface PreferenceNumberInputProps {\n    preferenceDisplayNode: Preference.NodeWithValueInSingleScope;\n    setPreference(preferenceName: string, preferenceValue: number): void;\n}\n\nexport const PreferenceNumberInput: React.FC<PreferenceNumberInputProps> = ({ preferenceDisplayNode, setPreference }) => {\n    const { id } = preferenceDisplayNode;\n    const { data, value } = preferenceDisplayNode.preference;\n\n    const externalValue = (value !== undefined ? value : data.defaultValue) || '';\n\n    const [currentTimeout, setCurrentTimetout] = React.useState<number>(0);\n    const [currentValue, setCurrentValue] = React.useState<string>(externalValue);\n\n    React.useEffect(() => {\n        setCurrentValue(externalValue);\n    }, [externalValue]);\n\n    const onChange = React.useCallback(e => {\n        const { value: newValue } = e.target;\n        clearTimeout(currentTimeout);\n        const newTimeout = setTimeout(() => setPreference(id, Number(newValue)), 750);\n        setCurrentTimetout(Number(newTimeout));\n        setCurrentValue(newValue);\n    }, [currentTimeout]);\n\n    return (\n        <input\n            type=\"text\"\n            className=\"theia-input\"\n            pattern=\"[0-9]*\"\n            value={currentValue}\n            onChange={onChange}\n            data-preference-id={id}\n        />\n    );\n};\n","\n/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { Preference } from '../../util/preference-types';\n\ninterface PreferenceSelectInputProps {\n    preferenceDisplayNode: Preference.NodeWithValueInSingleScope;\n    setPreference: (preferenceName: string, preferenceValue: string | number | string[]) => void;\n}\n\nexport const PreferenceSelectInput: React.FC<PreferenceSelectInputProps> = ({ preferenceDisplayNode, setPreference }) => {\n    const { id } = preferenceDisplayNode;\n    const { value, data } = preferenceDisplayNode.preference;\n\n    const externalValue = (value !== undefined ? value : data.defaultValue) || '';\n\n    const [currentTimeout, setCurrentTimetout] = React.useState<number>(0);\n    const [currentValue, setCurrentValue] = React.useState<string>(externalValue);\n\n    React.useEffect(() => {\n        setCurrentValue(externalValue);\n    }, [externalValue]);\n\n    const onChange = React.useCallback(e => {\n        const { value: newValue } = e.target;\n        clearTimeout(currentTimeout);\n        const newTimeout = setTimeout(() => setPreference(id, newValue), 250);\n        setCurrentTimetout(Number(newTimeout));\n        setCurrentValue(newValue);\n    }, [currentTimeout]);\n\n    return (\n        <select\n            value={currentValue}\n            className=\"theia-select\"\n            onChange={onChange}\n            data-preference-id={id}\n        >\n            {preferenceDisplayNode.preference.data.enum!.map((option: string) => <option value={option} key={option}>{option}</option>)}\n        </select>\n    );\n};\n","\n/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { Preference } from '../../util/preference-types';\n\ninterface PreferenceStringInputProps {\n    preferenceDisplayNode: Preference.NodeWithValueInSingleScope;\n    setPreference(preferenceName: string, preferenceValue: string): void;\n}\n\nexport const PreferenceStringInput: React.FC<PreferenceStringInputProps> = ({ preferenceDisplayNode, setPreference }) => {\n    const { id } = preferenceDisplayNode;\n    const { data, value } = preferenceDisplayNode.preference;\n\n    const externalValue = (value !== undefined ? value : data.defaultValue) || '';\n\n    const [currentTimeout, setCurrentTimetout] = React.useState<number>(0);\n    const [currentValue, setCurrentValue] = React.useState<string>(externalValue);\n\n    React.useEffect(() => {\n        setCurrentValue(externalValue);\n    }, [externalValue]);\n\n    const onChange = React.useCallback(e => {\n        const { value: newValue } = e.target;\n        clearTimeout(currentTimeout);\n        const newTimeout = setTimeout(() => setPreference(id, newValue), 750);\n        setCurrentTimetout(Number(newTimeout));\n        setCurrentValue(newValue);\n    }, [currentTimeout]);\n\n    return (\n        <input\n            type=\"text\"\n            className=\"theia-input\"\n            value={currentValue}\n            onChange={onChange}\n            data-preference-id={id}\n        />\n    );\n};\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { PreferenceService, ContextMenuRenderer } from '@theia/core/lib/browser';\nimport { CommandService } from '@theia/core';\nimport { Preference, PreferencesCommands } from '../../util/preference-types';\nimport { PreferencesEventService } from '../../util/preference-event-service';\nimport { PreferenceScopeCommandManager } from '../../util/preference-scope-command-manager';\nimport { SinglePreferenceWrapper } from './single-preference-wrapper';\n\n@injectable()\nexport class SinglePreferenceDisplayFactory {\n    protected currentScope: Preference.SelectedScopeDetails = Preference.DEFAULT_SCOPE;\n    @inject(PreferencesEventService) protected readonly preferencesEventService: PreferencesEventService;\n    @inject(PreferenceService) protected readonly preferenceValueRetrievalService: PreferenceService;\n    @inject(PreferenceScopeCommandManager) protected readonly preferencesMenuFactory: PreferenceScopeCommandManager;\n    @inject(CommandService) protected readonly commandService: CommandService;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n    @postConstruct()\n    init(): void {\n        this.preferencesEventService.onTabScopeSelected.event(e => this.currentScope = e);\n    }\n\n    protected openJSON = (preferenceNode: Preference.NodeWithValueInAllScopes): void => {\n        this.commandService.executeCommand(PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id, preferenceNode);\n    };\n\n    render(preferenceNode: Preference.NodeWithValueInAllScopes): React.ReactElement {\n        return <SinglePreferenceWrapper\n            contextMenuRenderer={this.contextMenuRenderer}\n            preferenceDisplayNode={preferenceNode}\n            currentScope={Number(this.currentScope.scope)}\n            currentScopeURI={this.currentScope.uri}\n            key={`${preferenceNode.id}-editor`}\n            preferencesService={this.preferenceValueRetrievalService}\n            openJSON={this.openJSON}\n        />;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { Menu, PreferenceDataProperty, PreferenceScope, PreferenceItem, PreferenceService, ContextMenuRenderer } from '@theia/core/lib/browser';\nimport { PreferenceSelectInput, PreferenceBooleanInput, PreferenceStringInput, PreferenceNumberInput, PreferenceJSONInput, PreferenceArrayInput } from '.';\nimport { Preference, PreferenceMenus } from '../../util/preference-types';\n\ninterface SinglePreferenceWrapperProps {\n    contextMenuRenderer: ContextMenuRenderer;\n    preferenceDisplayNode: Preference.NodeWithValueInAllScopes;\n    currentScope: number;\n    currentScopeURI: string;\n    preferencesService: PreferenceService;\n    openJSON(preferenceNode: Preference.NodeWithValueInAllScopes): void;\n}\n\ninterface SinglePreferenceWrapperState {\n    showCog: boolean;\n    menuOpen: boolean;\n}\n\nexport class SinglePreferenceWrapper extends React.Component<SinglePreferenceWrapperProps, SinglePreferenceWrapperState> {\n    protected contextMenu: Menu;\n    protected value: PreferenceItem | undefined;\n\n    state: SinglePreferenceWrapperState = {\n        showCog: false,\n        menuOpen: false\n    };\n\n    protected handleOnCogClick = (e: React.MouseEvent | React.KeyboardEvent): void => {\n        if (this.value !== undefined) {\n            const target = (e.target as HTMLElement);\n            const domRect = target.getBoundingClientRect();\n            this.props.contextMenuRenderer.render({\n                menuPath: PreferenceMenus.PREFERENCE_EDITOR_CONTEXT_MENU,\n                anchor: { x: domRect.left, y: domRect.bottom },\n                args: [{ id: this.props.preferenceDisplayNode.id, value: this.value }],\n                onHide: this.setMenuHidden\n            });\n            this.setMenuShown();\n        }\n    };\n\n    protected setMenuShown = () => {\n        this.setState({ menuOpen: true });\n    };\n\n    protected setMenuHidden = () => {\n        this.setState({ menuOpen: false });\n    };\n\n    protected showCog = () => {\n        this.setState({ showCog: true });\n    };\n\n    protected hideCog = () => {\n        this.setState({ showCog: false });\n    };\n\n    render(): React.ReactNode {\n        const { preferenceDisplayNode } = this.props;\n        const { preference: { data, values } } = preferenceDisplayNode;\n\n        this.value = this.getValueInCurrentScope(values, this.props.currentScope);\n\n        const currentValueIsDefaultValue = this.value === data.defaultValue;\n\n        const singlePreferenceValueDisplayNode = { ...preferenceDisplayNode, preference: { data, value: this.value } };\n        const description = data.markdownDescription || data.description;\n        if (preferenceDisplayNode.visible) {\n            return (<li\n                className='single-pref'\n                id={`${preferenceDisplayNode.id}-editor`}\n                key={preferenceDisplayNode.id}\n                data-id={preferenceDisplayNode.id}\n            >\n                <div className=\"pref-name\">\n                    {preferenceDisplayNode.name}\n                    {this.renderOtherModifiedScopes(values, data, this.props.currentScope)}\n                </div>\n                <div className={`pref-context-gutter ${!currentValueIsDefaultValue ? 'theia-mod-item-modified' : ''}`}\n                    onMouseOver={this.showCog}\n                    onMouseOut={this.hideCog}\n                >\n                    <i\n                        className={`codicon codicon-settings-gear settings-context-menu-btn ${(this.state.showCog || this.state.menuOpen) ? 'show-cog' : ''}`}\n                        aria-label=\"Open Context Menu\"\n                        role=\"button\"\n                        onClick={this.handleOnCogClick}\n                        onKeyDown={this.handleOnCogClick}\n                        title=\"More actions...\"\n                    />\n                </div>\n                <div\n                    className={`pref-content-container ${data.type || 'open-json'}`}\n                    onFocus={this.showCog}\n                    onBlur={this.hideCog}\n                >\n                    {description && <div className='pref-description'>{description}</div>}\n                    <div className='pref-input' >{this.getInputType(singlePreferenceValueDisplayNode)}</div>\n                </div>\n            </li>);\n        } else {\n            return <></>;\n        }\n    }\n\n    protected openJSONForCurrentPreference = () => {\n        this.props.openJSON(this.props.preferenceDisplayNode);\n    };\n\n    protected getValueInCurrentScope(preferenceValuesInAllScopes: Preference.ValuesInAllScopes | undefined, currentScope: number): PreferenceItem | undefined {\n        if (preferenceValuesInAllScopes) {\n            const key = Preference.LookupKeys[currentScope] as keyof Preference.ValuesInAllScopes;\n            return preferenceValuesInAllScopes[key] === undefined ? preferenceValuesInAllScopes.defaultValue : preferenceValuesInAllScopes[key] as PreferenceItem;\n        }\n        return undefined;\n    }\n\n    protected renderOtherModifiedScopes(\n        preferenceValuesInAllScopes: Preference.ValuesInAllScopes | undefined,\n        data: PreferenceDataProperty,\n        currentScope: number): React.ReactNode[] | undefined {\n        if (preferenceValuesInAllScopes) {\n            return ['User', 'Workspace'].map((scope: 'User' | 'Workspace') => {\n                const matchingScope = PreferenceScope[scope];\n                const valueInCurrentScope = preferenceValuesInAllScopes[Preference.LookupKeys[currentScope] as keyof Preference.ValuesInAllScopes];\n                if (currentScope !== matchingScope) {\n                    const valueInOtherScope = preferenceValuesInAllScopes[Preference.LookupKeys[matchingScope] as keyof Preference.ValuesInAllScopes];\n                    if (valueInOtherScope && valueInOtherScope !== data.defaultValue) {\n                        const message = valueInCurrentScope && valueInCurrentScope !== data.defaultValue ? `Also modified in: ${scope}.` : `Modified in: ${scope}.`;\n                        return <i key={`modified-in-${scope}-alert`}><span> {message}</span></i>;\n                    }\n                }\n            });\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected setPreference = (preferenceName: string, preferenceValue: any): void => {\n        this.props.preferencesService.set(preferenceName, preferenceValue, this.props.currentScope, this.props.currentScopeURI);\n    };\n\n    getInputType = (preferenceDisplayNode: Preference.NodeWithValueInSingleScope): React.ReactNode => {\n        const { type, items } = preferenceDisplayNode.preference.data;\n        if (preferenceDisplayNode.preference.data.enum) {\n            return <PreferenceSelectInput\n                preferenceDisplayNode={preferenceDisplayNode}\n                setPreference={this.setPreference}\n            />;\n        } if (type === 'boolean') {\n            return <PreferenceBooleanInput\n                preferenceDisplayNode={preferenceDisplayNode}\n                setPreference={this.setPreference}\n            />;\n        } if (type === 'string') {\n            return <PreferenceStringInput\n                preferenceDisplayNode={preferenceDisplayNode}\n                setPreference={this.setPreference}\n            />;\n        } if (type === 'number' || type === 'integer') {\n            return <PreferenceNumberInput\n                preferenceDisplayNode={preferenceDisplayNode}\n                setPreference={this.setPreference}\n            />;\n        } if (type === 'array') {\n            if (items && items.type === 'object') {\n                return <PreferenceJSONInput\n                    preferenceDisplayNode={preferenceDisplayNode}\n                    onClick={this.openJSONForCurrentPreference}\n                />;\n            }\n            return <PreferenceArrayInput\n                preferenceDisplayNode={preferenceDisplayNode}\n                setPreference={this.setPreference}\n            />;\n        } if (type === 'object') {\n            return <PreferenceJSONInput\n                preferenceDisplayNode={preferenceDisplayNode}\n                onClick={this.openJSONForCurrentPreference}\n            />;\n        }\n        return <PreferenceJSONInput\n            preferenceDisplayNode={preferenceDisplayNode}\n            onClick={this.openJSONForCurrentPreference}\n        />;\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { postConstruct, injectable, inject } from 'inversify';\nimport * as React from 'react';\nimport { Disposable } from 'vscode-jsonrpc';\nimport {\n    ReactWidget,\n    PreferenceService,\n    PreferenceDataProperty,\n    PreferenceScope,\n    CompositeTreeNode,\n    SelectableTreeNode,\n    PreferenceItem,\n} from '@theia/core/lib/browser';\nimport { Message, } from '@theia/core/lib/browser/widgets/widget';\nimport { SinglePreferenceDisplayFactory } from './components/single-preference-display-factory';\nimport { Preference } from '../util/preference-types';\nimport { PreferencesEventService } from '../util/preference-event-service';\nimport { PreferencesTreeProvider } from '../preference-tree-provider';\n\n@injectable()\nexport class PreferencesEditorWidget extends ReactWidget {\n    static readonly ID = 'settings.editor';\n    static readonly LABEL = 'Settings Editor';\n\n    protected properties: { [key: string]: PreferenceDataProperty; };\n    protected currentDisplay: CompositeTreeNode;\n    protected activeScope: number = PreferenceScope.User;\n    protected activeURI: string = '';\n    protected activeScopeIsFolder: boolean = false;\n    protected scrollContainerRef: React.RefObject<HTMLDivElement> = React.createRef();\n    protected hasRendered = false;\n    protected _preferenceScope: Preference.SelectedScopeDetails = Preference.DEFAULT_SCOPE;\n\n    @inject(PreferencesEventService) protected readonly preferencesEventService: PreferencesEventService;\n    @inject(PreferenceService) protected readonly preferenceValueRetrievalService: PreferenceService;\n    @inject(PreferencesTreeProvider) protected readonly preferenceTreeProvider: PreferencesTreeProvider;\n    @inject(SinglePreferenceDisplayFactory) protected readonly singlePreferenceFactory: SinglePreferenceDisplayFactory;\n\n    @postConstruct()\n    protected init(): void {\n        this.onRender.push(Disposable.create(() => this.hasRendered = true));\n        this.id = PreferencesEditorWidget.ID;\n        this.title.label = PreferencesEditorWidget.LABEL;\n        this.preferenceValueRetrievalService.onPreferenceChanged((preferenceChange): void => {\n            this.update();\n        });\n        this.preferencesEventService.onDisplayChanged.event(() => this.handleChangeDisplay());\n        this.preferencesEventService.onNavTreeSelection.event(e => this.scrollToEditorElement(e.nodeID));\n        this.currentDisplay = this.preferenceTreeProvider.currentTree;\n        this.properties = this.preferenceTreeProvider.propertyList;\n        this.update();\n    }\n\n    set preferenceScope(preferenceScopeDetails: Preference.SelectedScopeDetails) {\n        this._preferenceScope = preferenceScopeDetails;\n        this.handleChangeScope(this._preferenceScope);\n    }\n\n    protected callAfterFirstRender(callback: Function): void {\n        if (this.hasRendered) {\n            callback();\n        } else {\n            this.onRender.push(Disposable.create(() => callback()));\n        }\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        this.callAfterFirstRender(() => {\n            super.onAfterAttach(msg);\n            this.node.addEventListener('scroll', this.onScroll);\n        });\n    }\n\n    protected render(): React.ReactNode {\n        const visibleCategories = this.currentDisplay.children.filter(category => category.visible);\n        return (\n            <div className=\"settings-main\">\n                <div ref={this.scrollContainerRef} className=\"settings-main-scroll-container\" id=\"settings-main-scroll-container\">\n                    {!!visibleCategories.length ? visibleCategories.map(category => this.renderCategory(category as Preference.Branch)) : this.renderNoResultMessage()}\n                </div>\n            </div>\n        );\n    }\n\n    protected handleChangeDisplay = (): void => {\n        // This is here to avoid using the synthetic event asynchronously\n        this.currentDisplay = this.preferenceTreeProvider.currentTree;\n        this.properties = this.preferenceTreeProvider.propertyList;\n        this.node.scrollTop = 0;\n        this.update();\n    };\n\n    protected onScroll = (): void => {\n        const scrollContainer = this.node;\n        const scrollIsTop = scrollContainer.scrollTop === 0;\n        const visibleChildren: string[] = [];\n        this.addFirstVisibleChildId(scrollContainer, visibleChildren);\n        if (visibleChildren.length) {\n            this.preferencesEventService.onEditorScroll.fire({\n                firstVisibleChildId: visibleChildren[0],\n                isTop: scrollIsTop\n            });\n        }\n    };\n\n    protected addFirstVisibleChildId(container: Element, array: string[]): void {\n        const children = container.children;\n        for (let i = 0; i < children.length && !array.length; i++) {\n            const id = children[i].getAttribute('data-id');\n            if (id && this.isInView(children[i] as HTMLElement, container as HTMLElement)) {\n                array.push(id);\n            } else if (!array.length) {\n                this.addFirstVisibleChildId(children[i], array);\n            }\n        }\n    }\n\n    protected isInView(e: HTMLElement, parent: HTMLElement): boolean {\n        const scrollTop = this.node.scrollTop;\n        const scrollCheckHeight = 0.7;\n        return this.compare(e.offsetTop).isBetween(scrollTop, scrollTop + parent.offsetHeight) ||\n            this.compare(scrollTop).isBetween(e.offsetTop, e.offsetTop + (e.offsetHeight * scrollCheckHeight));\n    }\n\n    protected compare = (value: number): { isBetween: (a: number, b: number) => boolean; } => ({\n        isBetween: (a: number, b: number): boolean => (\n            (value >= a && value <= b) || (value >= b && value <= a)\n        )\n    });\n\n    protected handleChangeScope = ({ scope, uri, activeScopeIsFolder }: Preference.SelectedScopeDetails): void => {\n        this.activeScope = Number(scope);\n        this.activeURI = uri;\n        this.activeScopeIsFolder = activeScopeIsFolder === 'true';\n        this.update();\n    };\n\n    protected renderCategory(category: Preference.Branch): React.ReactNode {\n        const children = category.children.concat(category.leaves).sort((a, b) => this.sort(a.id, b.id));\n        return category.visible && (\n            <ul\n                className=\"settings-section\"\n                key={`${category.id}-editor`}\n                id={`${category.id}-editor`}\n            >\n                <li className=\"settings-section-title\" data-id={category.id}>{category.name}</li>\n                {children.map((preferenceNode: SelectableTreeNode | Preference.Branch) => {\n                    if (Preference.Branch.is(preferenceNode)) {\n                        return this.renderCategory(preferenceNode);\n                    }\n                    const values = this.preferenceValueRetrievalService.inspect<PreferenceItem>(preferenceNode.id, this.activeURI);\n                    const preferenceNodeWithValueInAllScopes = { ...preferenceNode, preference: { data: this.properties[preferenceNode.id], values } };\n                    return this.singlePreferenceFactory.render(preferenceNodeWithValueInAllScopes);\n                })}\n            </ul>\n        );\n    }\n\n    protected renderNoResultMessage(): React.ReactNode {\n        return <div className=\"settings-no-results-announcement\">That search query has returned no results.</div>;\n    }\n\n    protected scrollToEditorElement(nodeID: string): void {\n        if (nodeID) {\n            const el = document.getElementById(`${nodeID}-editor`);\n            if (el) {\n                el.scrollIntoView();\n            }\n        }\n    }\n\n    /**\n     * Sort two strings.\n     *\n     * @param a the first string.\n     * @param b the second string.\n     */\n    protected sort(a: string, b: string): number {\n        return a.localeCompare(b, undefined, { ignorePunctuation: true });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { TabBar, Widget, Title } from '@phosphor/widgets';\nimport { PreferenceScope, Message, ContextMenuRenderer, LabelProvider } from '@theia/core/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileStat } from '@theia/filesystem/lib/common';\nimport { PreferencesEventService } from '../util/preference-event-service';\nimport { PreferenceScopeCommandManager, FOLDER_SCOPE_MENU_PATH } from '../util/preference-scope-command-manager';\nimport { Preference } from '../util/preference-types';\n\nconst USER_TAB_LABEL = 'User';\nconst USER_TAB_INDEX = PreferenceScope[USER_TAB_LABEL].toString();\nconst WORKSPACE_TAB_LABEL = 'Workspace';\nconst WORKSPACE_TAB_INDEX = PreferenceScope[WORKSPACE_TAB_LABEL].toString();\nconst FOLDER_TAB_LABEL = 'Folder';\nconst FOLDER_TAB_INDEX = PreferenceScope[FOLDER_TAB_LABEL].toString();\n\nconst PREFERENCE_TAB_CLASSNAME = 'preferences-scope-tab';\nconst GENERAL_FOLDER_TAB_CLASSNAME = 'preference-folder';\nconst LABELED_FOLDER_TAB_CLASSNAME = 'preferences-folder-tab';\nconst FOLDER_DROPDOWN_CLASSNAME = 'preferences-folder-dropdown';\nconst FOLDER_DROPDOWN_ICON_CLASSNAME = 'preferences-folder-dropdown-icon';\nconst TABBAR_UNDERLINE_CLASSNAME = 'tabbar-underline';\nconst SHADOW_CLASSNAME = 'with-shadow';\nconst SINGLE_FOLDER_TAB_CLASSNAME = `${PREFERENCE_TAB_CLASSNAME} ${GENERAL_FOLDER_TAB_CLASSNAME} ${LABELED_FOLDER_TAB_CLASSNAME}`;\nconst UNSELECTED_FOLDER_DROPDOWN_CLASSNAME = `${PREFERENCE_TAB_CLASSNAME} ${GENERAL_FOLDER_TAB_CLASSNAME} ${FOLDER_DROPDOWN_CLASSNAME}`;\nconst SELECTED_FOLDER_DROPDOWN_CLASSNAME = `${PREFERENCE_TAB_CLASSNAME} ${GENERAL_FOLDER_TAB_CLASSNAME} ${LABELED_FOLDER_TAB_CLASSNAME} ${FOLDER_DROPDOWN_CLASSNAME}`;\n\n@injectable()\nexport class PreferencesScopeTabBar extends TabBar<Widget> {\n\n    static ID = 'preferences-scope-tab-bar';\n    @inject(PreferencesEventService) protected readonly preferencesEventService: PreferencesEventService;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(PreferenceScopeCommandManager) protected readonly preferencesMenuFactory: PreferenceScopeCommandManager;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    protected folderTitle: Title<Widget>;\n    protected currentWorkspaceRoots: FileStat[] = [];\n    protected currentSelection: Preference.SelectedScopeDetails = Preference.DEFAULT_SCOPE;\n    protected editorScrollAtTop = true;\n    protected setNewScopeSelection(newSelection: Preference.SelectedScopeDetails): void {\n\n        const newIndex = this.titles.findIndex(title => title.dataset.scope === newSelection.scope);\n        if (newIndex !== -1) {\n            this.currentSelection = newSelection;\n            this.currentIndex = newIndex;\n            if (newSelection.scope === PreferenceScope.Folder.toString()) {\n                this.addOrUpdateFolderTab();\n            }\n            this.emitNewScope();\n        }\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.id = PreferencesScopeTabBar.ID;\n        this.setupInitialDisplay();\n        this.tabActivateRequested.connect((sender, args) => {\n            if (!!args.title) {\n                this.setNewScopeSelection(args.title.dataset as unknown as Preference.SelectedScopeDetails);\n            }\n        });\n        this.workspaceService.onWorkspaceChanged(newRoots => {\n            this.doUpdateDisplay(newRoots);\n        });\n        this.workspaceService.onWorkspaceLocationChanged(() => this.updateWorkspaceTab());\n        this.preferencesEventService.onEditorScroll.event((e: Preference.MouseScrollDetails) => {\n            if (e.isTop !== this.editorScrollAtTop) {\n                this.editorScrollAtTop = e.isTop;\n                if (this.editorScrollAtTop) {\n                    this.removeClass(SHADOW_CLASSNAME);\n                } else {\n                    this.addClass(SHADOW_CLASSNAME);\n                }\n            }\n        });\n        const tabUnderline = document.createElement('div');\n        tabUnderline.className = TABBAR_UNDERLINE_CLASSNAME;\n        this.node.append(tabUnderline);\n    }\n\n    protected setupInitialDisplay(): void {\n        this.addUserTab();\n        this.addWorkspaceTab();\n        this.addOrUpdateFolderTab();\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        this.addTabIndexToTabs();\n    }\n\n    protected addTabIndexToTabs(): void {\n        this.node.querySelectorAll('li').forEach((tab, index) => {\n            tab.tabIndex = 0;\n            tab.onkeypress = () => {\n                if (tab.className.includes(GENERAL_FOLDER_TAB_CLASSNAME) && this.currentWorkspaceRoots.length > 1) {\n                    const tabRect = tab.getBoundingClientRect();\n                    this.openContextMenu(tabRect, tab, 'keypress');\n                } else {\n                    this.setNewScopeSelection(this.titles[index].dataset as unknown as Preference.SelectedScopeDetails);\n                }\n            };\n        });\n    }\n\n    protected addUserTab(): void {\n        this.addTab(new Title({\n            dataset: { uri: '', scope: USER_TAB_INDEX },\n            label: USER_TAB_LABEL,\n            owner: this,\n            className: PREFERENCE_TAB_CLASSNAME\n        }));\n    }\n\n    protected addWorkspaceTab(): void {\n        if (!!this.workspaceService.workspace) {\n            this.addTab(new Title({\n                dataset: this.getWorkspaceDataset(),\n                label: WORKSPACE_TAB_LABEL,\n                owner: this,\n                className: PREFERENCE_TAB_CLASSNAME,\n            }));\n        }\n    }\n\n    protected getWorkspaceDataset(): Preference.SelectedScopeDetails {\n        const { uri, isDirectory } = this.workspaceService.workspace!;\n        const scope = WORKSPACE_TAB_INDEX;\n        const activeScopeIsFolder = isDirectory.toString();\n        return { uri, activeScopeIsFolder, scope };\n    }\n\n    protected addOrUpdateFolderTab(): void {\n        if (!!this.workspaceService.workspace) {\n            this.currentWorkspaceRoots = this.workspaceService.tryGetRoots();\n            const multipleFolderRootsAreAvailable = this.currentWorkspaceRoots && this.currentWorkspaceRoots.length > 1;\n            const noFolderRootsAreAvailable = this.currentWorkspaceRoots.length === 0;\n            const shouldShowFoldersSeparately = this.workspaceService.saved;\n\n            if (!noFolderRootsAreAvailable) {\n                if (!this.folderTitle) {\n                    this.folderTitle = new Title({\n                        label: '',\n                        caption: FOLDER_TAB_LABEL,\n                        owner: this,\n                    });\n                }\n\n                this.setFolderTitleProperties(multipleFolderRootsAreAvailable);\n                this.getFolderContextMenu(this.currentWorkspaceRoots);\n                if (multipleFolderRootsAreAvailable || shouldShowFoldersSeparately) {\n                    this.addTab(this.folderTitle);\n                }\n            } else {\n                const folderTabIndex = this.titles.findIndex(title => title.caption === FOLDER_TAB_LABEL);\n\n                if (folderTabIndex > -1) {\n                    this.removeTabAt(folderTabIndex);\n                }\n            }\n        }\n    }\n\n    protected setFolderTitleProperties(multipleFolderRootsAreAvailable: boolean): void {\n        this.folderTitle.iconClass = multipleFolderRootsAreAvailable ? FOLDER_DROPDOWN_ICON_CLASSNAME : '';\n        if (this.currentSelection.scope === FOLDER_TAB_INDEX) {\n            this.folderTitle.label = this.labelProvider.getName(new URI(this.currentSelection.uri));\n            this.folderTitle.dataset = { ...this.currentSelection, folderTitle: 'true' };\n            this.folderTitle.className = multipleFolderRootsAreAvailable ? SELECTED_FOLDER_DROPDOWN_CLASSNAME : SINGLE_FOLDER_TAB_CLASSNAME;\n        } else {\n            const singleFolderRoot = this.currentWorkspaceRoots[0].uri;\n            const singleFolderLabel = this.labelProvider.getName(new URI(singleFolderRoot));\n            const defaultURI = multipleFolderRootsAreAvailable ? '' : singleFolderRoot;\n            this.folderTitle.label = multipleFolderRootsAreAvailable ? FOLDER_TAB_LABEL : singleFolderLabel;\n            this.folderTitle.className = multipleFolderRootsAreAvailable ? UNSELECTED_FOLDER_DROPDOWN_CLASSNAME : SINGLE_FOLDER_TAB_CLASSNAME;\n            this.folderTitle.dataset = { folderTitle: 'true', scope: FOLDER_TAB_INDEX, uri: defaultURI };\n        }\n    }\n\n    protected folderSelectionCallback = (newScope: Preference.SelectedScopeDetails): void => { this.setNewScopeSelection(newScope); };\n\n    protected getFolderContextMenu(workspaceRoots = this.workspaceService.tryGetRoots()): void {\n        this.preferencesMenuFactory.createFolderWorkspacesMenu(workspaceRoots, this.currentSelection.uri);\n    }\n\n    handleEvent(e: Event): void {\n        const folderTab = this.contentNode.querySelector(`.${GENERAL_FOLDER_TAB_CLASSNAME}`);\n        if (folderTab && folderTab.contains(e.target as HTMLElement) && this.currentWorkspaceRoots.length > 1) {\n            const tabRect = folderTab.getBoundingClientRect();\n            this.openContextMenu(tabRect, (folderTab as HTMLElement), 'click');\n            return;\n        }\n        super.handleEvent(e);\n    }\n\n    protected openContextMenu(tabRect: DOMRect | ClientRect, folderTabNode: HTMLElement, source: 'click' | 'keypress'): void {\n        this.contextMenuRenderer.render({\n            menuPath: FOLDER_SCOPE_MENU_PATH,\n            anchor: { x: tabRect.left, y: tabRect.bottom },\n            args: [this.folderSelectionCallback, 'from-tabbar'],\n            onHide: () => {\n                if (source === 'click') { folderTabNode.blur(); }\n            }\n        });\n    }\n\n    protected doUpdateDisplay(newRoots: FileStat[]): void {\n        const folderWasRemoved = newRoots.length < this.currentWorkspaceRoots.length;\n        this.currentWorkspaceRoots = newRoots;\n        if (folderWasRemoved) {\n            const removedFolderWasSelectedScope = !this.currentWorkspaceRoots.some(root => root.uri === this.currentSelection.uri);\n            if (removedFolderWasSelectedScope) {\n                this.setNewScopeSelection(Preference.DEFAULT_SCOPE);\n            }\n        }\n        this.updateWorkspaceTab();\n        this.addOrUpdateFolderTab();\n    }\n\n    protected updateWorkspaceTab(): void {\n        // Will always be present - otherwise workspace cannot change.\n        const workspaceTitle = this.titles.find(title => title.label === WORKSPACE_TAB_LABEL)!;\n        workspaceTitle.dataset = this.getWorkspaceDataset();\n        if (this.currentSelection.scope === PreferenceScope.Workspace.toString()) {\n            this.setNewScopeSelection(workspaceTitle.dataset as Preference.SelectedScopeDetails);\n        }\n    }\n\n    protected emitNewScope(): void {\n        this.preferencesEventService.onTabScopeSelected.fire(this.currentSelection);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { ReactWidget } from '@theia/core/lib/browser';\nimport * as React from 'react';\nimport { debounce } from 'lodash';\nimport { Disposable } from '@theia/languages/lib/browser';\nimport { PreferencesEventService } from '../util/preference-event-service';\n\n@injectable()\nexport class PreferencesSearchbarWidget extends ReactWidget {\n    static readonly ID = 'settings.header';\n    static readonly LABEL = 'Settings Header';\n\n    protected searchbarRef: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>();\n\n    @inject(PreferencesEventService) protected readonly preferencesEventService: PreferencesEventService;\n\n    @postConstruct()\n    protected init(): void {\n        this.onRender.push(Disposable.create(() => this.focus()));\n        this.id = PreferencesSearchbarWidget.ID;\n        this.title.label = PreferencesSearchbarWidget.LABEL;\n        this.update();\n    }\n\n    protected handleSearch = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        this.search(e.target.value);\n    };\n\n    protected search = debounce((value: string) => {\n        this.preferencesEventService.onSearch.fire({ query: value });\n        this.update();\n    }, 200);\n\n    focus(): void {\n        if (this.searchbarRef.current) {\n            this.searchbarRef.current.focus();\n        }\n    }\n\n    render(): React.ReactNode {\n        return (\n            <div className='settings-header'>\n                <div className=\"settings-search-container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search Settings\"\n                        className=\"settings-search-input theia-input\"\n                        onChange={this.handleSearch}\n                        ref={this.searchbarRef}\n                    />\n                </div>\n            </div >\n        );\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Message } from '@phosphor/messaging';\nimport {\n    ContextMenuRenderer,\n    ExpandableTreeNode,\n    PreferenceService,\n    TreeModel,\n    TreeNode,\n    TreeProps,\n    TreeWidget,\n    SelectableTreeNode,\n    TREE_NODE_CONTENT_CLASS,\n    NodeProps,\n    CompositeTreeNode,\n} from '@theia/core/lib/browser';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport React = require('react');\nimport { PreferencesEventService } from '../util/preference-event-service';\nimport { PreferencesDecorator } from '../preferences-decorator';\nimport { PreferencesTreeProvider } from '../preference-tree-provider';\nimport { Preference } from '../util/preference-types';\n\n@injectable()\nexport class PreferencesTreeWidget extends TreeWidget {\n    static ID = 'preferences.tree';\n\n    protected shouldFireSelectionEvents: boolean = true;\n    protected firstVisibleLeafNodeID: string;\n\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n    @inject(PreferencesDecorator) protected readonly decorator: PreferencesDecorator;\n    @inject(PreferenceConfigurations) protected readonly preferenceConfigs: PreferenceConfigurations;\n    @inject(PreferencesTreeProvider) protected readonly preferenceTreeProvider: PreferencesTreeProvider;\n    @inject(TreeModel) readonly model: TreeModel;\n    @inject(TreeProps) protected readonly treeProps: TreeProps;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n    @inject(PreferencesEventService) protected readonly preferencesEventService: PreferencesEventService;\n\n    @postConstruct()\n    init(): void {\n        super.init();\n        this.preferencesEventService.onDisplayChanged.event(() => this.updateDisplay());\n        this.preferencesEventService.onEditorScroll.event(e => {\n            this.handleEditorScroll(e.firstVisibleChildId);\n        });\n        this.id = PreferencesTreeWidget.ID;\n    }\n\n    protected handleEditorScroll(firstVisibleChildId: string): void {\n        this.shouldFireSelectionEvents = false;\n        if (firstVisibleChildId !== this.firstVisibleLeafNodeID) {\n            const { selectionAncestor, expansionAncestor } = this.getAncestorsForVisibleNode(firstVisibleChildId);\n\n            this.firstVisibleLeafNodeID = firstVisibleChildId;\n            this.model.expandNode(expansionAncestor);\n            this.collapseAllExcept(expansionAncestor);\n            this.model.selectNode(selectionAncestor);\n        }\n        this.shouldFireSelectionEvents = true;\n    }\n\n    protected collapseAllExcept(openNode: Preference.TreeExtension): void {\n        const children = (this.model.root as CompositeTreeNode).children as ExpandableTreeNode[];\n        children.forEach(child => {\n            if (child !== openNode && child.expanded) {\n                this.model.collapseNode(child);\n            }\n        });\n    }\n\n    protected getAncestorsForVisibleNode(visibleNodeID: string): { selectionAncestor: SelectableTreeNode, expansionAncestor: ExpandableTreeNode; } {\n        const isNonLeafNode = visibleNodeID.endsWith('-id');\n        const isSubgroupNode = isNonLeafNode && visibleNodeID.includes('.');\n        let expansionAncestor: ExpandableTreeNode;\n        let selectionAncestor: SelectableTreeNode;\n\n        if (isSubgroupNode) {\n            selectionAncestor = this.model.getNode(visibleNodeID) as SelectableTreeNode;\n            expansionAncestor = selectionAncestor.parent as ExpandableTreeNode;\n        } else if (isNonLeafNode) {\n            selectionAncestor = this.model.getNode(visibleNodeID) as SelectableTreeNode;\n            expansionAncestor = selectionAncestor as Preference.TreeExtension as ExpandableTreeNode;\n        } else {\n            const labels = visibleNodeID.split('.');\n            const hasSubgroupAncestor = labels.length > 2;\n            const expansionAncestorID = `${labels[0]}-id`;\n            expansionAncestor = this.model.getNode(expansionAncestorID) as ExpandableTreeNode;\n            if (hasSubgroupAncestor) {\n                const subgroupID = labels.slice(0, 2).join('.') + '-id';\n                selectionAncestor = this.model.getNode(subgroupID) as SelectableTreeNode;\n            } else {\n                // The last selectable child that precedes the visible item alphabetically\n                selectionAncestor = [...expansionAncestor.children].reverse().find(child => child.visible && child.id < visibleNodeID) as SelectableTreeNode || expansionAncestor;\n            }\n        }\n        return { selectionAncestor, expansionAncestor };\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        this.updateDisplay();\n        this.model.onSelectionChanged(previousAndCurrentSelectedNodes => this.fireEditorScrollForNewSelection(previousAndCurrentSelectedNodes));\n        super.onAfterAttach(msg);\n    }\n\n    protected updateDisplay(): void {\n        if (this.preferenceTreeProvider) {\n            this.model.root = this.preferenceTreeProvider.currentTree;\n            const nodes = Object.keys(this.preferenceTreeProvider.propertyList)\n                .map(propertyName => ({ [propertyName]: this.preferenceTreeProvider.propertyList[propertyName] }));\n            this.decorator.fireDidChangeDecorations(nodes);\n            this.update();\n        }\n    }\n\n    protected fireEditorScrollForNewSelection(previousAndCurrentSelectedNodes: readonly SelectableTreeNode[]): void {\n        if (this.shouldFireSelectionEvents) {\n            const [currentSelectedNode] = previousAndCurrentSelectedNodes;\n            this.firstVisibleLeafNodeID = currentSelectedNode.id;\n            this.preferencesEventService.onNavTreeSelection.fire({ nodeID: currentSelectedNode.id });\n        }\n    }\n\n    protected renderNode(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (!TreeNode.isVisible(node)) {\n            return undefined;\n        }\n\n        const attributes = this.createNodeAttributes(node, props);\n        const printedNameWithVisibleChildren = node.name && this.preferenceTreeProvider.isFiltered\n            ? `${node.name} (${this.calculateVisibleLeaves(node)})`\n            : node.name;\n\n        const content = <div className={TREE_NODE_CONTENT_CLASS}>\n            {this.renderExpansionToggle(node, props)}\n            {this.renderCaption({ ...node, name: printedNameWithVisibleChildren }, props)}\n        </div>;\n        return React.createElement('div', attributes, content);\n    }\n\n    protected calculateVisibleLeaves(node: Preference.TreeExtension): number {\n        let visibleLeaves = 0;\n        // The check for node.name prevents recursion at the level of `root`.\n        if (node.children) {\n            node.children.forEach(child => {\n                visibleLeaves += this.calculateVisibleLeaves(child);\n            });\n        }\n        if (node.leaves) {\n            node.leaves.forEach(leaf => {\n                if (leaf.visible) {\n                    visibleLeaves++;\n                };\n            });\n        }\n        return visibleLeaves;\n    }\n\n    protected renderExpansionToggle(node: Preference.TreeExtension, props: NodeProps): React.ReactNode {\n        if (node.children && node.children.every(child => !child.visible)) {\n            return <div className='preferences-tree-spacer' />;\n        }\n        return super.renderExpansionToggle(node, props);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { interfaces } from 'inversify';\nimport { WidgetFactory, createTreeContainer, TreeWidget, TreeProps, defaultTreeProps, TreeDecoratorService } from '@theia/core/lib/browser';\nimport { SinglePreferenceDisplayFactory } from './components/single-preference-display-factory';\nimport { SinglePreferenceWrapper } from './components/single-preference-wrapper';\nimport { PreferencesWidget } from './preference-widget';\nimport { PreferencesTreeWidget } from './preference-tree-widget';\nimport { PreferencesEditorWidget } from './preference-editor-widget';\nimport { PreferencesSearchbarWidget } from './preference-searchbar-widget';\nimport { PreferencesScopeTabBar } from './preference-scope-tabbar-widget';\nimport { PreferencesDecorator } from '../preferences-decorator';\nimport { PreferencesDecoratorService } from '../preferences-decorator-service';\n\nexport function bindPreferencesWidgets(bind: interfaces.Bind): void {\n    bind(PreferencesWidget).toSelf().inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(({ container }) => ({\n        id: PreferencesWidget.ID,\n        createWidget: () => container.get(PreferencesWidget)\n    })).inSingletonScope();\n\n    bind(SinglePreferenceWrapper).toSelf();\n\n    bind(PreferencesTreeWidget).toDynamicValue(ctx =>\n        createPreferencesTree(ctx.container)\n    ).inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PreferencesTreeWidget.ID,\n        createWidget: (): PreferencesTreeWidget => context.container.get(PreferencesTreeWidget),\n    })).inSingletonScope();\n\n    bind(PreferencesEditorWidget).toSelf().inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PreferencesEditorWidget.ID,\n        createWidget: (): PreferencesEditorWidget => context.container.get<PreferencesEditorWidget>(PreferencesEditorWidget),\n    })).inSingletonScope();\n\n    bind(PreferencesSearchbarWidget).toSelf().inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PreferencesSearchbarWidget.ID,\n        createWidget: (): PreferencesSearchbarWidget => context.container.get<PreferencesSearchbarWidget>(PreferencesSearchbarWidget),\n    })).inSingletonScope();\n\n    bind(PreferencesScopeTabBar).toSelf().inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PreferencesScopeTabBar.ID,\n        createWidget: (): PreferencesScopeTabBar => context.container.get<PreferencesScopeTabBar>(PreferencesScopeTabBar),\n    })).inSingletonScope();\n\n    bind(SinglePreferenceDisplayFactory).toSelf().inSingletonScope();\n}\n\nfunction createPreferencesTree(parent: interfaces.Container): PreferencesTreeWidget {\n    const child = createTreeContainer(parent);\n    child.unbind(TreeWidget);\n    child.bind(PreferencesTreeWidget).toSelf();\n    child.rebind(TreeProps).toConstantValue({ ...defaultTreeProps, search: false });\n\n    bindPreferencesDecorator(child);\n\n    return child.get(PreferencesTreeWidget);\n}\n\nfunction bindPreferencesDecorator(parent: interfaces.Container): void {\n    parent.bind(PreferencesDecorator).toSelf().inSingletonScope();\n    parent.bind(PreferencesDecoratorService).toSelf().inSingletonScope();\n    parent.rebind(TreeDecoratorService).toService(PreferencesDecoratorService);\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { postConstruct, injectable, inject } from 'inversify';\nimport { WidgetManager, Panel, Widget, Message, } from '@theia/core/lib/browser';\nimport { Preference } from '../util/preference-types';\nimport { PreferencesEditorWidget } from './preference-editor-widget';\nimport { PreferencesTreeWidget } from './preference-tree-widget';\nimport { PreferencesSearchbarWidget } from './preference-searchbar-widget';\nimport { PreferencesScopeTabBar } from './preference-scope-tabbar-widget';\n\n@injectable()\nexport class PreferencesWidget extends Panel {\n    /**\n     * The widget `id`.\n     */\n    static readonly ID = 'settings_widget';\n    /**\n     * The widget `label` which is used for display purposes.\n     */\n    static readonly LABEL = 'Preferences';\n\n    static readonly COMMAND_LABEL = 'Open Preferences';\n\n    protected _preferenceScope: Preference.SelectedScopeDetails = Preference.DEFAULT_SCOPE;\n\n    @inject(PreferencesEditorWidget) protected editorWidget: PreferencesEditorWidget;\n    @inject(PreferencesTreeWidget) protected treeWidget: PreferencesTreeWidget;\n    @inject(PreferencesSearchbarWidget) protected searchbarWidget: PreferencesSearchbarWidget;\n    @inject(PreferencesScopeTabBar) protected tabBarWidget: PreferencesScopeTabBar;\n    @inject(WidgetManager) protected readonly manager: WidgetManager;\n\n    get preferenceScope(): Preference.SelectedScopeDetails {\n        return this._preferenceScope;\n    }\n\n    set preferenceScope(preferenceScopeDetails: Preference.SelectedScopeDetails) {\n        this._preferenceScope = preferenceScopeDetails;\n        this.editorWidget.preferenceScope = this._preferenceScope;\n    }\n\n    protected onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        if (msg.width < 600 && this.treeWidget && !this.treeWidget.isHidden) {\n            this.treeWidget.hide();\n            this.editorWidget.addClass('full-pane');\n        } else if (msg.width >= 600 && this.treeWidget && this.treeWidget.isHidden) {\n            this.treeWidget.show();\n            this.editorWidget.removeClass('full-pane');\n        }\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.searchbarWidget.focus();\n    }\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this.id = PreferencesWidget.ID;\n        this.title.label = PreferencesWidget.LABEL;\n        this.title.closable = true;\n        this.addClass('theia-settings-container');\n        this.title.iconClass = 'fa fa-sliders';\n\n        this.searchbarWidget = await this.manager.getOrCreateWidget<PreferencesSearchbarWidget>(PreferencesSearchbarWidget.ID);\n        this.searchbarWidget.addClass('preferences-searchbar-widget');\n        this.addWidget(this.searchbarWidget);\n\n        this.tabBarWidget = await this.manager.getOrCreateWidget<PreferencesScopeTabBar>(PreferencesScopeTabBar.ID);\n        this.tabBarWidget.addClass('preferences-tabbar-widget');\n        this.addWidget(this.tabBarWidget);\n\n        this.treeWidget = await this.manager.getOrCreateWidget<PreferencesTreeWidget>(PreferencesTreeWidget.ID);\n        this.treeWidget.addClass('preferences-tree-widget');\n        this.addWidget(this.treeWidget);\n\n        this.editorWidget = await this.manager.getOrCreateWidget<PreferencesEditorWidget>(PreferencesEditorWidget.ID);\n        this.editorWidget.addClass('preferences-editor-widget');\n        this.addWidget(this.editorWidget);\n\n        this.update();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceScope } from '@theia/core/lib/browser/preferences';\nimport { WorkspaceService, WorkspaceData } from '@theia/workspace/lib/browser/workspace-service';\nimport { AbstractResourcePreferenceProvider } from './abstract-resource-preference-provider';\n\n@injectable()\nexport class WorkspaceFilePreferenceProviderOptions {\n    workspaceUri: URI;\n}\n\nexport const WorkspaceFilePreferenceProviderFactory = Symbol('WorkspaceFilePreferenceProviderFactory');\nexport type WorkspaceFilePreferenceProviderFactory = (options: WorkspaceFilePreferenceProviderOptions) => WorkspaceFilePreferenceProvider;\n\n@injectable()\nexport class WorkspaceFilePreferenceProvider extends AbstractResourcePreferenceProvider {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(WorkspaceFilePreferenceProviderOptions)\n    protected readonly options: WorkspaceFilePreferenceProviderOptions;\n\n    protected getUri(): URI {\n        return this.options.workspaceUri;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected parse(content: string): any {\n        const data = super.parse(content);\n        if (WorkspaceData.is(data)) {\n            return data.settings || {};\n        }\n        return {};\n    }\n\n    protected getPath(preferenceName: string): string[] {\n        return ['settings', preferenceName];\n    }\n\n    protected getScope(): PreferenceScope {\n        return PreferenceScope.Workspace;\n    }\n\n    getDomain(): string[] {\n        // workspace file is treated as part of the workspace\n        return this.workspaceService.tryGetRoots().map(r => r.uri).concat([this.options.workspaceUri.toString()]);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable, postConstruct, named } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { PreferenceScope, PreferenceProvider } from '@theia/core/lib/browser/preferences';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { WorkspaceFilePreferenceProviderFactory, WorkspaceFilePreferenceProvider } from './workspace-file-preference-provider';\n\n@injectable()\nexport class WorkspacePreferenceProvider extends PreferenceProvider {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(WorkspaceFilePreferenceProviderFactory)\n    protected readonly workspaceFileProviderFactory: WorkspaceFilePreferenceProviderFactory;\n\n    @inject(PreferenceProvider) @named(PreferenceScope.Folder)\n    protected readonly folderPreferenceProvider: PreferenceProvider;\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this._ready.resolve();\n        this.ensureDelegateUpToDate();\n        this.workspaceService.onWorkspaceLocationChanged(() => this.ensureDelegateUpToDate());\n    }\n\n    getConfigUri(resourceUri: string | undefined = this.ensureResourceUri()): URI | undefined {\n        const delegate = this.delegate;\n        return delegate && delegate.getConfigUri(resourceUri);\n    }\n\n    protected _delegate: PreferenceProvider | undefined;\n    protected get delegate(): PreferenceProvider | undefined {\n        if (!this._delegate) {\n            this.ensureDelegateUpToDate();\n        }\n        return this._delegate;\n    }\n    protected readonly toDisposeOnEnsureDelegateUpToDate = new DisposableCollection();\n    protected ensureDelegateUpToDate(): void {\n        const delegate = this.createDelegate();\n        if (this._delegate !== delegate) {\n            this.toDisposeOnEnsureDelegateUpToDate.dispose();\n            this.toDispose.push(this.toDisposeOnEnsureDelegateUpToDate);\n\n            this._delegate = delegate;\n\n            if (delegate instanceof WorkspaceFilePreferenceProvider) {\n                this.toDisposeOnEnsureDelegateUpToDate.pushAll([\n                    delegate,\n                    delegate.onDidPreferencesChanged(changes => this.onDidPreferencesChangedEmitter.fire(changes))\n                ]);\n            }\n        }\n    }\n    protected createDelegate(): PreferenceProvider | undefined {\n        const workspace = this.workspaceService.workspace;\n        if (!workspace) {\n            return undefined;\n        }\n        if (!this.workspaceService.isMultiRootWorkspaceOpened) {\n            return this.folderPreferenceProvider;\n        }\n        return this.workspaceFileProviderFactory({\n            workspaceUri: new URI(workspace.uri)\n        });\n    }\n\n    get<T>(preferenceName: string, resourceUri: string | undefined = this.ensureResourceUri()): T | undefined {\n        const delegate = this.delegate;\n        return delegate ? delegate.get<T>(preferenceName, resourceUri) : undefined;\n    }\n\n    resolve<T>(preferenceName: string, resourceUri: string | undefined = this.ensureResourceUri()): { value?: T, configUri?: URI } {\n        const delegate = this.delegate;\n        return delegate ? delegate.resolve<T>(preferenceName, resourceUri) : {};\n    }\n\n    getPreferences(resourceUri: string | undefined = this.ensureResourceUri()): { [p: string]: any } {\n        const delegate = this.delegate;\n        return delegate ? delegate.getPreferences(resourceUri) : {};\n    }\n\n    async setPreference(preferenceName: string, value: any, resourceUri: string | undefined = this.ensureResourceUri()): Promise<boolean> {\n        const delegate = this.delegate;\n        if (delegate) {\n            return delegate.setPreference(preferenceName, value, resourceUri);\n        }\n        return false;\n    }\n\n    protected ensureResourceUri(): string | undefined {\n        if (this.workspaceService.workspace && !this.workspaceService.isMultiRootWorkspaceOpened) {\n            return this.workspaceService.workspace.uri;\n        }\n        return undefined;\n    }\n\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}