{"version":3,"sources":["webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/node_modules/vscode-textmate/release sync","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/monaco/src/browser/monaco-indexed-db.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/monaco/src/browser/monaco-languages.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/monaco/src/browser/monaco-snippet-suggest-provider.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/monaco/src/browser/monaco-theming-service.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/monaco/src/browser/textmate/monaco-textmate-frontend-bindings.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/monaco/src/browser/textmate/monaco-textmate-service.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/monaco/src/browser/textmate/monaco-theme-registry.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/monaco/src/browser/textmate/textmate-contribution.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/monaco/src/browser/textmate/textmate-registry.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/monaco/src/browser/textmate/textmate-tokenizer.ts"],"names":[],"mappings":"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","file":"45.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../node_modules/vscode-textmate/release sync recursive\";","/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as idb from 'idb';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\ntype ThemeMix = import('./textmate/monaco-theme-registry').ThemeMix;\n\nlet _monacoDB: Promise<idb.IDBPDatabase> | undefined;\nif ('indexedDB' in window) {\n    _monacoDB = idb.openDB('theia-monaco', 1, {\n        upgrade: db => {\n            if (!db.objectStoreNames.contains('themes')) {\n                db.createObjectStore('themes', { keyPath: 'id' });\n            }\n        }\n    });\n}\n\nexport const monacoDB = _monacoDB;\n\nexport interface MonacoThemeState {\n    id: string,\n    label: string,\n    description?: string,\n    uiTheme: monaco.editor.BuiltinTheme\n    data: ThemeMix\n}\nexport namespace MonacoThemeState {\n    export function is(state: Object | undefined): state is MonacoThemeState {\n        return !!state && typeof state === 'object' && 'id' in state && 'label' in state && 'uiTheme' in state && 'data' in state;\n    }\n}\n\nexport async function getThemes(): Promise<MonacoThemeState[]> {\n    if (!monacoDB) {\n        return [];\n    }\n    const db = await monacoDB;\n    const result = await db.transaction('themes', 'readonly').objectStore('themes').getAll();\n    return result.filter(MonacoThemeState.is);\n}\n\nexport function putTheme(state: MonacoThemeState): Disposable {\n    const toDispose = new DisposableCollection(Disposable.create(() => { /* mark as not disposed */ }));\n    doPutTheme(state, toDispose);\n    return toDispose;\n}\nasync function doPutTheme(state: MonacoThemeState, toDispose: DisposableCollection): Promise<void> {\n    if (!monacoDB) {\n        return;\n    }\n    const db = await monacoDB;\n    if (toDispose.disposed) {\n        return;\n    }\n    const id = state.id;\n    await db.transaction('themes', 'readwrite').objectStore('themes').put(state);\n    if (toDispose.disposed) {\n        await deleteTheme(id);\n        return;\n    }\n    toDispose.push(Disposable.create(() => deleteTheme(id)));\n}\n\nexport async function deleteTheme(id: string): Promise<void> {\n    if (!monacoDB) {\n        return;\n    }\n    const db = await monacoDB;\n    await db.transaction('themes', 'readwrite').objectStore('themes').delete(id);\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, decorate } from 'inversify';\nimport {\n    MonacoLanguages as BaseMonacoLanguages, ProtocolToMonacoConverter,\n    MonacoToProtocolConverter,\n    DocumentSelector,\n    SignatureHelpProvider,\n    MonacoModelIdentifier,\n    CodeActionProvider,\n    CodeLensProvider\n} from 'monaco-languageclient';\nimport { Languages, Diagnostic, DiagnosticCollection, Language, WorkspaceSymbolProvider } from '@theia/languages/lib/browser';\nimport { ProblemManager } from '@theia/markers/lib/browser/problem/problem-manager';\nimport URI from '@theia/core/lib/common/uri';\nimport { Mutable } from '@theia/core/lib/common/types';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { MonacoDiagnosticCollection } from 'monaco-languageclient/lib/monaco-diagnostic-collection';\n\ndecorate(injectable(), BaseMonacoLanguages);\ndecorate(inject(ProtocolToMonacoConverter), BaseMonacoLanguages, 0);\ndecorate(inject(MonacoToProtocolConverter), BaseMonacoLanguages, 1);\n\n@injectable()\nexport class MonacoLanguages extends BaseMonacoLanguages implements Languages {\n\n    readonly workspaceSymbolProviders: WorkspaceSymbolProvider[] = [];\n\n    protected readonly makers = new Map<string, MonacoDiagnosticCollection>();\n\n    constructor( // eslint-disable-next-line @typescript-eslint/indent\n        @inject(ProtocolToMonacoConverter) p2m: ProtocolToMonacoConverter,\n        @inject(MonacoToProtocolConverter) m2p: MonacoToProtocolConverter,\n        @inject(ProblemManager) protected readonly problemManager: ProblemManager\n    ) {\n        super(p2m, m2p);\n        for (const uri of this.problemManager.getUris()) {\n            this.updateMarkers(new URI(uri));\n        }\n        this.problemManager.onDidChangeMarkers(uri => this.updateMarkers(uri));\n    }\n\n    protected updateMarkers(uri: URI): void {\n        const uriString = uri.toString();\n        const owners = new Map<string, Diagnostic[]>();\n        for (const marker of this.problemManager.findMarkers({ uri })) {\n            const diagnostics = owners.get(marker.owner) || [];\n            diagnostics.push(marker.data);\n            owners.set(marker.owner, diagnostics);\n        }\n        const toClean = new Set<string>(this.makers.keys());\n        for (const [owner, diagnostics] of owners) {\n            toClean.delete(owner);\n            const collection = this.makers.get(owner) || new MonacoDiagnosticCollection(owner, this.p2m);\n            collection.set(uriString, diagnostics);\n            this.makers.set(owner, collection);\n        }\n        for (const owner of toClean) {\n            const collection = this.makers.get(owner);\n            if (collection) {\n                collection.set(uriString, []);\n            }\n        }\n    }\n\n    createDiagnosticCollection(name?: string): DiagnosticCollection {\n        const owner = name || 'default';\n        const uris: string[] = [];\n        return {\n            set: (uri, diagnostics) => {\n                this.problemManager.setMarkers(new URI(uri), owner, diagnostics);\n                uris.push(uri);\n            },\n            dispose: () => {\n                for (const uri of uris) {\n                    this.problemManager.setMarkers(new URI(uri), owner, []);\n                }\n            }\n        };\n    }\n\n    registerWorkspaceSymbolProvider(provider: WorkspaceSymbolProvider): Disposable {\n        this.workspaceSymbolProviders.push(provider);\n        return Disposable.create(() => {\n            const index = this.workspaceSymbolProviders.indexOf(provider);\n            if (index !== -1) {\n                this.workspaceSymbolProviders.splice(index, 1);\n            }\n        });\n    }\n\n    get languages(): Language[] {\n        return [...this.mergeLanguages(monaco.languages.getLanguages()).values()];\n    }\n\n    getLanguage(languageId: string): Language | undefined {\n        return this.mergeLanguages(monaco.languages.getLanguages().filter(language => language.id === languageId)).get(languageId);\n    }\n\n    protected mergeLanguages(registered: monaco.languages.ILanguageExtensionPoint[]): Map<string, Mutable<Language>> {\n        const languages = new Map<string, Mutable<Language>>();\n        for (const { id, aliases, extensions, filenames } of registered) {\n            const merged = languages.get(id) || {\n                id,\n                name: '',\n                extensions: new Set(),\n                filenames: new Set()\n            };\n            if (!merged.name && aliases && aliases.length) {\n                merged.name = aliases[0];\n            }\n            if (extensions && extensions.length) {\n                for (const extension of extensions) {\n                    merged.extensions.add(extension);\n                }\n            }\n            if (filenames && filenames.length) {\n                for (const filename of filenames) {\n                    merged.filenames.add(filename);\n                }\n            }\n            languages.set(id, merged);\n        }\n        for (const [id, language] of languages) {\n            if (!language.name) {\n                language.name = id;\n            }\n        }\n        return languages;\n    }\n\n    protected createSignatureHelpProvider(selector: DocumentSelector, provider: SignatureHelpProvider, ...triggerCharacters: string[]): monaco.languages.SignatureHelpProvider {\n        const signatureHelpTriggerCharacters = [...(provider.triggerCharacters || triggerCharacters || [])];\n        const signatureHelpRetriggerCharacters = [...(provider.retriggerCharacters || [])];\n        return {\n            signatureHelpTriggerCharacters,\n            signatureHelpRetriggerCharacters,\n            provideSignatureHelp: async (model, position, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined;\n                }\n                const params = this.m2p.asTextDocumentPositionParams(model, position);\n                const help = await provider.provideSignatureHelp(params, token, undefined! /* not used by LC */);\n                if (!help) {\n                    return undefined;\n                }\n                return this.p2m.asSignatureHelpResult(help);\n            }\n        };\n    }\n\n    protected createCodeActionProvider(selector: DocumentSelector, provider: CodeActionProvider): monaco.languages.CodeActionProvider {\n        return {\n            provideCodeActions: async (model, range, context, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined!;\n                }\n                const params = this.m2p.asCodeActionParams(model, range, context);\n                const actions = await provider.provideCodeActions(params, token);\n                if (!actions) {\n                    return undefined!;\n                }\n                return this.p2m.asCodeActionList(actions);\n            }\n        };\n    }\n\n    protected createCodeLensProvider(selector: DocumentSelector, provider: CodeLensProvider): monaco.languages.CodeLensProvider {\n        return {\n            provideCodeLenses: async (model, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined;\n                }\n                const params = this.m2p.asCodeLensParams(model);\n                const lenses = await provider.provideCodeLenses(params, token);\n                if (!lenses) {\n                    return undefined;\n                }\n                return this.p2m.asCodeLensList(lenses);\n            },\n            resolveCodeLens: provider.resolveCodeLens ? async (model, codeLens, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return codeLens;\n                }\n                const protocolCodeLens = this.m2p.asCodeLens(codeLens);\n                const result = await provider.resolveCodeLens!(protocolCodeLens, token);\n                if (result) {\n                    const resolvedCodeLens = this.p2m.asCodeLens(result);\n                    Object.assign(codeLens, resolvedCodeLens);\n                }\n                return codeLens;\n            } : ((_, codeLens, __) => codeLens)\n        };\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as jsoncparser from 'jsonc-parser';\nimport { injectable, inject } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { FileSystem, FileSystemError } from '@theia/filesystem/lib/common';\nimport { CompletionTriggerKind } from '@theia/languages/lib/browser';\n\n@injectable()\nexport class MonacoSnippetSuggestProvider implements monaco.languages.CompletionItemProvider {\n\n    private static readonly _maxPrefix = 10000;\n\n    @inject(FileSystem)\n    protected readonly filesystem: FileSystem;\n\n    protected readonly snippets = new Map<string, Snippet[]>();\n    protected readonly pendingSnippets = new Map<string, Promise<void>[]>();\n\n    async provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position,\n        context: monaco.languages.CompletionContext): Promise<monaco.languages.CompletionList | undefined> {\n\n        // copied and modified from https://github.com/microsoft/vscode/blob/master/src/vs/workbench/contrib/snippets/browser/snippetCompletionProvider.ts\n        if (position.column >= MonacoSnippetSuggestProvider._maxPrefix) {\n            return undefined;\n        }\n\n        if (context.triggerKind === CompletionTriggerKind.TriggerCharacter && context.triggerCharacter === ' ') {\n            // no snippets when suggestions have been triggered by space\n            return undefined;\n        }\n\n        const languageId = model.getModeId(); // TODO: look up a language id at the position\n        await this.loadSnippets(languageId);\n        const snippetsForLanguage = this.snippets.get(languageId) || [];\n\n        const pos = { lineNumber: position.lineNumber, column: 1 };\n        const lineOffsets: number[] = [];\n        const linePrefixLow = model.getLineContent(position.lineNumber).substr(0, position.column - 1).toLowerCase();\n        const endsInWhitespace = linePrefixLow.match(/\\s$/);\n\n        while (pos.column < position.column) {\n            const word = model.getWordAtPosition(pos);\n            if (word) {\n                // at a word\n                lineOffsets.push(word.startColumn - 1);\n                pos.column = word.endColumn + 1;\n                if (word.endColumn - 1 < linePrefixLow.length && !/\\s/.test(linePrefixLow[word.endColumn - 1])) {\n                    lineOffsets.push(word.endColumn - 1);\n                }\n            } else if (!/\\s/.test(linePrefixLow[pos.column - 1])) {\n                // at a none-whitespace character\n                lineOffsets.push(pos.column - 1);\n                pos.column += 1;\n            } else {\n                // always advance!\n                pos.column += 1;\n            }\n        }\n\n        const availableSnippets = new Set<Snippet>();\n        snippetsForLanguage.forEach(availableSnippets.add, availableSnippets);\n        const suggestions: MonacoSnippetSuggestion[] = [];\n        for (const start of lineOffsets) {\n            availableSnippets.forEach(snippet => {\n                if (this.isPatternInWord(linePrefixLow, start, linePrefixLow.length, snippet.prefix.toLowerCase(), 0, snippet.prefix.length)) {\n                    suggestions.push(new MonacoSnippetSuggestion(snippet, monaco.Range.fromPositions(position.delta(0, -(linePrefixLow.length - start)), position)));\n                    availableSnippets.delete(snippet);\n                }\n            });\n        }\n        if (endsInWhitespace || lineOffsets.length === 0) {\n            // add remaining snippets when the current prefix ends in whitespace or when no\n            // interesting positions have been found\n            availableSnippets.forEach(snippet => {\n                suggestions.push(new MonacoSnippetSuggestion(snippet, monaco.Range.fromPositions(position)));\n            });\n        }\n\n        // disambiguate suggestions with same labels\n        suggestions.sort(MonacoSnippetSuggestion.compareByLabel);\n        return { suggestions };\n    }\n\n    resolveCompletionItem(textModel: monaco.editor.ITextModel, position: monaco.Position, item: monaco.languages.CompletionItem): monaco.languages.CompletionItem {\n        return item instanceof MonacoSnippetSuggestion ? item.resolve() : item;\n    }\n\n    protected async loadSnippets(scope: string): Promise<void> {\n        const pending: Promise<void>[] = [];\n        pending.push(...(this.pendingSnippets.get(scope) || []));\n        pending.push(...(this.pendingSnippets.get('*') || []));\n        if (pending.length) {\n            await Promise.all(pending);\n        }\n    }\n\n    fromURI(uri: string | URI, options: SnippetLoadOptions): Disposable {\n        const toDispose = new DisposableCollection(Disposable.create(() => { /* mark as not disposed */ }));\n        const pending = this.loadURI(uri, options, toDispose);\n        const { language } = options;\n        const scopes = Array.isArray(language) ? language : !!language ? [language] : ['*'];\n        for (const scope of scopes) {\n            const pendingSnippets = this.pendingSnippets.get(scope) || [];\n            pendingSnippets.push(pending);\n            this.pendingSnippets.set(scope, pendingSnippets);\n            toDispose.push(Disposable.create(() => {\n                const index = pendingSnippets.indexOf(pending);\n                if (index !== -1) {\n                    pendingSnippets.splice(index, 1);\n                }\n            }));\n        }\n        return toDispose;\n    }\n\n    /**\n     * should NOT throw to prevent load errors on suggest\n     */\n    protected async loadURI(uri: string | URI, options: SnippetLoadOptions, toDispose: DisposableCollection): Promise<void> {\n        try {\n            const { content } = await this.filesystem.resolveContent(uri.toString(), { encoding: 'utf-8' });\n            if (toDispose.disposed) {\n                return;\n            }\n            const snippets = content && jsoncparser.parse(content, undefined, { disallowComments: false });\n            toDispose.push(this.fromJSON(snippets, options));\n        } catch (e) {\n            if (!FileSystemError.FileNotFound.is(e) && !FileSystemError.FileIsDirectory.is(e)) {\n                console.error(e);\n            }\n        }\n    }\n\n    fromJSON(snippets: JsonSerializedSnippets | undefined, { language, source }: SnippetLoadOptions): Disposable {\n        const toDispose = new DisposableCollection();\n        this.parseSnippets(snippets, (name, snippet) => {\n            const { prefix, body, description } = snippet;\n            const parsedBody = Array.isArray(body) ? body.join('\\n') : body;\n            const parsedPrefixes = Array.isArray(prefix) ? prefix : [prefix];\n\n            if (typeof parsedBody !== 'string') {\n                return;\n            }\n            const scopes: string[] = [];\n            if (language) {\n                if (Array.isArray(language)) {\n                    scopes.push(...language);\n                } else {\n                    scopes.push(language);\n                }\n            } else if (typeof snippet.scope === 'string') {\n                for (const rawScope of snippet.scope.split(',')) {\n                    const scope = rawScope.trim();\n                    if (scope) {\n                        scopes.push(scope);\n                    }\n                }\n            }\n            parsedPrefixes.forEach(parsedPrefix => toDispose.push(this.push({\n                scopes,\n                name,\n                prefix: parsedPrefix,\n                description,\n                body: parsedBody,\n                source\n            })));\n        });\n        return toDispose;\n    }\n    protected parseSnippets(snippets: JsonSerializedSnippets | undefined, accept: (name: string, snippet: JsonSerializedSnippet) => void): void {\n        if (typeof snippets === 'object') {\n            // eslint-disable-next-line guard-for-in\n            for (const name in snippets) {\n                const scopeOrTemplate = snippets[name];\n                if (JsonSerializedSnippet.is(scopeOrTemplate)) {\n                    accept(name, scopeOrTemplate);\n                } else {\n                    this.parseSnippets(scopeOrTemplate, accept);\n                }\n            }\n        }\n    }\n\n    push(...snippets: Snippet[]): Disposable {\n        const toDispose = new DisposableCollection();\n        for (const snippet of snippets) {\n            for (const scope of snippet.scopes) {\n                const languageSnippets = this.snippets.get(scope) || [];\n                languageSnippets.push(snippet);\n                this.snippets.set(scope, languageSnippets);\n                toDispose.push(Disposable.create(() => {\n                    const index = languageSnippets.indexOf(snippet);\n                    if (index !== -1) {\n                        languageSnippets.splice(index, 1);\n                    }\n                }));\n            }\n        }\n        return toDispose;\n    }\n\n    protected isPatternInWord(patternLow: string, patternPos: number, patternLen: number, wordLow: string, wordPos: number, wordLen: number): boolean {\n        while (patternPos < patternLen && wordPos < wordLen) {\n            if (patternLow[patternPos] === wordLow[wordPos]) {\n                patternPos += 1;\n            }\n            wordPos += 1;\n        }\n        return patternPos === patternLen; // pattern must be exhausted\n    }\n\n}\n\nexport interface SnippetLoadOptions {\n    language?: string | string[]\n    source: string\n}\n\nexport interface JsonSerializedSnippets {\n    [name: string]: JsonSerializedSnippet | { [name: string]: JsonSerializedSnippet };\n}\nexport interface JsonSerializedSnippet {\n    body: string | string[];\n    scope: string;\n    prefix: string | string[];\n    description: string;\n}\nexport namespace JsonSerializedSnippet {\n    export function is(obj: Object | undefined): obj is JsonSerializedSnippet {\n        return typeof obj === 'object' && 'body' in obj && 'prefix' in obj;\n    }\n}\n\nexport interface Snippet {\n    readonly scopes: string[]\n    readonly name: string\n    readonly prefix: string\n    readonly description: string\n    readonly body: string\n    readonly source: string\n}\n\nexport class MonacoSnippetSuggestion implements monaco.languages.CompletionItem {\n\n    readonly label: string;\n    readonly detail: string;\n    readonly sortText: string;\n    readonly noAutoAccept = true;\n    readonly kind = monaco.languages.CompletionItemKind.Snippet;\n    readonly insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n\n    insertText: string;\n    documentation?: monaco.IMarkdownString;\n\n    constructor(\n        protected readonly snippet: Snippet,\n        readonly range: monaco.Range\n    ) {\n        this.label = snippet.prefix;\n        this.detail = `${snippet.description || snippet.name} (${snippet.source})`;\n        this.insertText = snippet.body;\n        this.sortText = `z-${snippet.prefix}`;\n        this.range = range;\n    }\n\n    protected resolved = false;\n    resolve(): MonacoSnippetSuggestion {\n        if (!this.resolved) {\n            const codeSnippet = new monaco.snippetParser.SnippetParser().parse(this.snippet.body).toString();\n            this.documentation = { value: '```\\n' + codeSnippet + '```' };\n            this.resolved = true;\n        }\n        return this;\n    }\n\n    static compareByLabel(a: MonacoSnippetSuggestion, b: MonacoSnippetSuggestion): number {\n        return a.label > b.label ? 1 : a.label < b.label ? -1 : 0;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { injectable, inject } from 'inversify';\nimport * as jsoncparser from 'jsonc-parser';\nimport * as plistparser from 'fast-plist';\nimport { ThemeService, BuiltinThemeProvider } from '@theia/core/lib/browser/theming';\nimport URI from '@theia/core/lib/common/uri';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { FileSystem } from '@theia/filesystem/lib/common/filesystem';\nimport { MonacoThemeRegistry } from './textmate/monaco-theme-registry';\nimport { getThemes, putTheme, MonacoThemeState } from './monaco-indexed-db';\n\nexport interface MonacoTheme {\n    id?: string;\n    label?: string;\n    uiTheme?: monaco.editor.BuiltinTheme;\n    description?: string;\n    uri: string;\n}\n\nexport interface MonacoThemeJson {\n    /**\n     * theme id (optional), label is used if not provided\n     */\n    id?: string;\n    label: string;\n    /**\n     * theme type, `vs-dark` if not provided\n     */\n    uiTheme?: monaco.editor.BuiltinTheme;\n    description?: string;\n    /**\n     * Follow https://code.visualstudio.com/api/extension-guides/color-theme#create-a-new-color-theme to create a custom theme.\n     */\n    json: any\n    /**\n     * Themes can include each other. It specifies how inclusions should be resolved.\n     */\n    includes?: { [includePath: string]: any }\n}\n\n@injectable()\nexport class MonacoThemingService {\n\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    register(theme: MonacoTheme, pending: { [uri: string]: Promise<any> } = {}): Disposable {\n        const toDispose = new DisposableCollection(Disposable.create(() => { /* mark as not disposed */ }));\n        this.doRegister(theme, pending, toDispose);\n        return toDispose;\n    }\n\n    protected async doRegister(theme: MonacoTheme,\n        pending: { [uri: string]: Promise<any> },\n        toDispose: DisposableCollection\n    ): Promise<void> {\n        try {\n            const includes = {};\n            const json = await this.loadTheme(theme.uri, includes, pending, toDispose);\n            if (toDispose.disposed) {\n                return;\n            }\n            const label = theme.label || new URI(theme.uri).path.base;\n            const { id, description, uiTheme } = theme;\n            toDispose.push(MonacoThemingService.register({ id, label, description, uiTheme: uiTheme, json, includes }));\n        } catch (e) {\n            console.error('Failed to load theme from ' + theme.uri, e);\n        }\n    }\n\n    protected async loadTheme(\n        uri: string,\n        includes: { [include: string]: any },\n        pending: { [uri: string]: Promise<any> },\n        toDispose: DisposableCollection\n    ): Promise<any> {\n        /* eslint-enable @typescript-eslint/no-explicit-any */\n        const { content } = await this.fileSystem.resolveContent(uri);\n        if (toDispose.disposed) {\n            return;\n        }\n        const themeUri = new URI(uri);\n        if (themeUri.path.ext !== '.json') {\n            const value = plistparser.parse(content);\n            if (value && 'settings' in value && Array.isArray(value.settings)) {\n                return { tokenColors: value.settings };\n            }\n            throw new Error(`Problem parsing tmTheme file: ${uri}. 'settings' is not array.`);\n        }\n        const json = jsoncparser.parse(content, undefined, { disallowComments: false });\n        if ('tokenColors' in json && typeof json.tokenColors === 'string') {\n            const value = await this.doLoadTheme(themeUri, json.tokenColors, includes, pending, toDispose);\n            if (toDispose.disposed) {\n                return;\n            }\n            json.tokenColors = value.tokenColors;\n        }\n        if (json.include) {\n            includes[json.include] = await this.doLoadTheme(themeUri, json.include, includes, pending, toDispose);\n            if (toDispose.disposed) {\n                return;\n            }\n        }\n        return json;\n    }\n\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    protected doLoadTheme(\n        themeUri: URI,\n        referencedPath: string,\n        includes: { [include: string]: any },\n        pending: { [uri: string]: Promise<any> },\n        toDispose: DisposableCollection\n    ): Promise<any> {\n        const referencedUri = themeUri.parent.resolve(referencedPath).toString();\n        if (!pending[referencedUri]) {\n            pending[referencedUri] = this.loadTheme(referencedUri, includes, pending, toDispose);\n        }\n        return pending[referencedUri];\n    }\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n\n    static init(): void {\n        this.updateBodyUiTheme();\n        ThemeService.get().onThemeChange(() => this.updateBodyUiTheme());\n        this.restore();\n    }\n\n    static register(theme: MonacoThemeJson): Disposable {\n        const uiTheme = theme.uiTheme || 'vs-dark';\n        const { label, description, json, includes } = theme;\n        const id = theme.id || label;\n        const cssSelector = MonacoThemingService.toCssSelector(id);\n        const data = MonacoThemeRegistry.SINGLETON.register(json, includes, cssSelector, uiTheme);\n        return MonacoThemingService.doRegister({ id, label, description, uiTheme, data });\n    }\n\n    protected static toUpdateUiTheme = new DisposableCollection();\n    protected static updateBodyUiTheme(): void {\n        this.toUpdateUiTheme.dispose();\n        const type = ThemeService.get().getCurrentTheme().type;\n        const uiTheme: monaco.editor.BuiltinTheme = type === 'hc' ? 'hc-black' : type === 'light' ? 'vs' : 'vs-dark';\n        document.body.classList.add(uiTheme);\n        this.toUpdateUiTheme.push(Disposable.create(() => document.body.classList.remove(uiTheme)));\n    }\n\n    protected static doRegister(state: MonacoThemeState): Disposable {\n        const { id, label, description, uiTheme, data } = state;\n        const type = uiTheme === 'vs' ? 'light' : uiTheme === 'vs-dark' ? 'dark' : 'hc';\n        const builtInTheme = uiTheme === 'vs' ? BuiltinThemeProvider.lightCss : BuiltinThemeProvider.darkCss;\n        return new DisposableCollection(\n            ThemeService.get().register({\n                type,\n                id,\n                label,\n                description: description,\n                editorTheme: data.name!,\n                activate(): void {\n                    builtInTheme.use();\n                },\n                deactivate(): void {\n                    builtInTheme.unuse();\n                }\n            }),\n            putTheme(state)\n        );\n    }\n\n    protected static async restore(): Promise<void> {\n        try {\n            const themes = await getThemes();\n            for (const state of themes) {\n                MonacoThemeRegistry.SINGLETON.setTheme(state.data.name!, state.data);\n                MonacoThemingService.doRegister(state);\n            }\n        } catch (e) {\n            console.error('Failed to restore monaco themes', e);\n        }\n    }\n\n    /* remove all characters that are not allowed in css */\n    protected static toCssSelector(str: string): string {\n        str = str.replace(/[^\\-a-zA-Z0-9]/g, '-');\n        if (str.charAt(0).match(/[0-9\\-]/)) {\n            str = '-' + str;\n        }\n        return str;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { FrontendApplicationContribution, isBasicWasmSupported } from '@theia/core/lib/browser';\nimport { bindContributionProvider } from '@theia/core';\nimport { TextmateRegistry } from './textmate-registry';\nimport { LanguageGrammarDefinitionContribution } from './textmate-contribution';\nimport { MonacoTextmateService, OnigasmPromise } from './monaco-textmate-service';\nimport { MonacoThemeRegistry } from './monaco-theme-registry';\nimport { loadWASM, OnigScanner, OnigString } from 'onigasm';\nimport { IOnigLib } from 'vscode-textmate';\n\nexport function fetchOnigasm(): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n        const onigasmPath = require('onigasm/lib/onigasm.wasm'); // webpack doing its magic here\n        const request = new XMLHttpRequest();\n\n        request.onreadystatechange = function (): void {\n            if (this.readyState === XMLHttpRequest.DONE) {\n                if (this.status === 200) {\n                    resolve(this.response);\n                } else {\n                    reject(new Error('Could not fetch onigasm'));\n                }\n            }\n        };\n\n        request.open('GET', onigasmPath, true);\n        request.responseType = 'arraybuffer';\n        request.send();\n    });\n}\n\nexport class OnigasmLib implements IOnigLib {\n    createOnigScanner(sources: string[]): OnigScanner {\n        return new OnigScanner(sources);\n    }\n    createOnigString(sources: string): OnigString {\n        return new OnigString(sources);\n    }\n}\n\nexport default (bind: interfaces.Bind, unbind: interfaces.Unbind, isBound: interfaces.IsBound, rebind: interfaces.Rebind) => {\n    const onigasmPromise: Promise<IOnigLib> = isBasicWasmSupported ? fetchOnigasm().then(async buffer => {\n        await loadWASM(buffer);\n        return new OnigasmLib();\n    }) : Promise.reject(new Error('wasm not supported'));\n    bind(OnigasmPromise).toConstantValue(onigasmPromise);\n\n    bind(MonacoTextmateService).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(MonacoTextmateService);\n    bindContributionProvider(bind, LanguageGrammarDefinitionContribution);\n    bind(TextmateRegistry).toSelf().inSingletonScope();\n    bind(MonacoThemeRegistry).toDynamicValue(() => MonacoThemeRegistry.SINGLETON).inSingletonScope();\n};\n","/********************************************************************************\n * Copyright (C) 2018 Redhat, Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named } from 'inversify';\nimport { Registry, IOnigLib, IRawGrammar, parseRawGrammar } from 'vscode-textmate';\nimport { ILogger, ContributionProvider, DisposableCollection, Disposable } from '@theia/core';\nimport { FrontendApplicationContribution, isBasicWasmSupported } from '@theia/core/lib/browser';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\nimport { LanguageGrammarDefinitionContribution, getEncodedLanguageId } from './textmate-contribution';\nimport { createTextmateTokenizer, TokenizerOption } from './textmate-tokenizer';\nimport { TextmateRegistry } from './textmate-registry';\nimport { MonacoThemeRegistry } from './monaco-theme-registry';\nimport { EditorPreferences } from '@theia/editor/lib/browser/editor-preferences';\n\nexport const OnigasmPromise = Symbol('OnigasmPromise');\nexport type OnigasmPromise = Promise<IOnigLib>;\n\n@injectable()\nexport class MonacoTextmateService implements FrontendApplicationContribution {\n\n    protected readonly tokenizerOption: TokenizerOption = {\n        lineLimit: 400\n    };\n\n    protected readonly _activatedLanguages = new Set<string>();\n\n    protected grammarRegistry: Registry;\n\n    @inject(ContributionProvider) @named(LanguageGrammarDefinitionContribution)\n    protected readonly grammarProviders: ContributionProvider<LanguageGrammarDefinitionContribution>;\n\n    @inject(TextmateRegistry)\n    protected readonly textmateRegistry: TextmateRegistry;\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(OnigasmPromise)\n    protected readonly onigasmPromise: OnigasmPromise;\n\n    @inject(ThemeService)\n    protected readonly themeService: ThemeService;\n\n    @inject(MonacoThemeRegistry)\n    protected readonly monacoThemeRegistry: MonacoThemeRegistry;\n\n    @inject(EditorPreferences)\n    protected readonly preferences: EditorPreferences;\n\n    initialize(): void {\n        if (!isBasicWasmSupported) {\n            console.log('Textmate support deactivated because WebAssembly is not detected.');\n            return;\n        }\n\n        for (const grammarProvider of this.grammarProviders.getContributions()) {\n            try {\n                grammarProvider.registerTextmateLanguage(this.textmateRegistry);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n        this.grammarRegistry = new Registry({\n            getOnigLib: () => this.onigasmPromise,\n            theme: this.monacoThemeRegistry.getThemeData(this.currentEditorTheme),\n            loadGrammar: async (scopeName: string) => {\n                const provider = this.textmateRegistry.getProvider(scopeName);\n                if (provider) {\n                    const definition = await provider.getGrammarDefinition();\n                    let rawGrammar: IRawGrammar;\n                    if (typeof definition.content === 'string') {\n                        rawGrammar = parseRawGrammar(definition.content, definition.format === 'json' ? 'grammar.json' : 'grammar.plist');\n                    } else {\n                        rawGrammar = definition.content as IRawGrammar;\n                    }\n                    return rawGrammar;\n                }\n                return undefined;\n            },\n            getInjections: (scopeName: string) => {\n                const provider = this.textmateRegistry.getProvider(scopeName);\n                if (provider && provider.getInjections) {\n                    return provider.getInjections(scopeName);\n                }\n                return [];\n            }\n        });\n\n        this.tokenizerOption.lineLimit = this.preferences['editor.maxTokenizationLineLength'];\n        this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'editor.maxTokenizationLineLength') {\n                this.tokenizerOption.lineLimit = this.preferences['editor.maxTokenizationLineLength'];\n            }\n        });\n\n        this.updateTheme();\n        this.themeService.onThemeChange(() => this.updateTheme());\n\n        for (const id of this.textmateRegistry.languages) {\n            this.activateLanguage(id);\n        }\n    }\n\n    protected readonly toDisposeOnUpdateTheme = new DisposableCollection();\n\n    protected updateTheme(): void {\n        this.toDisposeOnUpdateTheme.dispose();\n\n        const currentEditorTheme = this.currentEditorTheme;\n        document.body.classList.add(currentEditorTheme);\n        this.toDisposeOnUpdateTheme.push(Disposable.create(() => document.body.classList.remove(currentEditorTheme)));\n\n        // first update registry to run tokenization with the proper theme\n        const theme = this.monacoThemeRegistry.getThemeData(currentEditorTheme);\n        if (theme) {\n            this.grammarRegistry.setTheme(theme);\n        }\n\n        // then trigger tokenization by setting monaco theme\n        monaco.editor.setTheme(currentEditorTheme);\n    }\n\n    protected get currentEditorTheme(): string {\n        return this.themeService.getCurrentTheme().editorTheme || MonacoThemeRegistry.DARK_DEFAULT_THEME;\n    }\n\n    activateLanguage(language: string): Disposable {\n        const toDispose = new DisposableCollection(\n            Disposable.create(() => { /* mark as not disposed */ })\n        );\n        toDispose.push(this.waitForLanguage(language, () =>\n            this.doActivateLanguage(language, toDispose)\n        ));\n        return toDispose;\n    }\n\n    protected async doActivateLanguage(languageId: string, toDispose: DisposableCollection): Promise<void> {\n        if (this._activatedLanguages.has(languageId)) {\n            return;\n        }\n        this._activatedLanguages.add(languageId);\n        toDispose.push(Disposable.create(() => this._activatedLanguages.delete(languageId)));\n\n        const scopeName = this.textmateRegistry.getScope(languageId);\n        if (!scopeName) {\n            return;\n        }\n        const provider = this.textmateRegistry.getProvider(scopeName);\n        if (!provider) {\n            return;\n        }\n\n        const configuration = this.textmateRegistry.getGrammarConfiguration(languageId);\n        const initialLanguage = getEncodedLanguageId(languageId);\n\n        await this.onigasmPromise;\n        if (toDispose.disposed) {\n            return;\n        }\n        try {\n            const grammar = await this.grammarRegistry.loadGrammarWithConfiguration(scopeName, initialLanguage, configuration);\n            if (toDispose.disposed) {\n                return;\n            }\n            if (!grammar) {\n                throw new Error(`no grammar for ${scopeName}, ${initialLanguage}, ${JSON.stringify(configuration)}`);\n            }\n            const options = configuration.tokenizerOption ? configuration.tokenizerOption : this.tokenizerOption;\n            const tokenizer = createTextmateTokenizer(grammar, options);\n            toDispose.push(monaco.languages.setTokensProvider(languageId, tokenizer));\n            const support = monaco.modes.TokenizationRegistry.get(languageId);\n            const themeService = monaco.services.StaticServices.standaloneThemeService.get();\n            const languageIdentifier = monaco.services.StaticServices.modeService.get().getLanguageIdentifier(languageId);\n            const adapter = new monaco.services.TokenizationSupport2Adapter(themeService, languageIdentifier!, tokenizer);\n            support!.tokenize = adapter.tokenize.bind(adapter);\n        } catch (error) {\n            this.logger.warn('No grammar for this language id', languageId, error);\n        }\n    }\n\n    protected waitForLanguage(language: string, cb: () => {}): Disposable {\n        const modeService = monaco.services.StaticServices.modeService.get();\n        for (const modeId of Object.keys(modeService['_instantiatedModes'])) {\n            const mode = modeService['_instantiatedModes'][modeId];\n            if (mode.getId() === language) {\n                cb();\n                return Disposable.NULL;\n            }\n        }\n        return monaco.languages.onLanguage(language, cb);\n    }\n\n}\n","\n/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { injectable } from 'inversify';\nimport { IRawTheme, Registry, IRawThemeSetting } from 'vscode-textmate';\n\nexport interface ThemeMix extends IRawTheme, monaco.editor.IStandaloneThemeData { }\nexport interface MixStandaloneTheme extends monaco.services.IStandaloneTheme {\n    themeData: ThemeMix\n}\n\n@injectable()\nexport class MonacoThemeRegistry {\n\n    getThemeData(): ThemeMix;\n    getThemeData(name: string): ThemeMix | undefined;\n    getThemeData(name?: string): ThemeMix | undefined {\n        const theme = this.doGetTheme(name);\n        return theme && theme.themeData;\n    }\n\n    getTheme(): MixStandaloneTheme;\n    getTheme(name: string): MixStandaloneTheme | undefined;\n    getTheme(name?: string): MixStandaloneTheme | undefined {\n        return this.doGetTheme(name);\n    }\n\n    protected doGetTheme(name: string | undefined): MixStandaloneTheme | undefined {\n        const standaloneThemeService = monaco.services.StaticServices.standaloneThemeService.get();\n        const theme = !name ? standaloneThemeService.getTheme() : standaloneThemeService._knownThemes.get(name);\n        return theme as MixStandaloneTheme | undefined;\n    }\n\n    setTheme(name: string, data: ThemeMix): void {\n        // monaco auto refreshes a theme with new data\n        monaco.editor.defineTheme(name, data);\n    }\n\n    /**\n     * Register VS Code compatible themes\n     */\n    register(json: any, includes?: { [includePath: string]: any }, givenName?: string, monacoBase?: monaco.editor.BuiltinTheme): ThemeMix {\n        const name = givenName || json.name!;\n        const result: ThemeMix = {\n            name,\n            base: monacoBase || 'vs',\n            inherit: true,\n            colors: {},\n            rules: [],\n            settings: []\n        };\n        if (typeof json.include !== 'undefined') {\n            if (!includes || !includes[json.include]) {\n                console.error(`Couldn't resolve includes theme ${json.include}.`);\n            } else {\n                const parentTheme = this.register(includes[json.include], includes);\n                Object.assign(result.colors, parentTheme.colors);\n                result.rules.push(...parentTheme.rules);\n                result.settings.push(...parentTheme.settings);\n            }\n        }\n        const tokenColors: Array<IRawThemeSetting> = json.tokenColors;\n        if (Array.isArray(tokenColors)) {\n            for (const tokenColor of tokenColors) {\n                if (tokenColor.scope && tokenColor.settings) {\n                    result.settings.push({\n                        scope: tokenColor.scope,\n                        settings: {\n                            foreground: this.normalizeColor(tokenColor.settings.foreground),\n                            background: this.normalizeColor(tokenColor.settings.background),\n                            fontStyle: tokenColor.settings.fontStyle\n                        }\n                    });\n                }\n            }\n        }\n        if (json.colors) {\n            Object.assign(result.colors, json.colors);\n            result.encodedTokensColors = Object.keys(result.colors).map(key => result.colors[key]);\n        }\n        if (monacoBase && givenName) {\n            for (const setting of result.settings) {\n                this.transform(setting, rule => result.rules.push(rule));\n            }\n\n            // the default rule (scope empty) is always the first rule. Ignore all other default rules.\n            const defaultTheme = monaco.services.StaticServices.standaloneThemeService.get()._knownThemes.get(result.base)!;\n            const foreground = result.colors['editor.foreground'] || defaultTheme.getColor('editor.foreground');\n            const background = result.colors['editor.background'] || defaultTheme.getColor('editor.background');\n            result.settings.unshift({\n                settings: {\n                    foreground: this.normalizeColor(foreground),\n                    background: this.normalizeColor(background)\n                }\n            });\n\n            const reg = new Registry();\n            reg.setTheme(result);\n            result.encodedTokensColors = reg.getColorMap();\n            // index 0 has to be set to null as it is 'undefined' by default, but monaco code expects it to be null\n            // eslint-disable-next-line no-null/no-null\n            result.encodedTokensColors[0] = null!;\n            this.setTheme(givenName, result);\n        }\n        return result;\n    }\n\n    protected transform(tokenColor: any, acceptor: (rule: monaco.editor.ITokenThemeRule) => void): void {\n        if (typeof tokenColor.scope === 'undefined') {\n            tokenColor.scope = [''];\n        } else if (typeof tokenColor.scope === 'string') {\n            tokenColor.scope = tokenColor.scope.split(',').map((scope: string) => scope.trim());\n        }\n\n        for (const scope of tokenColor.scope) {\n            acceptor({\n                ...tokenColor.settings, token: scope\n            });\n        }\n    }\n\n    protected normalizeColor(color: string | monaco.color.Color | undefined): string | undefined {\n        if (!color) {\n            return undefined;\n        }\n        const normalized = String(color).replace(/^\\#/, '').slice(0, 6);\n        if (normalized.length < 6) {\n            // ignoring not normalized colors to avoid breaking token color indexes between monaco and vscode-textmate\n            console.error(`Color '${normalized}' is NOT normalized, it must have 6 positions.`);\n            return undefined;\n        }\n        return '#' + normalized;\n    }\n\n}\n\nexport namespace MonacoThemeRegistry {\n    export const SINGLETON = new MonacoThemeRegistry();\n\n    export const DARK_DEFAULT_THEME: string = SINGLETON.register(require('../../../data/monaco-themes/vscode/dark_theia.json'), {\n        './dark_defaults.json': require('../../../data/monaco-themes/vscode/dark_defaults.json'),\n        './dark_vs.json': require('../../../data/monaco-themes/vscode/dark_vs.json'),\n        './dark_plus.json': require('../../../data/monaco-themes/vscode/dark_plus.json')\n    }, 'dark-theia', 'vs-dark').name!;\n    export const LIGHT_DEFAULT_THEME: string = SINGLETON.register(require('../../../data/monaco-themes/vscode/light_theia.json'), {\n        './light_defaults.json': require('../../../data/monaco-themes/vscode/light_defaults.json'),\n        './light_vs.json': require('../../../data/monaco-themes/vscode/light_vs.json'),\n        './light_plus.json': require('../../../data/monaco-themes/vscode/light_plus.json'),\n    }, 'light-theia', 'vs').name!;\n    export const HC_DEFAULT_THEME: string = SINGLETON.register(require('../../../data/monaco-themes/vscode/hc_theia.json'), {\n        './hc_black_defaults.json': require('../../../data/monaco-themes/vscode/hc_black_defaults.json'),\n        './hc_black.json': require('../../../data/monaco-themes/vscode/hc_black.json')\n    }, 'hc-theia', 'hc-black').name!;\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { TextmateRegistry } from './textmate-registry';\n\n/**\n * Callback for extensions to contribute language grammar definitions\n */\nexport const LanguageGrammarDefinitionContribution = Symbol('LanguageGrammarDefinitionContribution');\nexport interface LanguageGrammarDefinitionContribution {\n    registerTextmateLanguage(registry: TextmateRegistry): void;\n}\nexport function getEncodedLanguageId(languageId: string): number {\n    return monaco.languages.getEncodedLanguageId(languageId);\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { IGrammarConfiguration } from 'vscode-textmate';\nimport { TokenizerOption } from './textmate-tokenizer';\nimport { Disposable } from '@theia/core/lib/common/disposable';\n\nexport interface TextmateGrammarConfiguration extends IGrammarConfiguration {\n\n    /**\n     * Optional options to further refine the tokenization of the grammar.\n     */\n    readonly tokenizerOption?: TokenizerOption;\n\n}\n\nexport interface GrammarDefinitionProvider {\n    getGrammarDefinition(): Promise<GrammarDefinition>;\n    getInjections?(scopeName: string): string[];\n}\n\nexport interface GrammarDefinition {\n    format: 'json' | 'plist';\n    content: object | string;\n    location?: string;\n}\n\n@injectable()\nexport class TextmateRegistry {\n\n    protected readonly scopeToProvider = new Map<string, GrammarDefinitionProvider[]>();\n    protected readonly languageToConfig = new Map<string, TextmateGrammarConfiguration[]>();\n    protected readonly languageIdToScope = new Map<string, string[]>();\n\n    get languages(): IterableIterator<string> {\n        return this.languageIdToScope.keys();\n    }\n\n    registerTextmateGrammarScope(scope: string, provider: GrammarDefinitionProvider): Disposable {\n        const providers = this.scopeToProvider.get(scope) || [];\n        const existingProvider = providers[0];\n        if (existingProvider) {\n            Promise.all([existingProvider.getGrammarDefinition(), provider.getGrammarDefinition()]).then(([a, b]) => {\n                if (a.location !== b.location || !a.location && !b.location) {\n                    console.warn(new Error(`a registered grammar provider for '${scope}' scope is overridden`));\n                }\n            });\n        }\n        providers.unshift(provider);\n        this.scopeToProvider.set(scope, providers);\n        return Disposable.create(() => {\n            const index = providers.indexOf(provider);\n            if (index !== -1) {\n                providers.splice(index, 1);\n            }\n        });\n    }\n\n    getProvider(scope: string): GrammarDefinitionProvider | undefined {\n        const providers = this.scopeToProvider.get(scope);\n        return providers && providers[0];\n    }\n\n    mapLanguageIdToTextmateGrammar(languageId: string, scope: string): Disposable {\n        const scopes = this.languageIdToScope.get(languageId) || [];\n        const existingScope = scopes[0];\n        if (typeof existingScope === 'string') {\n            console.warn(new Error(`'${languageId}' language is remapped from '${existingScope}' to '${scope}' scope`));\n        }\n        scopes.unshift(scope);\n        this.languageIdToScope.set(languageId, scopes);\n        return Disposable.create(() => {\n            const index = scopes.indexOf(scope);\n            if (index !== -1) {\n                scopes.splice(index, 1);\n            }\n        });\n    }\n\n    getScope(languageId: string): string | undefined {\n        const scopes = this.languageIdToScope.get(languageId);\n        return scopes && scopes[0];\n    }\n\n    getLanguageId(scope: string): string | undefined {\n        for (const languageId of this.languageIdToScope.keys()) {\n            if (this.getScope(languageId) === scope) {\n                return languageId;\n            }\n        }\n        return undefined;\n    }\n\n    registerGrammarConfiguration(languageId: string, config: TextmateGrammarConfiguration): Disposable {\n        const configs = this.languageToConfig.get(languageId) || [];\n        const existingConfig = configs[0];\n        if (existingConfig) {\n            console.warn(new Error(`a registered grammar configuration for '${languageId}' language is overridden`));\n        }\n        configs.unshift(config);\n        this.languageToConfig.set(languageId, configs);\n        return Disposable.create(() => {\n            const index = configs.indexOf(config);\n            if (index !== -1) {\n                configs.splice(index, 1);\n            }\n        });\n    }\n\n    getGrammarConfiguration(languageId: string): TextmateGrammarConfiguration {\n        const configs = this.languageToConfig.get(languageId);\n        return configs && configs[0] || {};\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { INITIAL, StackElement, IGrammar } from 'vscode-textmate';\n\nexport class TokenizerState implements monaco.languages.IState {\n\n    constructor(\n        public readonly ruleStack: StackElement\n    ) { }\n\n    clone(): monaco.languages.IState {\n        return new TokenizerState(this.ruleStack);\n    }\n\n    equals(other: monaco.languages.IState): boolean {\n        return other instanceof TokenizerState && (other === this || other.ruleStack === this.ruleStack);\n    }\n\n}\n\n/**\n * Options for the TextMate tokenizer.\n */\nexport interface TokenizerOption {\n\n    /**\n     * Maximum line length that will be handled by the TextMate tokenizer. If the length of the actual line exceeds this\n     * limit, the tokenizer terminates and the tokenization of any subsequent lines might be broken.\n     *\n     * If the `lineLimit` is not defined, it means, there are no line length limits. Otherwise, it must be a positive\n     * integer or an error will be thrown.\n     */\n    lineLimit?: number;\n\n}\n\nexport namespace TokenizerOption {\n    /**\n     * The default TextMate tokenizer option.\n     *\n     * @deprecated Use the current value of `editor.maxTokenizationLineLength` preference instead.\n     */\n    export const DEFAULT: TokenizerOption = {\n        lineLimit: 400\n    };\n}\n\nexport function createTextmateTokenizer(grammar: IGrammar, options: TokenizerOption): monaco.languages.EncodedTokensProvider & monaco.languages.TokensProvider {\n    if (options.lineLimit !== undefined && (options.lineLimit <= 0 || !Number.isInteger(options.lineLimit))) {\n        throw new Error(`The 'lineLimit' must be a positive integer. It was ${options.lineLimit}.`);\n    }\n    return {\n        getInitialState: () => new TokenizerState(INITIAL),\n        tokenizeEncoded(line: string, state: TokenizerState): monaco.languages.IEncodedLineTokens {\n            let processedLine = line;\n            if (options.lineLimit !== undefined && line.length > options.lineLimit) {\n                // Line is too long to be tokenized\n                processedLine = line.substr(0, options.lineLimit);\n            }\n            const result = grammar.tokenizeLine2(processedLine, state.ruleStack);\n            return {\n                endState: new TokenizerState(result.ruleStack),\n                tokens: result.tokens\n            };\n        },\n        tokenize(line: string, state: TokenizerState): monaco.languages.ILineTokens {\n            let processedLine = line;\n            if (options.lineLimit !== undefined && line.length > options.lineLimit) {\n                // Line is too long to be tokenized\n                processedLine = line.substr(0, options.lineLimit);\n            }\n            const result = grammar.tokenizeLine(processedLine, state.ruleStack);\n            return {\n                endState: new TokenizerState(result.ruleStack),\n                tokens: result.tokens.map(t => ({\n                    startIndex: t.startIndex,\n                    scopes: t.scopes.reverse().join(' ')\n                }))\n            };\n        }\n    };\n}\n"],"sourceRoot":""}