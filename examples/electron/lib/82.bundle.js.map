{"version":3,"sources":["webpack:///../api-samples/src/browser/api-samples-frontend-module.ts","webpack:///../api-samples/src/browser/label/sample-dynamic-label-provider-command-contribution.ts","webpack:///../api-samples/src/browser/label/sample-dynamic-label-provider-contribution.ts","webpack:///../api-samples/src/browser/output/sample-output-channel-with-severity.ts","webpack:///../api-samples/src/browser/view/sample-unclosable-view-contribution.ts","webpack:///../api-samples/src/browser/view/sample-unclosable-view.tsx"],"names":[],"mappings":"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","file":"82.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { bindDynamicLabelProvider } from './label/sample-dynamic-label-provider-command-contribution';\nimport { bindSampleUnclosableView } from './view/sample-unclosable-view-contribution';\nimport { bindSampleOutputChannelWithSeverity } from './output/sample-output-channel-with-severity';\n\nexport default new ContainerModule(bind => {\n    bindDynamicLabelProvider(bind);\n    bindSampleUnclosableView(bind);\n    bindSampleOutputChannelWithSeverity(bind);\n});\n","/********************************************************************************\n * Copyright (C) 2019 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, interfaces } from 'inversify';\nimport { Command, CommandContribution, CommandRegistry, CommandHandler } from '@theia/core';\nimport { FrontendApplicationContribution, LabelProviderContribution } from '@theia/core/lib/browser';\nimport { SampleDynamicLabelProviderContribution } from './sample-dynamic-label-provider-contribution';\n\nexport namespace ExampleLabelProviderCommands {\n    const EXAMPLE_CATEGORY = 'Examples';\n    export const TOGGLE_SAMPLE: Command = {\n        id: 'example_label_provider.toggle',\n        category: EXAMPLE_CATEGORY,\n        label: 'Toggle Dynamically-Changing Labels'\n    };\n}\n\n@injectable()\nexport class SampleDynamicLabelProviderCommandContribution implements FrontendApplicationContribution, CommandContribution {\n\n    @inject(SampleDynamicLabelProviderContribution)\n    protected readonly labelProviderContribution: SampleDynamicLabelProviderContribution;\n\n    initialize(): void { }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(ExampleLabelProviderCommands.TOGGLE_SAMPLE, new ExampleLabelProviderCommandHandler(this.labelProviderContribution));\n    }\n\n}\n\nexport class ExampleLabelProviderCommandHandler implements CommandHandler {\n\n    constructor(private readonly labelProviderContribution: SampleDynamicLabelProviderContribution) {\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    execute(...args: any[]): any {\n        this.labelProviderContribution.toggle();\n    }\n\n}\n\nexport const bindDynamicLabelProvider = (bind: interfaces.Bind) => {\n    bind(SampleDynamicLabelProviderContribution).toSelf().inSingletonScope();\n    bind(LabelProviderContribution).toService(SampleDynamicLabelProviderContribution);\n    bind(CommandContribution).to(SampleDynamicLabelProviderCommandContribution).inSingletonScope();\n};\n\n","/********************************************************************************\n * Copyright (C) 2019 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { DefaultUriLabelProviderContribution, DidChangeLabelEvent } from '@theia/core/lib/browser/label-provider';\nimport URI from '@theia/core/lib/common/uri';\nimport { Emitter, Event } from '@theia/core';\n\n@injectable()\nexport class SampleDynamicLabelProviderContribution extends DefaultUriLabelProviderContribution {\n\n    protected isActive: boolean = false;\n\n    constructor() {\n        super();\n        const outer = this;\n\n        setInterval(() => {\n            if (this.isActive) {\n                outer.x++;\n                outer.fireLabelsDidChange();\n            }\n        }, 1000);\n    }\n\n    canHandle(element: object): number {\n        if (element.toString().includes('test')) {\n            return 30;\n        }\n        return 0;\n    }\n\n    toggle(): void {\n        this.isActive = !this.isActive;\n        this.fireLabelsDidChange();\n    }\n\n    private fireLabelsDidChange(): void {\n        this.onDidChangeEmitter.fire({\n            affects: (element: URI) => element.toString().includes('test')\n        });\n    }\n\n    protected getUri(element: URI): URI {\n        return new URI(element.toString());\n    }\n\n    getIcon(element: URI): string {\n        const uri = this.getUri(element);\n        const icon = super.getFileIcon(uri);\n        if (!icon) {\n            return this.defaultFileIcon;\n        }\n        return icon;\n    }\n\n    protected readonly onDidChangeEmitter = new Emitter<DidChangeLabelEvent>();\n    private x: number = 0;\n\n    getName(element: URI): string | undefined {\n        const uri = this.getUri(element);\n        if (this.isActive && uri.toString().includes('test')) {\n            return super.getName(uri) + '-' + this.x.toString(10);\n        } else {\n            return super.getName(uri);\n        }\n    }\n\n    getLongName(element: URI): string | undefined {\n        const uri = this.getUri(element);\n        return super.getLongName(uri);\n    }\n\n    get onDidChange(): Event<DidChangeLabelEvent> {\n        return this.onDidChangeEmitter.event;\n    }\n\n}\n","/********************************************************************************\n * Copyright (c) 2020 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { inject, injectable, interfaces } from 'inversify';\nimport { OutputChannelManager, OutputChannelSeverity } from '@theia/output/lib/common/output-channel';\n\n@injectable()\nexport class SampleOutputChannelWithSeverity\n    implements FrontendApplicationContribution {\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n    public onStart(): void {\n        const channel = this.outputChannelManager.getChannel('my test channel');\n        channel.appendLine('hello info1'); // showed without color\n        channel.appendLine('hello info2', OutputChannelSeverity.Info);\n        channel.appendLine('hello error', OutputChannelSeverity.Error);\n        channel.appendLine('hello warning', OutputChannelSeverity.Warning);\n    }\n}\nexport const bindSampleOutputChannelWithSeverity = (bind: interfaces.Bind) => {\n    bind(FrontendApplicationContribution)\n        .to(SampleOutputChannelWithSeverity)\n        .inSingletonScope();\n};\n","/********************************************************************************\n * Copyright (C) 2020 TORO Limited and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { AbstractViewContribution, bindViewContribution, WidgetFactory } from '@theia/core/lib/browser';\nimport { SampleViewUnclosableView } from './sample-unclosable-view';\nimport { injectable, interfaces } from 'inversify';\n\n@injectable()\nexport class SampleUnclosableViewContribution extends AbstractViewContribution<SampleViewUnclosableView> {\n\n    static readonly SAMPLE_UNCLOSABLE_VIEW_TOGGLE_COMMAND_ID = 'sampleUnclosableView:toggle';\n\n    constructor() {\n        super({\n            widgetId: SampleViewUnclosableView.ID,\n            widgetName: 'Sample Unclosable View',\n            toggleCommandId: SampleUnclosableViewContribution.SAMPLE_UNCLOSABLE_VIEW_TOGGLE_COMMAND_ID,\n            defaultWidgetOptions: {\n                area: 'main'\n            }\n        });\n    }\n}\n\nexport const bindSampleUnclosableView = (bind: interfaces.Bind) => {\n    bindViewContribution(bind, SampleUnclosableViewContribution);\n    bind(SampleViewUnclosableView).toSelf();\n    bind(WidgetFactory).toDynamicValue(ctx => ({\n        id: SampleViewUnclosableView.ID,\n        createWidget: () => ctx.container.get<SampleViewUnclosableView>(SampleViewUnclosableView)\n    }));\n};\n","/********************************************************************************\n * Copyright (C) 2020 TORO Limited and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ReactWidget } from '@theia/core/lib/browser';\nimport { injectable, postConstruct } from 'inversify';\nimport * as React from 'react';\n\n/**\n * This sample view is used to demo the behavior of \"Widget.title.closable\".\n */\n@injectable()\nexport class SampleViewUnclosableView extends ReactWidget {\n  static readonly ID = 'sampleUnclosableView';\n\n  @postConstruct()\n  init(): void {\n    this.id = SampleViewUnclosableView.ID;\n    this.title.caption = 'Sample Unclosable View';\n    this.title.label = 'Sample Unclosable View';\n    this.title.iconClass = 'fa fa-window-maximize';\n    this.title.closable = false;\n    this.update();\n  }\n\n  protected render(): React.ReactNode {\n    return (\n      <div>\n        Closable\n        <input type=\"checkbox\" defaultChecked={this.title.closable} onChange={e => this.title.closable = e.target.checked} />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}