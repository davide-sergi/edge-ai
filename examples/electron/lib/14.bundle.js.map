{"version":3,"sources":["webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/browser/language-client-contribution.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/browser/language-client-factory.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/browser/language-client-provider-impl.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/browser/language-client-provider.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/browser/language-client-services.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/browser/language-resource-context-key.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/browser/languages-frontend-contribution.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/browser/languages-frontend-module.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/browser/typehierarchy/typehierarchy-feature.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/browser/typehierarchy/typehierarchy-protocol.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/browser/window-impl.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/browser/workspace-symbols.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/common/index.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/languages/src/common/language-contribution.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/workspace/src/browser/index.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,uDAAuD;AAEvD,wGAA+C;AAC/C,+FAA4E;AAC5E,4GAA0E;AAC1E,+GAA2F;AAC3F,2JAIoC;AAEpC,wJAAkE;AAClE,yHAAgE;AAEhE,sIAA+D;AAElD,kCAA0B,GAAG,MAAM,CAAC,4BAA4B,CAAC,CAAC;AAW/E;IAgBI,wCAC0C,SAAoB,EACpB,SAAoB,EACR,qBAA4C;QAFxD,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAW;QACR,0BAAqB,GAArB,qBAAqB,CAAuB;QAqCxF,uBAAkB,GAAG,IAAI,uBAAQ,EAAqB,CAAC;QAE9C,iBAAY,GAAG,IAAI,6BAAoB,EAAE,CAAC;QAmBnD,SAAI,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QAxD/B,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,sBAAI,0DAAc;aAAlB;YACI,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;QACrF,CAAC;;;OAAA;IAED,8DAA8D;IAC9D,0DAAiB,GAAjB,UAAkB,GAAwB;QAA1C,iBAyBC;QAxBG,8DAA8D;QAC9D,IAAM,kBAAkB,GAAmB,EAAE,CAAC;QAC9C,IAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACjD,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;YAChC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;SAC1D;QACD,IAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC/C,IAAI,gBAAgB,EAAE;YAClB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC,CAAC;SAC3E;QACD,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,OAAO,OAAO,CAAC,GAAG,CAAC;gBACf,IAAI,CAAC,SAAS,CAAC,KAAK;gBACpB,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,OAAO,CAAC,UAAM,OAAO;;;;;;gCAE1D,qBAAM,CAAC;;gCAAP,SAAO,CAAC;gCACR,OAAO,EAAE,CAAC;;;;gCAEV,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;;;;;qBAExB,CAAC,EAPuC,CAOvC,CAAC,CAAC;aACP,CAAC,CAAC;SACN;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IAChC,CAAC;IAKD,iDAAQ,GAAR;QAAA,iBAaC;QAZG,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBACvB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAM,YAAI,CAAC,kBAAkB,CAAC,OAAO,EAA/B,CAA+B,CAAC,CAAC;gBACxF,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,UAAC,EAAY;wBAAV,QAAQ;oBAC7C,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;gBAC1B,CAAC,CAAC,CAAC;aACN;YACD,IAAM,MAAM,GAAG,IAAI,6BAAoB,CAAC,mBAAU,CAAC,MAAM,CAAC,cAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,uBAAuB;YAC9F,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC3B;QACD,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IACD,mDAAU,GAAV;QACI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IAChC,CAAC;IAGe,mDAAU,GAA1B,UAA2B,MAA4B;;;;;;;;wBAE/C,kGAAkG;wBAClG,qBAAM,IAAI,CAAC,IAAI;;wBADf,kGAAkG;wBAClG,SAAe,CAAC;wBAChB,IAAI,MAAM,CAAC,QAAQ,EAAE;4BACjB,sBAAO;yBACV;wBACuB,qBAAM,IAAI,CAAC,kBAAkB,EAAE;;wBAAjD,eAAe,GAAG,SAA+B;wBACvD,IAAI,MAAM,CAAC,QAAQ,EAAE;4BACjB,sBAAO;yBACV;wBACiB,qBAAM,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,eAAe,CAAC;;wBAAnF,cAAY,SAAuE;wBACzF,IAAI,MAAM,CAAC,QAAQ,EAAE;4BACjB,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,WAAS,CAAC,CAAC;4BACpD,sBAAO;yBACV;wBACD,MAAM,CAAC,IAAI,CAAC,mBAAU,CAAC,MAAM,CAAC,cAAM,YAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,WAAS,CAAC,EAAnD,CAAmD,CAAC,CAAC,CAAC;wBAC1F,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;4BAC3B,IAAI,EAAE,+CAAoB,CAAC,OAAO,CAAC,IAAI,EAAE,WAAS,CAAC;4BACnD,YAAY,EAAE,2BAAiB;gCAC3B,KAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;gCACnD,iBAAiB,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,kBAAkB,GAAG,IAAI,uBAAQ,EAAqB,EAA3D,CAA2D,CAAC,CAAC;gCAC/F,IAAI,MAAM,CAAC,QAAQ,EAAE;oCACjB,iBAAiB,CAAC,OAAO,EAAE,CAAC;oCAC5B,OAAO;iCACV;gCACD,MAAM,CAAC,IAAI,CAAC,mBAAU,CAAC,MAAM,CAAC,cAAM,YAAI,CAAC,IAAI,GAAG,CAAC;;;;;;gDAEzC,qCAAqC;gDACrC,qBAAM,IAAI,CAAC,eAAgB,CAAC,OAAO,EAAE;;gDADrC,qCAAqC;gDACrC,SAAqC,CAAC;gDACtC,uBAAuB;gDACvB,qBAAM,IAAI,CAAC,eAAgB,CAAC,IAAI,EAAE;;gDADlC,uBAAuB;gDACvB,SAAkC,CAAC;;;;gDAEnC,IAAI;oDACA,iEAAiE;oDACjE,iBAAiB,CAAC,OAAO,EAAE,CAAC;iDAC/B;gDAAC,QAAQ,WAAW,IAAb,EAAE,WAAW,EAAE;;;;;qCAE9B,CAAC,EAAE,EAZgC,CAYhC,CAAC,CAAC,CAAC;gCACP,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,cAAM,YAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,CAAC,CAAC,CAAC;gCAClE,KAAI,CAAC,eAAgB,CAAC,KAAK,EAAE,CAAC;gCAC9B,8EAA8E;gCAC9E,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,eAAgB,EAAE,MAAM,CAAC,CAAC;4BACpD,CAAC;yBACJ,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC;;;;wBAE5B,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;4BAClB,IAAI,CAAC,YAAY,EAAE,CAAC;yBACvB;;;;;;KAER;IAGD,sBAAI,mDAAO;aAAX;YACI,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,gCAAK,CAAC,OAAO,CAAC;QACvE,CAAC;;;OAAA;IAED,gDAAO,GAAP;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO;SACV;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAES,qDAAY,GAAtB;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAES,oDAAW,GAArB,UAAsB,cAA+B,EAAE,MAA6B;QAApF,iBAEC;QADG,cAAc,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,cAAM,YAAI,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,EAApC,CAAoC,CAAC,CAAC;IAC9E,CAAC;IAES,gDAAO,GAAjB,UAAkB,cAA+B,EAAE,MAA6B;QAC5E,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACxC,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAES,qDAAY,GAAtB;QAAA,iBAIC;QAHG,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAkB,iBAAO;YAC7C,YAAI,CAAC,YAAY,GAAG,OAAO;QAA3B,CAA2B,CAC9B,CAAC;IACN,CAAC;IAES,6DAAoB,GAA9B,UAA+B,UAAuE;QAClG,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAC3C,OAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;IAC3E,CAAC;IAES,sDAAa,GAAvB;QAAA,iBASC;QARS,SAAoF,IAAI,EAAtF,EAAE,UAAE,gBAAgB,wBAAE,UAAU,kBAAE,oBAAoB,4BAAE,qBAAqB,2BAAS,CAAC;QAC/F,OAAO;YACH,gBAAgB;YAChB,WAAW,EAAE,EAAE,UAAU,cAAE,oBAAoB,wBAAE;YACjD,2BAA2B,EAAE,aAAG,IAAI,YAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,EAApC,CAAoC;YACxE,wBAAwB,EAAE,EAAE;YAC5B,qBAAqB;SACxB,CAAC;IACN,CAAC;IACS,mEAA0B,GAApC,UAAqC,GAAkD;QAAvF,iBASC;QARG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAM,MAAM,GAAG,GAAG,YAAY,KAAK,CAAC,CAAC,CAAC,OAAK,GAAG,CAAC,OAAS,CAAC,CAAC,CAAC,GAAG,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,qBAAmB,IAAI,CAAC,IAAI,wBAAmB,MAAQ,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAM;YACnG,IAAI,MAAM,EAAE;gBACR,KAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;QACL,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACjB,CAAC;IAES,2DAAkB,GAA5B;QACI,OAAO,SAAS,CAAC;IACrB,CAAC;IAGD,sBAAc,iEAAqB;QADnC,8DAA8D;aAC9D;YACI,OAAO,SAAS,CAAC;QACrB,CAAC;;;OAAA;IAED,sBAAc,gEAAoB;aAAlC;YACI,OAAO,SAAS,CAAC;QACrB,CAAC;;;OAAA;IAED,sBAAc,6DAAiB;aAA/B;YACI,OAAO,EAAE,CAAC;QACd,CAAC;;;OAAA;IAED,sBAAc,4DAAgB;aAA9B;YACI,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrB,CAAC;;;OAAA;IAGD,sBAAc,sDAAU;aAAxB;YACI,OAAO,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1E,CAAC;;;OAAA;IACS,yDAAgB,GAA1B;;QACI,IAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,SAAS,CAAC,uBAAuB,EAAE;;gBACxC,KAA0B,sBAAI,CAAC,YAAY,6CAAE;oBAAxC,IAAM,WAAW;oBAClB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC;iBACtE;;;;;;;;;SACJ;QACD,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED,sBAAc,wDAAY;aAA1B;YACI,OAAO,EAAE,CAAC;QACd,CAAC;;;OAAA;IAED;;OAEG;IACH,8DAA8D;IAC9C,+DAAsB,GAAtC;;;;;4BACwB,qBAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC;;wBAA9E,WAAW,GAAG,SAAgE;wBACpF,IAAI,CAAC,WAAW,EAAE;4BACd,sBAAO,IAAI,OAAO,CAAC,iBAAO,IAAM,CAAC,CAAC,EAAC;yBACtC;wBACD,sBAAO,WAAW,EAAC;;;;KACtB;IAED,iCAAiC;IACvB,gEAAuB,GAAjC,UAAkC,QAA0B;QAA5D,iBAeC;QAdG,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,aAAG;YACpD,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC;QAAnC,CAAmC,CACtC,CAAC,CAAC,CAAC,CAAC;QACL,IAAI,QAAQ,KAAK,SAAS,EAAE;YACxB,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SACpC;QACD,OAAO,IAAI,OAAO,CAAe,iBAAO;YACpC,IAAM,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,aAAG;gBACvD,IAAI,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE;oBACrC,UAAU,CAAC,OAAO,EAAE,CAAC;oBACrB,OAAO,CAAC,GAAG,CAAC,CAAC;iBAChB;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAvPuB;QAAvB,kBAAM,CAAC,qBAAc,CAAC;kCAAoC,qBAAc;0EAAC;IACjD;QAAxB,kBAAM,CAAC,sBAAe,CAAC;kCAA8B,sBAAe;oEAAC;IAC5C;QAAzB,kBAAM,CAAC,0BAAgB,CAAC;kCAAsC,0BAAgB;4EAAC;IAC1C;QAArC,kBAAM,CAAC,+CAAoB,CAAC,OAAO,CAAC;;uFAA8E;IAC9E;QAApC,kBAAM,CAAC,qCAA2B,CAAC;kCAAwC,qCAA2B;8EAAC;IAdtF,8BAA8B;QADnD,sBAAU,EAAE;QAkBJ,6BAAM,CAAC,oCAAS,CAAC;QACjB,6BAAM,CAAC,oCAAS,CAAC;QACjB,6BAAM,CAAC,+CAAqB,CAAC;yDAA2C,+CAAqB;OAnBhF,8BAA8B,CAmQnD;IAAD,qCAAC;CAAA;AAnQqB,wEAA8B;;;;;;;;;;;;;;AC5CpD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,wGAA+C;AAE/C,4GAAmF;AACnF,wIAAwF;AACxF,2JAIoC;AACpC,8KAA6E;AAG7E;IAII,+BAC0C,SAAoB,EACpB,SAAoB,EACvB,MAAc;QAFX,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAW;QACvB,WAAM,GAAN,MAAM,CAAQ;QAEjD,mCAAQ,CAAC,OAAO,CAAC;YACb,SAAS;YACT,SAAS;YACT,MAAM;YACN,QAAQ,EAAE;gBACN,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;aACnD;SACJ,CAAC,CAAC;IACP,CAAC;IAED,8DAA8D;IACpD,+CAAe,GAAzB,UAA0B,EAAU,EAAE,QAAiC,EAAE,OAAa;QAClF,IAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,EAAE,MAAE,EAAE,EAAE,OAAO,WAAE,CAAC,CAAC;IAC9D,CAAC;IAED,mCAAG,GAAH,UAAI,YAAkC,EAAE,aAAoC,EACxE,kBAA+E;QADnF,iBA2BC;QAzBG,IAAI,aAAa,CAAC,qBAAqB,KAAK,SAAS,EAAE;YACnD,aAAa,CAAC,qBAAqB,GAAG,6CAAqB,CAAC,KAAK,CAAC;SACrE;QACD,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;YAC7B,aAAa,CAAC,YAAY,GAAG;gBACzB,2BAA2B;gBAC3B,KAAK,EAAE,cAAM,0CAAW,CAAC,QAAQ,EAApB,CAAoB;gBACjC,MAAM,EAAE,cAAM,0CAAW,CAAC,YAAY,EAAxB,CAAwB;aACzC,CAAC;SACL;QACD,IAAM,2BAA2B,GAAG,aAAa,CAAC,2BAA2B,CAAC;QAC9E,aAAa,CAAC,2BAA2B,GAAG,WAAC,IAAI,QAAC,CAAC,2BAA2B,IAAI,2BAA2B,CAAC,CAAC,CAAC,EAA/D,CAA+D,CAAC;QACjH,IAAM,MAAM,GAAG,IAAI,+CAAoB,CAAC;YACpC,EAAE,EAAE,YAAY,CAAC,EAAE;YACnB,IAAI,EAAE,YAAY,CAAC,IAAI;YACvB,aAAa;YACb,kBAAkB,EAAE;gBAChB,GAAG,EAAE,UAAO,YAAY,EAAE,YAAY;;;;;qCACf,QAAO,kBAAkB,KAAK,UAAU,GAAxC,wBAAwC;gCAAG,qBAAM,kBAAkB,EAAE;;gCAA1B,cAA0B;;;gCAAG,uBAAkB;;;gCAAvG,UAAU,KAA6F;gCAC7G,sBAAO,2CAAgB,CAAC,UAAU,EAAE,YAAY,EAAE,YAAY,CAAC,EAAC;;;qBACnE;aACJ;SACJ,CAAC,CAAC;QACH,MAAM,CAAC,eAAe,CAAC,IAAI,4CAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAED;;;OAGG;IACO,yCAAS,GAAnB,UAAoB,MAA4B;;QAC5C,IAAM,QAAQ,GAAG,MAAM,CAAC,kBAAkB,CAGxC,CAAC;gCACQ,OAAO;YACd,IAAI,OAAO,CAAC,OAAO,EAAE;gBACjB,IAAM,SAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC9C,OAAO,CAAC,OAAO,GAAG;oBACd,SAAO,EAAE,CAAC;oBACV,IAAI,OAAO,CAAC,SAAS,EAAE;wBACnB,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;qBACjC;gBACL,CAAC,CAAC;aACL;;;YATL,KAAsB,0BAAQ,CAAC,MAAM,EAAE;gBAAlC,IAAM,OAAO;wBAAP,OAAO;aAUjB;;;;;;;;;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAzEwB;QAAxB,kBAAM,CAAC,wBAAe,CAAC;kCAA8B,wBAAe;2DAAC;IAF7D,qBAAqB;QADjC,sBAAU,EAAE;QAMJ,6BAAM,CAAC,oCAAS,CAAC;QACjB,6BAAM,CAAC,oCAAS,CAAC;QACjB,6BAAM,CAAC,iCAAM,CAAC;;OAPV,qBAAqB,CA6EjC;IAAD,4BAAC;CAAA;AA7EY,sDAAqB;;;;;;;;;;;;;;AC5BlC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,wGAAsD;AACtD,4GAA8D;AAC9D,uKAA4E;AAK5E;IAAA;IAuBA,CAAC;IAlBS,sDAAiB,GAAvB,UAAwB,UAAkB;;;;gBAChC,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;gBAC9D,IAAI,YAAY,EAAE;oBACd,sBAAO,YAAY,CAAC,cAAc,EAAC;iBACtC;;;;KACJ;IAES,4DAAuB,GAAjC,UAAkC,UAAkB;;QAChD,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;QAC5D,IAAI,aAAa,EAAE;;gBACf,KAA2B,4CAAa,oHAAE;oBAArC,IAAM,YAAY;oBACnB,IAAI,YAAY,CAAC,EAAE,KAAK,UAAU,EAAE;wBAChC,OAAO,YAAY,CAAC;qBACvB;iBACJ;;;;;;;;;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAnBD;QADC,kBAAM,CAAC,6BAAoB,CAAC;QAAE,iBAAK,CAAC,yDAA0B,CAAC;;qEACiB;IAHxE,0BAA0B;QADtC,sBAAU,EAAE;OACA,0BAA0B,CAuBtC;IAAD,iCAAC;CAAA;AAvBY,gEAA0B;;;;;;;;;;;;;;ACvBvC;;;;;;;;;;;;;;kFAckF;;;AAIrE,8BAAsB,GAAG,MAAM,CAAC,wBAAwB,CAAC,CAAC;;;;;;;;;;;;;;AClBvE;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;AAKlF,iIAAsC;AACtC,4GAA0B;AAab,iBAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AAOhC,iBAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AAKhC,gBAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAG9B,cAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAG1B,2BAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;AAGpD,uBAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;;;;;;;;;;;;;;ACtDzD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,wGAA+C;AAE/C,gKAAkF;AAClF,2JAAuD;AAGvD;IAAgD,8CAAkB;IAAlE;;IAiBA,CAAC;IAZa,kDAAa,GAAvB,UAAwB,GAAoB;;QAChC,aAAS,GAAK,IAAI,CAAC,SAAS,UAAnB,CAAoB;QACrC,IAAI,GAAG,IAAI,SAAS,EAAE;;gBAClB,KAAuB,oCAAS,gGAAE;oBAA7B,IAAM,QAAQ;oBACf,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;wBACvC,OAAO,QAAQ,CAAC,EAAE,CAAC;qBACtB;iBACJ;;;;;;;;;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAZD;QADC,kBAAM,CAAC,oCAAS,CAAC;;iEACsB;IAH/B,0BAA0B;QADtC,sBAAU,EAAE;OACA,0BAA0B,CAiBtC;IAAD,iCAAC;CAAA,CAjB+C,yCAAkB,GAiBjE;AAjBY,gEAA0B;;;;;;;;;;;;;;ACtBvC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;AAElF,wGAAsD;AACtD,4GAAoG;AACpG,+GAA2I;AAC3I,uKAA4E;AAG5E;IAAA;IA+DA,CAAC;IApDG,+CAAO,GAAP,UAAQ,GAAwB;;QAC5B,IAAM,MAAM,GAAqB;YAC7B,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE,EAAE;SACjB,CAAC;gCACS,YAAY;YACnB,YAAY,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACrC,mBAAY,CAAC,QAAQ,CAAC,GAAG,CAAC;YAA1B,CAA0B,CAC7B,CAAC;YACF,MAAM,CAAC,UAAU,CAAI,YAAY,CAAC,EAAE,kBAAe,CAAC,GAAG;gBACnD,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE;oBACF,KAAK;oBACL,UAAU;oBACV,SAAS;iBACZ;gBACD,OAAO,EAAE,KAAK;gBACd,WAAW,EAAE,oDAAkD,YAAY,CAAC,IAAI,qBAAkB;aACrG,CAAC;;;YAbN,KAA2B,sBAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE;gBAA3D,IAAM,YAAY;wBAAZ,YAAY;aActB;;;;;;;;;QACD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,wDAAgB,GAAhB,UAAiB,QAAyB;;QAA1C,iBA2BC;gCA1Bc,YAAY;YACnB,QAAQ,CAAC,eAAe,CAAC;gBACrB,EAAE,EAAK,YAAY,CAAC,EAAE,kBAAe;gBACrC,KAAK,EAAK,YAAY,CAAC,IAAI,4BAAyB;aACvD,EAAE;gBACC,OAAO,EAAE,cAAM,mBAAY,CAAC,QAAQ,CAAC,KAAI,CAAC,GAAG,CAAC,EAA/B,CAA+B;gBAC9C,SAAS,EAAE,cAAM,QAAC,YAAY,CAAC,OAAO,EAArB,CAAqB;gBACtC,SAAS,EAAE,cAAM,QAAC,YAAY,CAAC,OAAO,EAArB,CAAqB;aACzC,CAAC,CAAC;YACH,QAAQ,CAAC,eAAe,CAAC;gBACrB,EAAE,EAAK,YAAY,CAAC,EAAE,iBAAc;gBACpC,KAAK,EAAK,YAAY,CAAC,IAAI,2BAAwB;aACtD,EAAE;gBACC,OAAO,EAAE,cAAM,mBAAY,CAAC,UAAU,EAAE,EAAzB,CAAyB;gBACxC,SAAS,EAAE,cAAM,mBAAY,CAAC,OAAO,EAApB,CAAoB;gBACrC,SAAS,EAAE,cAAM,mBAAY,CAAC,OAAO,EAApB,CAAoB;aACxC,CAAC,CAAC;YACH,QAAQ,CAAC,eAAe,CAAC;gBACrB,EAAE,EAAK,YAAY,CAAC,EAAE,oBAAiB;gBACvC,KAAK,EAAK,YAAY,CAAC,IAAI,8BAA2B;aACzD,EAAE;gBACC,OAAO,EAAE,cAAM,mBAAY,CAAC,OAAO,EAAE,EAAtB,CAAsB;gBACrC,SAAS,EAAE,cAAM,mBAAY,CAAC,OAAO,EAApB,CAAoB;gBACrC,SAAS,EAAE,cAAM,mBAAY,CAAC,OAAO,EAApB,CAAoB;aACxC,CAAC,CAAC;;;YAxBP,KAA2B,sBAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE;gBAA3D,IAAM,YAAY;wBAAZ,YAAY;aAyBtB;;;;;;;;;IACL,CAAC;IA1DD;QADC,kBAAM,CAAC,6BAAmB,CAAC;kCACJ,6BAAmB;8DAAC;IAG5C;QADC,kBAAM,CAAC,kCAAwB,CAAC;kCACL,kCAAwB;2EAAC;IAGrD;QADC,kBAAM,CAAC,6BAAoB,CAAC;QAAE,iBAAK,CAAC,yDAA0B,CAAC;;wEACmB;IAT1E,6BAA6B;QADzC,sBAAU,EAAE;OACA,6BAA6B,CA+DzC;IAAD,oCAAC;CAAA;AA/DY,sEAA6B;;;;;;;;;;;;;;ACtB1C;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;AAElF,wGAA4C;AAC5C,4GAAuF;AACvF,gKAAkF;AAClF,+GAAsJ;AACtJ,2JAAoD;AACpD,oHAA2C;AAC3C,wJAAkE;AAClE,gLAAkF;AAClF,uKAA4E;AAC5E,sIAA6D;AAC7D,2JAAoE;AACpE,0KAA6E;AAC7E,oGAAiD;AACjD,0KAA6E;AAE7E,kBAAe,IAAI,2BAAe,CAAC,UAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM;;IAC7D,IAAI,CAAC,iCAAM,CAAC,CAAC,EAAE,CAAC,wBAAU,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAE/C,IAAI,CAAC,+CAAqB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACxD,IAAI,CAAC,6BAAoB,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,UAAC,EAAa;YAAX,SAAS;QAC1D,4CAA2B,CAAC,WAAW,CAAC,SAAS,EAAE,6BAAoB,CAAC,WAAW,CAAC;IAApF,CAAoF,CACvF,CAAC,gBAAgB,EAAE,CAAC;IAErB,iCAAwB,CAAC,IAAI,EAAE,yDAA0B,CAAC,CAAC;IAC3D,IAAI,CAAC,+DAA6B,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAChE,IAAI,CAAC,yCAA+B,CAAC,CAAC,SAAS,CAAC,+DAA6B,CAAC,CAAC;IAC/E,IAAI,CAAC,4BAAmB,CAAC,CAAC,SAAS,CAAC,+DAA6B,CAAC,CAAC;IAEnE,IAAI,CAAC,0CAAsB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;;QACzD,KAAyB,mBAAC,4BAAmB,EAAE,gCAAsB,EAAE,+BAAqB,CAAC,6CAAE;YAA1F,IAAM,UAAU;YACjB,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,0CAAsB,CAAC,CAAC;SACtD;;;;;;;;;IAED,IAAI,CAAC,0DAA0B,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC7D,IAAI,CAAC,iDAAsB,CAAC,CAAC,SAAS,CAAC,0DAA0B,CAAC,CAAC;IAEnE,IAAI,CAAC,0DAA0B,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC7D,MAAM,CAAC,yCAAkB,CAAC,CAAC,EAAE,CAAC,0DAA0B,CAAC,CAAC,gBAAgB,EAAE,CAAC;AACjF,CAAC,CAAC,CAAC;;;;;;;;;;;;;;ACtDH;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;AAElF,kGAA0B;AAC1B,4JAQqC;AACrC,mKAAgE;AAEhE,2HAA2H;AAC3H,mEAAmE;AACnE,yFAAyF;AAEzF;;GAEG;AACH;IAA0C,wCAA4D;IAElG,8BAAqB,MAAuB;QAA5C,YACI,kBAAM,MAAM,EAAE,6CAAoB,CAAC,IAAI,CAAC,SAC3C;QAFoB,YAAM,GAAN,MAAM,CAAiB;;IAE5C,CAAC;IAED,qDAAsB,GAAtB,UAAuB,YAAgC;QACnD,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;YAC5B,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SAClC;QACD,8DAA8D;QAC7D,YAAY,CAAC,YAAoB,CAAC,aAAa,GAAG;YAC/C,mBAAmB,EAAE,IAAI;SAC5B,CAAC;IACN,CAAC;IAED,yCAAU,GAAV,UAAW,YAAgC,EAAE,gBAAkC;QAC3E,IAAI,CAAC,gBAAgB,EAAE;YACnB,OAAO;SACV;QACD,IAAM,eAAe,GAA6D,YAAY,CAAC;QAC/F,IAAI,eAAe,CAAC,qBAAqB,EAAE;YACvC,IAAM,EAAE,GAAG,SAAE,EAAE,CAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE;gBACzB,EAAE;gBACF,eAAe,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,EAAE,eAAe,CAAC,qBAAqB,CAAC;aACpH,CAAC,CAAC;SACN;IACL,CAAC;IAES,uDAAwB,GAAlC;QACI,OAAO,CAAC,qCAAU,CAAC,MAAM,CAAC,cAAmB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzD,CAAC;IACL,2BAAC;AAAD,CAAC,CAjCyC,8CAAmB,GAiC5D;AAjCY,oDAAoB;;;;;;;;;;;;;;ACnCjC;;;;;;;;;;;;;;kFAckF;;;AAElF,4JAA0D;AAkE1D,IAAiB,sBAAsB,CAiBtC;AAjBD,WAAiB,sBAAsB;IAEnC;;OAEG;IACU,+BAAQ,GAAG,CAAC,CAAC;IAE1B;;OAEG;IACU,8BAAO,GAAG,CAAC,CAAC;IAEzB;;OAEG;IACU,2BAAI,GAAG,CAAC,CAAC;AAE1B,CAAC,EAjBgB,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAiBtC;AAGD;;;;GAIG;AACH,IAAiB,oBAAoB,CAEpC;AAFD,WAAiB,oBAAoB;IACpB,yBAAI,GAAG,IAAI,sCAAW,CAA4D,4BAA4B,CAAC,CAAC;AACjI,CAAC,EAFgB,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAEpC;AAuBD;;;GAGG;AACH,IAAiB,2BAA2B,CAE3C;AAFD,WAAiB,2BAA2B;IAC3B,gCAAI,GAAG,IAAI,sCAAW,CAAuE,uBAAuB,CAAC,CAAC;AACvI,CAAC,EAFgB,2BAA2B,GAA3B,mCAA2B,KAA3B,mCAA2B,QAE3C;;;;;;;;;;;;;;AC1ID;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,wGAA+C;AAC/C,4GAAwD;AACxD,2IAA2G;AAC3G,gJAA+E;AAC/E,iKAAmF;AAGnF;IAAA;IAiDA,CAAC;IA3CG,gCAAW,GAAX,UAAyC,IAAiB,EAAE,OAAe;;QAAE,iBAAe;aAAf,UAAe,EAAf,qBAAe,EAAf,IAAe;YAAf,gCAAe;;QACxF,IAAM,eAAe,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,gBAAM,IAAI,QAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAgB,EAArC,CAAqC,CAAC,CAAC,CAAC;QACtG,IAAM,YAAY,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,KAAK,EAAZ,CAAY,CAAC,CAAC;QACjE,IAAM,aAAa,GAAoD,gBAAM;YACzE,IAAI,CAAC,CAAC,MAAM,EAAE;gBACV,OAAO,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aACtC;YACD,OAAO,SAAS,CAAC;QACrB,CAAC,CAAC;QACF,IAAI,IAAI,KAAK,sBAAW,CAAC,KAAK,EAAE;YAC5B,OAAO,UAAI,CAAC,cAAc,EAAC,KAAK,qBAAC,OAAO,GAAK,YAAY,GAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SAClF;QACD,IAAI,IAAI,KAAK,sBAAW,CAAC,OAAO,EAAE;YAC9B,OAAO,UAAI,CAAC,cAAc,EAAC,IAAI,qBAAC,OAAO,GAAK,YAAY,GAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SACjF;QACD,IAAI,IAAI,KAAK,sBAAW,CAAC,IAAI,EAAE;YAC3B,OAAO,UAAI,CAAC,cAAc,EAAC,IAAI,qBAAC,OAAO,GAAK,YAAY,GAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SACjF;QACD,IAAI,IAAI,KAAK,sBAAW,CAAC,GAAG,EAAE;YAC1B,OAAO,UAAI,CAAC,cAAc,EAAC,GAAG,qBAAC,OAAO,GAAK,YAAY,GAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SAChF;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,wCAAmB,GAAnB,UAAoB,IAAY;QAAhC,iBAkBC;QAjBG,IAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACjE,OAAO;YACH,MAAM,EAAE,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;YAChD,UAAU,EAAE,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC;YACxD,IAAI,EAAE,UAAO,aAAuB;;;;;4BAC1B,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;gCAC1B,aAAa,EAAE,KAAK;6BACvB,EAAE,EAAE,aAAa,iBAAE,CAAC,CAAC;4BAChB,QAAQ,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;4BAClC,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC;4BACrC,qBAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE,QAAQ,YAAE,MAAM,UAAE,CAAC;;4BAA5D,SAA4D,CAAC;4BAC7D,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;;;;iBACrC;YACD,OAAO,EAAE;gBACL,KAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAChE,CAAC;SACJ,CAAC;IACN,CAAC;IA9CuB;QAAvB,kBAAM,CAAC,uBAAc,CAAC;kCAAoC,uBAAc;sDAAC;IAC5C;QAA7B,kBAAM,CAAC,qCAAoB,CAAC;kCAA0C,qCAAoB;4DAAC;IAChE;QAA3B,kBAAM,CAAC,wCAAkB,CAAC;kCAAwC,wCAAkB;0DAAC;IAJ7E,UAAU;QADtB,sBAAU,EAAE;OACA,UAAU,CAiDtB;IAAD,iBAAC;CAAA;AAjDY,gCAAU;;;;;;;;;;;;;;ACvBvB;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,wGAA+C;AAC/C,uJAAyE;AACzE,+GAGiC;AACjC,2JAA6I;AAC7I,+FAAkH;AAClH,2GAA6C;AAE7C,6JAA8D;AAG9D;IAUI,gCAAyC,SAAoB,EACf,aAA4B,EAC5B,gBAAwC,EAC9C,gBAAkC;QAHjC,cAAS,GAAT,SAAS,CAAW;QACf,kBAAa,GAAb,aAAa,CAAe;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAwB;QAC9C,qBAAgB,GAAhB,gBAAgB,CAAkB;QAXjE,WAAM,GAAG,GAAG,CAAC;QACb,gBAAW,GAAG,2BAA2B,CAAC;QAE3C,YAAO,GAAY;YACvB,EAAE,EAAE,4BAA4B;YAChC,KAAK,EAAE,8BAA8B;SACxC,CAAC;QAgDM,uBAAkB,GAAG,IAAI,8BAAuB,EAAE,CAAC;IA3CmB,CAAC;IAE/E,0CAAS,GAAT;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,KAAK,SAAS,CAAC;IACjE,CAAC;IAED,wCAAO,GAAP;QACI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,yCAAQ,GAAR;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,2CAAU,GAAV;QAAA,iBAQC;QAPG,OAAO;YACH,eAAe,EAAE,IAAI;YACrB,yBAAyB,EAAE,IAAI;YAC/B,OAAO,EAAE;gBACL,KAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;YACrC,CAAC;SACJ,CAAC;IACN,CAAC;IAED,iDAAgB,GAAhB,UAAiB,QAAyB;QACtC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAEO,2CAAU,GAAlB;QACI,OAAO,yBAAW,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;IACrC,CAAC;IAED,oDAAmB,GAAnB,UAAoB,WAA+B;QAC/C,WAAW,CAAC,kBAAkB,CAAC;YAC3B,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;YACxB,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW;SAC5D,CAAC,CAAC;IACP,CAAC;IAED,0DAAyB,GAAzB,UAA0B,QAAkC;QACxD,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAIK,uCAAM,GAAZ,UAAa,OAAe,EAAE,QAA0C;;;;;;gBACpE,IAAI,IAAI,CAAC,SAAS,CAAC,wBAAwB,EAAE;oBACzC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;oBAC3B,0BAAwB,IAAI,8BAAuB,EAAE,CAAC;oBAC5D,IAAI,CAAC,kBAAkB,GAAG,uBAAqB,CAAC;oBAE1C,UAA+B;wBACjC,KAAK,EAAE,OAAO;qBACjB,CAAC;oBAEI,UAAyB,EAAE,CAAC;oBAE5B,yBAAyB,GAAG,EAAE,CAAC;wCAC1B,QAAQ;wBACf,yBAAyB,CAAC,IAAI,CAAC,CAAC;;;;;4CACZ,qBAAM,QAAQ,CAAC,uBAAuB,CAAC,OAAK,EAAE,uBAAqB,CAAC,KAAK,CAAC;;wCAApF,OAAO,GAAG,SAA0E;wCAC1F,IAAI,OAAO,IAAI,CAAC,uBAAqB,CAAC,KAAK,CAAC,uBAAuB,EAAE;;gDACjE,KAAqB,4BAAO,sFAAE;oDAAnB,MAAM;oDACb,OAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE,uBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC;iDAC9E;;;;;;;;;4CACD,QAAQ,CAAC,OAAK,CAAC,CAAC;yCACnB;wCACD,sBAAO,OAAO,EAAC;;;6BAClB,CAAC,EAAE,CAAC,CAAC;;;wBAVV,KAAuB,kBAAI,CAAC,SAAS,CAAC,wBAAwB;4BAAnD,QAAQ;oCAAR,QAAQ;yBAWlB;;;;;;;;;oBACD,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,EAAH,CAAG,EAAE,WAAC,IAAI,gBAAS,EAAT,CAAS,CAAC,EAAlC,CAAkC,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAO;wBAC5F,IAAM,eAAe,GAAG,OAAO,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;wBACpE,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;4BAC9B,OAAK,CAAC,IAAI,CAAC,IAAI,uBAAa,CAAC;gCACzB,KAAK,EAAE,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,qBAAqB;gCAClF,GAAG,EAAE,cAAM,YAAK,EAAL,CAAK;6BACnB,CAAC,CAAC,CAAC;4BACJ,QAAQ,CAAC,OAAK,CAAC,CAAC;yBACnB;oBACL,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;iBACd;;;;KACJ;IAES,2CAAU,GAApB,UAAqB,GAAsB,EAAE,QAAiC,EAAE,KAAwB;QAAxG,iBAwBC;QAvBG,IAAM,GAAG,GAAG,IAAI,aAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACtC,IAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC;QACxD,IAAI,MAAM,GAAG,GAAG,CAAC,aAAa,CAAC;QAC/B,IAAI,MAAM,EAAE;YACR,MAAM,IAAI,KAAK,CAAC;SACnB;QACD,MAAM,GAAG,CAAC,MAAM,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC;QAC1C,OAAO,IAAI,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE;YAE9D,IAAI,QAAQ,CAAC,sBAAsB,EAAE;gBACjC,QAAQ,CAAC,sBAAsB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,wBAAc;oBAC3D,IAAI,cAAc,EAAE;wBAChB,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;qBAC7F;yBAAM;wBACH,gDAAgD;wBAChD,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;qBACvE;gBACL,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,0CAA0C;gBAC1C,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACvE;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAES,+CAAc,GAAxB,UAAyB,UAAsB,EAAE,MAAgB;QAC7D,IAAM,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,EAAE;YACP,OAAO,SAAS,CAAC;SACpB;QACD,OAAO,cAAW,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,0BAAmB,IAAI,CAAC,WAAW,EAAE,IAAI,UAAU,CAAE,CAAC;IACvG,CAAC;IAEO,wCAAO,GAAf,UAAgB,GAAQ,EAAE,KAAe,EAAE,GAAa;QACpD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,IAAI,CAAC,GAAG,EAAE;YAC9D,SAAS,EAAE,mCAAK,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC;SACtC,CAAC,EAF+C,CAE/C,CAAC,CAAC;IACR,CAAC;IAtIQ,sBAAsB;QADlC,sBAAU,EAAE;QAWI,6BAAM,CAAC,oCAAS,CAAC;QACzB,6BAAM,CAAC,uBAAa,CAAC;QACrB,6BAAM,CAAC,gCAAsB,CAAC;QAC9B,6BAAM,CAAC,uBAAgB,CAAC;yDADmC,gCAAsB;YAC5B,uBAAgB;OAbjE,sBAAsB,CAuIlC;IAAD,6BAAC;CAAA;AAvIY,wDAAsB;AAyInC;IAA6B,kCAAa;IAEtC,wBACuB,KAAa,EACb,IAAY,EACZ,MAAc,EACd,OAAe,EACf,MAAkB,EAClB,QAAqB;QAN5C,YAQI,iBAAO,SACV;QARsB,WAAK,GAAL,KAAK,CAAQ;QACb,UAAI,GAAJ,IAAI,CAAQ;QACZ,YAAM,GAAN,MAAM,CAAQ;QACd,aAAO,GAAP,OAAO,CAAQ;QACf,YAAM,GAAN,MAAM,CAAY;QAClB,cAAQ,GAAR,QAAQ,CAAa;;IAG5C,CAAC;IAED,iCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,iCAAQ,GAAR;QACI,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,mCAAU,GAAV;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,uCAAc,GAAd;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,qCAAY,GAAZ;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,4BAAG,GAAH,UAAI,IAAmB;QACnB,IAAI,IAAI,KAAK,uBAAa,CAAC,IAAI,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAChB,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,OAAO,IAAI,CAAC;SACf;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,qBAAC;AAAD,CAAC,CA5C4B,uBAAa,GA4CzC;AAED,IAAK,UA2BJ;AA3BD,WAAK,UAAU;IACX,2CAAQ;IACR,+CAAU;IACV,qDAAa;IACb,iDAAW;IACX,6CAAS;IACT,+CAAU;IACV,mDAAY;IACZ,6CAAS;IACT,yDAAe;IACf,4CAAS;IACT,sDAAc;IACd,oDAAa;IACb,oDAAa;IACb,oDAAa;IACb,gDAAW;IACX,gDAAW;IACX,kDAAY;IACZ,8CAAU;IACV,gDAAW;IACX,0CAAQ;IACR,4CAAS;IACT,wDAAe;IACf,gDAAW;IACX,8CAAU;IACV,oDAAa;IACb,8DAAkB;AACtB,CAAC,EA3BI,UAAU,KAAV,UAAU,QA2Bd;;;;;;;;;;;;;;AC/OD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,0IAAwC;;;;;;;;;;;;;;AChBxC;;;;;;;;;;;;;;kFAckF;;;AAOlF,IAAiB,oBAAoB,CAWpC;AAXD,WAAiB,oBAAoB;IACpB,gCAAW,GAAG,qBAAqB,CAAC;IACjD,SAAgB,OAAO,CAAC,YAAkC,EAAE,SAAyB;QAAzB,6CAAyB;QACjF,OAAO,gCAAW,GAAG,GAAG,GAAG,YAAY,CAAC,EAAE,GAAG,GAAG,GAAG,SAAS,CAAC;IACjE,CAAC;IAFe,4BAAO,UAEtB;IACY,4BAAO,GAAG,MAAM,CAAC,6BAA6B,CAAC,CAAC;AAMjE,CAAC,EAXgB,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAWpC;;;;;;;;;;;;;;AChCD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,qIAAqC;AACrC,mIAAoC;AACpC,+JAAkD;AAClD,mJAA4C;AAC5C,2IAAwC","file":"14.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { injectable, inject } from 'inversify';\nimport { MaybePromise, MessageService, CommandRegistry } from '@theia/core';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common';\nimport { FrontendApplication, WebSocketConnectionProvider } from '@theia/core/lib/browser';\nimport {\n    LanguageContribution, ILanguageClient, LanguageClientOptions,\n    DocumentSelector, TextDocument, FileSystemWatcher,\n    Workspace, Languages, State\n} from './language-client-services';\nimport { MessageConnection, ResponseError } from 'vscode-jsonrpc';\nimport { LanguageClientFactory } from './language-client-factory';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { InitializeParams } from 'monaco-languageclient';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\n\nexport const LanguageClientContribution = Symbol('LanguageClientContribution');\nexport interface LanguageClientContribution extends LanguageContribution {\n    readonly running: boolean;\n    readonly languageClient: Promise<ILanguageClient>;\n    waitForActivation(app: FrontendApplication): Promise<void>;\n    activate(app: FrontendApplication): Disposable;\n    deactivate(): void;\n    restart(): void;\n}\n\n@injectable()\nexport abstract class BaseLanguageClientContribution implements LanguageClientContribution {\n\n    abstract readonly id: string;\n    abstract readonly name: string;\n\n    protected _languageClient: ILanguageClient | undefined;\n\n    protected resolveReady: (languageClient: ILanguageClient) => void;\n    protected ready: Promise<ILanguageClient>;\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(CommandRegistry) protected readonly registry: CommandRegistry;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(LanguageContribution.Service) protected readonly languageContributionService: LanguageContribution.Service;\n    @inject(WebSocketConnectionProvider) protected readonly connectionProvider: WebSocketConnectionProvider;\n\n    constructor(\n        @inject(Workspace) protected readonly workspace: Workspace,\n        @inject(Languages) protected readonly languages: Languages,\n        @inject(LanguageClientFactory) protected readonly languageClientFactory: LanguageClientFactory\n    ) {\n        this.waitForReady();\n    }\n\n    get languageClient(): Promise<ILanguageClient> {\n        return this._languageClient ? Promise.resolve(this._languageClient) : this.ready;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    waitForActivation(app: FrontendApplication): Promise<any> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const activationPromises: Promise<any>[] = [];\n        const workspaceContains = this.workspaceContains;\n        if (workspaceContains.length !== 0) {\n            activationPromises.push(this.waitForItemInWorkspace());\n        }\n        const documentSelector = this.documentSelector;\n        if (documentSelector) {\n            activationPromises.push(this.waitForOpenTextDocument(documentSelector));\n        }\n        if (activationPromises.length !== 0) {\n            return Promise.all([\n                this.workspace.ready,\n                Promise.race(activationPromises.map(p => new Promise(async resolve => {\n                    try {\n                        await p;\n                        resolve();\n                    } catch (e) {\n                        console.error(e);\n                    }\n                })))\n            ]);\n        }\n        return this.workspace.ready;\n    }\n\n    protected deferredConnection = new Deferred<MessageConnection>();\n\n    protected readonly toDeactivate = new DisposableCollection();\n    activate(): Disposable {\n        if (this.toDeactivate.disposed) {\n            if (!this._languageClient) {\n                this._languageClient = this.createLanguageClient(() => this.deferredConnection.promise);\n                this._languageClient.onDidChangeState(({ newState }) => {\n                    this.state = newState;\n                });\n            }\n            const toStop = new DisposableCollection(Disposable.create(() => { })); // mark as not disposed\n            this.toDeactivate.push(toStop);\n            this.doActivate(toStop);\n        }\n        return this.toDeactivate;\n    }\n    deactivate(): void {\n        this.toDeactivate.dispose();\n    }\n\n    protected stop = Promise.resolve();\n    protected async doActivate(toStop: DisposableCollection): Promise<void> {\n        try {\n            // make sure that the previous client is stopped to avoid duplicate commands and language services\n            await this.stop;\n            if (toStop.disposed) {\n                return;\n            }\n            const startParameters = await this.getStartParameters();\n            if (toStop.disposed) {\n                return;\n            }\n            const sessionId = await this.languageContributionService.create(this.id, startParameters);\n            if (toStop.disposed) {\n                this.languageContributionService.destroy(sessionId);\n                return;\n            }\n            toStop.push(Disposable.create(() => this.languageContributionService.destroy(sessionId)));\n            this.connectionProvider.listen({\n                path: LanguageContribution.getPath(this, sessionId),\n                onConnection: messageConnection => {\n                    this.deferredConnection.resolve(messageConnection);\n                    messageConnection.onDispose(() => this.deferredConnection = new Deferred<MessageConnection>());\n                    if (toStop.disposed) {\n                        messageConnection.dispose();\n                        return;\n                    }\n                    toStop.push(Disposable.create(() => this.stop = (async () => {\n                        try {\n                            // avoid calling stop if start failed\n                            await this._languageClient!.onReady();\n                            // remove all listeners\n                            await this._languageClient!.stop();\n                        } catch {\n                            try {\n                                // if start or stop failed make sure the the connection is closed\n                                messageConnection.dispose();\n                            } catch { /* no-op */ }\n                        }\n                    })()));\n                    toStop.push(messageConnection.onClose(() => this.forceRestart()));\n                    this._languageClient!.start();\n                    // it should be called after `start` that `onReady` promise gets reinitialized\n                    this.onWillStart(this._languageClient!, toStop);\n                }\n            }, { reconnecting: false });\n        } catch (e) {\n            console.error(e);\n            if (!toStop.disposed) {\n                this.forceRestart();\n            }\n        }\n    }\n\n    protected state: State | undefined;\n    get running(): boolean {\n        return !this.toDeactivate.disposed && this.state === State.Running;\n    }\n\n    restart(): void {\n        if (!this.running) {\n            return;\n        }\n        this.forceRestart();\n    }\n\n    protected forceRestart(): void {\n        this.deactivate();\n        this.activate();\n    }\n\n    protected onWillStart(languageClient: ILanguageClient, toStop?: DisposableCollection): void {\n        languageClient.onReady().then(() => this.onReady(languageClient, toStop));\n    }\n\n    protected onReady(languageClient: ILanguageClient, toStop?: DisposableCollection): void {\n        this._languageClient = languageClient;\n        this.resolveReady(this._languageClient);\n        this.waitForReady();\n    }\n\n    protected waitForReady(): void {\n        this.ready = new Promise<ILanguageClient>(resolve =>\n            this.resolveReady = resolve\n        );\n    }\n\n    protected createLanguageClient(connection: MessageConnection | (() => MaybePromise<MessageConnection>)): ILanguageClient {\n        const clientOptions = this.createOptions();\n        return this.languageClientFactory.get(this, clientOptions, connection);\n    }\n\n    protected createOptions(): LanguageClientOptions {\n        const { id, documentSelector, fileEvents, configurationSection, initializationOptions } = this;\n        return {\n            documentSelector,\n            synchronize: { fileEvents, configurationSection },\n            initializationFailedHandler: err => this.handleInitializationFailed(err),\n            diagnosticCollectionName: id,\n            initializationOptions\n        };\n    }\n    protected handleInitializationFailed(err: ResponseError<InitializeParams> | Error | any): boolean {\n        this.deactivate();\n        const detail = err instanceof Error ? `: ${err.message}` : '.';\n        this.messageService.error(`Failed to start ${this.name} language server${detail}`, 'Retry').then(result => {\n            if (result) {\n                this.activate();\n            }\n        });\n        return false;\n    }\n\n    protected getStartParameters(): MaybePromise<any> {\n        return undefined;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected get initializationOptions(): any | (() => any) | undefined {\n        return undefined;\n    }\n\n    protected get configurationSection(): string | string[] | undefined {\n        return undefined;\n    }\n\n    protected get workspaceContains(): string[] {\n        return [];\n    }\n\n    protected get documentSelector(): DocumentSelector | undefined {\n        return [this.id];\n    }\n\n    protected _fileEvents: FileSystemWatcher[] | undefined;\n    protected get fileEvents(): FileSystemWatcher[] {\n        return this._fileEvents = this._fileEvents || this.createFileEvents();\n    }\n    protected createFileEvents(): FileSystemWatcher[] {\n        const watchers = [];\n        if (this.workspace.createFileSystemWatcher) {\n            for (const globPattern of this.globPatterns) {\n                watchers.push(this.workspace.createFileSystemWatcher(globPattern));\n            }\n        }\n        return watchers;\n    }\n\n    protected get globPatterns(): string[] {\n        return [];\n    }\n\n    /**\n     * Check to see if one of the paths is in the current workspace.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async waitForItemInWorkspace(): Promise<any> {\n        const doesContain = await this.workspaceService.containsSome(this.workspaceContains);\n        if (!doesContain) {\n            return new Promise(resolve => { });\n        }\n        return doesContain;\n    }\n\n    // FIXME move it to the workspace\n    protected waitForOpenTextDocument(selector: DocumentSelector): Promise<TextDocument> {\n        const document = this.workspace.textDocuments.filter(doc =>\n            this.languages.match(selector, doc)\n        )[0];\n        if (document !== undefined) {\n            return Promise.resolve(document);\n        }\n        return new Promise<TextDocument>(resolve => {\n            const disposable = this.workspace.onDidOpenTextDocument(doc => {\n                if (this.languages.match(selector, doc)) {\n                    disposable.dispose();\n                    resolve(doc);\n                }\n            });\n        });\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { MessageConnection } from 'vscode-jsonrpc';\nimport { CommandRegistry, Disposable, MaybePromise } from '@theia/core/lib/common';\nimport { ErrorAction, RevealOutputChannelOn, CloseAction } from 'monaco-languageclient';\nimport {\n    Workspace, Languages, Window, Services,\n    ILanguageClient, LanguageClientOptions, MonacoLanguageClient,\n    createConnection, LanguageContribution\n} from './language-client-services';\nimport { TypeHierarchyFeature } from './typehierarchy/typehierarchy-feature';\n\n@injectable()\nexport class LanguageClientFactory {\n\n    @inject(CommandRegistry) protected readonly registry: CommandRegistry;\n\n    constructor(\n        @inject(Workspace) protected readonly workspace: Workspace,\n        @inject(Languages) protected readonly languages: Languages,\n        @inject(Window) protected readonly window: Window\n    ) {\n        Services.install({\n            workspace,\n            languages,\n            window,\n            commands: {\n                registerCommand: this.registerCommand.bind(this)\n            }\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected registerCommand(id: string, callback: (...args: any[]) => any, thisArg?: any): Disposable {\n        const execute = callback.bind(thisArg);\n        return this.registry.registerCommand({ id }, { execute });\n    }\n\n    get(contribution: LanguageContribution, clientOptions: LanguageClientOptions,\n        connectionProvider: MessageConnection | (() => MaybePromise<MessageConnection>)): ILanguageClient {\n        if (clientOptions.revealOutputChannelOn === undefined) {\n            clientOptions.revealOutputChannelOn = RevealOutputChannelOn.Never;\n        }\n        if (!clientOptions.errorHandler) {\n            clientOptions.errorHandler = {\n                // ignore connection errors\n                error: () => ErrorAction.Continue,\n                closed: () => CloseAction.DoNotRestart\n            };\n        }\n        const initializationFailedHandler = clientOptions.initializationFailedHandler;\n        clientOptions.initializationFailedHandler = e => !!initializationFailedHandler && initializationFailedHandler(e);\n        const client = new MonacoLanguageClient({\n            id: contribution.id,\n            name: contribution.name,\n            clientOptions,\n            connectionProvider: {\n                get: async (errorHandler, closeHandler) => {\n                    const connection = typeof connectionProvider === 'function' ? await connectionProvider() : connectionProvider;\n                    return createConnection(connection, errorHandler, closeHandler);\n                }\n            }\n        });\n        client.registerFeature(new TypeHierarchyFeature(client));\n        return this.patch4085(client);\n    }\n\n    /**\n     * see https://github.com/eclipse-theia/theia/issues/4085\n     * remove when monaco-languageclient is upgraded to latest vscode-languageclient\n     */\n    protected patch4085(client: MonacoLanguageClient): MonacoLanguageClient {\n        const features = client['_dynamicFeatures'] as Map<string, {\n            _listener?: Object | undefined\n            dispose?: Function\n        }>;\n        for (const feature of features.values()) {\n            if (feature.dispose) {\n                const dispose = feature.dispose.bind(feature);\n                feature.dispose = () => {\n                    dispose();\n                    if (feature._listener) {\n                        feature._listener = undefined;\n                    }\n                };\n            }\n        }\n        return client;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named } from 'inversify';\nimport { ContributionProvider } from '@theia/core/lib/common';\nimport { LanguageClientContribution } from './language-client-contribution';\nimport { ILanguageClient } from './language-client-services';\nimport { LanguageClientProvider } from './language-client-provider';\n\n@injectable()\nexport class LanguageClientProviderImpl implements LanguageClientProvider {\n\n    @inject(ContributionProvider) @named(LanguageClientContribution)\n    private readonly contributions: ContributionProvider<LanguageClientContribution>;\n\n    async getLanguageClient(languageId: string): Promise<ILanguageClient | undefined> {\n        const contribution = this.getLanguageContribution(languageId);\n        if (contribution) {\n            return contribution.languageClient;\n        }\n    }\n\n    protected getLanguageContribution(languageId: string): LanguageClientContribution | undefined {\n        const contributions = this.contributions.getContributions();\n        if (contributions) {\n            for (const contribution of contributions) {\n                if (contribution.id === languageId) {\n                    return contribution;\n                }\n            }\n        }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ILanguageClient } from './language-client-services';\n\nexport const LanguageClientProvider = Symbol('LanguageClientProvider');\nexport interface LanguageClientProvider {\n    getLanguageClient(languageId: string): Promise<ILanguageClient | undefined>\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as services from 'monaco-languageclient/lib/services';\nimport * as connection from 'monaco-languageclient/lib/connection';\nimport * as base from 'monaco-languageclient/lib/monaco-language-client';\nexport * from 'monaco-languageclient';\nexport * from '../common';\n\nexport interface Language {\n    readonly id: string;\n    readonly name: string;\n    readonly extensions: Set<string>;\n    readonly filenames: Set<string>;\n}\n\nexport interface WorkspaceSymbolProvider extends services.WorkspaceSymbolProvider {\n    resolveWorkspaceSymbol?(symbol: services.SymbolInformation, token: services.CancellationToken): Thenable<services.SymbolInformation | undefined>\n}\n\nexport const Languages = Symbol('Languages');\nexport interface Languages extends services.Languages {\n    readonly workspaceSymbolProviders?: WorkspaceSymbolProvider[];\n    readonly languages?: Language[]\n    getLanguage?(languageId: string): Language | undefined;\n}\n\nexport const Workspace = Symbol('Workspace');\nexport interface Workspace extends services.Workspace {\n    readonly ready: Promise<void>;\n}\n\nexport const Commands = Symbol('Commands');\nexport interface Commands extends services.Commands { }\n\nexport const Window = Symbol('Window');\nexport interface Window extends services.Window { }\n\nexport const IConnectionProvider = Symbol('IConnectionProvider');\nexport interface IConnectionProvider extends connection.IConnectionProvider { }\n\nexport const ILanguageClient = Symbol('ILanguageClient');\nexport interface ILanguageClient extends base.MonacoLanguageClient { }\n\nexport interface LanguageClientOptions extends base.LanguageClientOptions { }\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { ResourceContextKey } from '@theia/core/lib/browser/resource-context-key';\nimport { Languages } from './language-client-services';\n\n@injectable()\nexport class LanguageResourceContextKey extends ResourceContextKey {\n\n    @inject(Languages)\n    protected readonly languages: Languages;\n\n    protected getLanguageId(uri: URI | undefined): string | undefined {\n        const { languages } = this.languages;\n        if (uri && languages) {\n            for (const language of languages) {\n                if (language.extensions.has(uri.path.ext)) {\n                    return language.id;\n                }\n            }\n        }\n        return undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named } from 'inversify';\nimport { ContributionProvider, CommandContribution, CommandRegistry } from '@theia/core/lib/common';\nimport { FrontendApplication, FrontendApplicationContribution, PreferenceSchema, PreferenceSchemaProvider } from '@theia/core/lib/browser';\nimport { LanguageClientContribution } from './language-client-contribution';\n\n@injectable()\nexport class LanguagesFrontendContribution implements FrontendApplicationContribution, CommandContribution {\n\n    @inject(FrontendApplication)\n    protected readonly app: FrontendApplication;\n\n    @inject(PreferenceSchemaProvider)\n    protected preferenceSchema: PreferenceSchemaProvider;\n\n    @inject(ContributionProvider) @named(LanguageClientContribution)\n    protected readonly contributions: ContributionProvider<LanguageClientContribution>;\n\n    onStart(app: FrontendApplication): void {\n        const schema: PreferenceSchema = {\n            type: 'object',\n            properties: {}\n        };\n        for (const contribution of this.contributions.getContributions()) {\n            contribution.waitForActivation(app).then(() =>\n                contribution.activate(app)\n            );\n            schema.properties[`${contribution.id}.trace.server`] = {\n                type: 'string',\n                enum: [\n                    'off',\n                    'messages',\n                    'verbose'\n                ],\n                default: 'off',\n                description: `Enable/disable tracing communications with the ${contribution.name} language server`\n            };\n        }\n        this.preferenceSchema.setSchema(schema);\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        for (const contribution of this.contributions.getContributions()) {\n            commands.registerCommand({\n                id: `${contribution.id}.server.start`,\n                label: `${contribution.name}: Start Language Server`\n            }, {\n                execute: () => contribution.activate(this.app),\n                isEnabled: () => !contribution.running,\n                isVisible: () => !contribution.running,\n            });\n            commands.registerCommand({\n                id: `${contribution.id}.server.stop`,\n                label: `${contribution.name}: Stop Language Server`\n            }, {\n                execute: () => contribution.deactivate(),\n                isEnabled: () => contribution.running,\n                isVisible: () => contribution.running,\n            });\n            commands.registerCommand({\n                id: `${contribution.id}.server.restart`,\n                label: `${contribution.name}: Restart Language Server`\n            }, {\n                execute: () => contribution.restart(),\n                isEnabled: () => contribution.running,\n                isVisible: () => contribution.running,\n            });\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { bindContributionProvider, CommandContribution } from '@theia/core/lib/common';\nimport { ResourceContextKey } from '@theia/core/lib/browser/resource-context-key';\nimport { FrontendApplicationContribution, KeybindingContribution, QuickOpenContribution, WebSocketConnectionProvider } from '@theia/core/lib/browser';\nimport { Window } from './language-client-services';\nimport { WindowImpl } from './window-impl';\nimport { LanguageClientFactory } from './language-client-factory';\nimport { LanguagesFrontendContribution } from './languages-frontend-contribution';\nimport { LanguageClientContribution } from './language-client-contribution';\nimport { WorkspaceSymbolCommand } from './workspace-symbols';\nimport { LanguageClientProvider } from './language-client-provider';\nimport { LanguageClientProviderImpl } from './language-client-provider-impl';\nimport { LanguageContribution } from '../common';\nimport { LanguageResourceContextKey } from './language-resource-context-key';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bind(Window).to(WindowImpl).inSingletonScope();\n\n    bind(LanguageClientFactory).toSelf().inSingletonScope();\n    bind(LanguageContribution.Service).toDynamicValue(({ container }) =>\n        WebSocketConnectionProvider.createProxy(container, LanguageContribution.servicePath)\n    ).inSingletonScope();\n\n    bindContributionProvider(bind, LanguageClientContribution);\n    bind(LanguagesFrontendContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(LanguagesFrontendContribution);\n    bind(CommandContribution).toService(LanguagesFrontendContribution);\n\n    bind(WorkspaceSymbolCommand).toSelf().inSingletonScope();\n    for (const identifier of [CommandContribution, KeybindingContribution, QuickOpenContribution]) {\n        bind(identifier).toService(WorkspaceSymbolCommand);\n    }\n\n    bind(LanguageClientProviderImpl).toSelf().inSingletonScope();\n    bind(LanguageClientProvider).toService(LanguageClientProviderImpl);\n\n    bind(LanguageResourceContextKey).toSelf().inSingletonScope();\n    rebind(ResourceContextKey).to(LanguageResourceContextKey).inSingletonScope();\n});\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { v4 } from 'uuid';\nimport {\n    Disposable,\n    ILanguageClient,\n    DocumentSelector,\n    ClientCapabilities,\n    ServerCapabilities,\n    TextDocumentFeature,\n    TextDocumentRegistrationOptions\n} from '../language-client-services';\nimport { TypeHierarchyRequest } from './typehierarchy-protocol';\n\n// NOTE: This module can be removed, or at least can be simplified once the type hierarchy will become the part of the LSP.\n// https://github.com/Microsoft/language-server-protocol/issues/582\n// https://github.com/Microsoft/vscode-languageserver-node/pull/346#discussion_r221659062\n\n/**\n * Text document feature for handling super- and subtype hierarchies through the LSP.\n */\nexport class TypeHierarchyFeature extends TextDocumentFeature<{}, TextDocumentRegistrationOptions, {}> {\n\n    constructor(readonly client: ILanguageClient) {\n        super(client, TypeHierarchyRequest.type);\n    }\n\n    fillClientCapabilities(capabilities: ClientCapabilities): void {\n        if (!capabilities.textDocument) {\n            capabilities.textDocument = {};\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (capabilities.textDocument as any).typeHierarchy = {\n            dynamicRegistration: true\n        };\n    }\n\n    initialize(capabilities: ServerCapabilities, documentSelector: DocumentSelector): void {\n        if (!documentSelector) {\n            return;\n        }\n        const capabilitiesExt: ServerCapabilities & { typeHierarchyProvider?: boolean } = capabilities;\n        if (capabilitiesExt.typeHierarchyProvider) {\n            const id = v4();\n            this.register(this.messages, {\n                id,\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilitiesExt.typeHierarchyProvider)\n            });\n        }\n    }\n\n    protected registerLanguageProvider(): [Disposable, {}] {\n        return [Disposable.create(() => { /* NOOP */ }), {}];\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { RequestType } from '../language-client-services';\nimport { SymbolKind, Range } from 'vscode-languageserver-types';\nimport { TextDocumentPositionParams, TextDocumentRegistrationOptions, StaticRegistrationOptions } from 'vscode-languageserver';\n\n// NOTE: This module can be removed, once the type hierarchy will become the part of the LSP.\n// https://github.com/Microsoft/language-server-protocol/issues/582\n// https://github.com/Microsoft/vscode-languageserver-node/pull/346#discussion_r221659062\n\n/**\n * Client capabilities specific to the type hierarchy feature.\n */\nexport interface TypeHierarchyCapabilities {\n\n    /**\n     * The text document client capabilities.\n     */\n    textDocument?: {\n\n        /**\n         * Capabilities specific to the `textDocument/typeHierarchy`.\n         */\n        typeHierarchy?: {\n\n            /**\n             * Whether implementation supports dynamic registration. If this is set to `true`\n             * the client supports the new `(TextDocumentRegistrationOptions & StaticRegistrationOptions)`\n             * return value for the corresponding server capability as well.\n             */\n            dynamicRegistration?: boolean;\n\n        }\n\n    }\n\n}\n\n/**\n * Type hierarchy language server capability.\n */\nexport interface TypeHierarchyServerCapabilities {\n\n    /**\n     * Server capability for calculating super- and subtype hierarchies.\n     */\n    typeHierarchyProvider?: boolean | (TextDocumentRegistrationOptions & StaticRegistrationOptions);\n\n}\n\n/**\n * The type hierarchy params is an extension of the `TextDocumentPositionParams` with optional properties\n * which can be used to eagerly resolve the item when requesting from the server.\n */\nexport interface TypeHierarchyParams extends TextDocumentPositionParams {\n\n    /**\n     * The hierarchy levels to resolve. `0` indicates no level. When not defined, it is treated as `0`.\n     */\n    resolve?: number;\n\n    /**\n     * The direction of the hierarchy levels to resolve.\n     */\n    direction?: TypeHierarchyDirection\n\n}\n\nexport namespace TypeHierarchyDirection {\n\n    /**\n     * Flag for retrieving/resolving the subtypes.\n     */\n    export const Children = 0;\n\n    /**\n     * Flag to use when retrieving/resolving the supertypes.\n     */\n    export const Parents = 1;\n\n    /**\n     * Flag for resolving both the super- and subtypes.\n     */\n    export const Both = 2;\n\n}\nexport type TypeHierarchyDirection = 0 | 1 | 2;\n\n/**\n * The `textDocument/typeHierarchy` request is sent from the client to the server to retrieve the type hierarchy\n * items from a given position of a text document. Can resolve the parentage information on demand.\n * If no item can be retrieved for a given text document position, returns with `null`.\n */\nexport namespace TypeHierarchyRequest {\n    export const type = new RequestType<TypeHierarchyParams, TypeHierarchyItem | null, void, void>('textDocument/typeHierarchy');\n}\n\n/**\n * Parameters for the `typeHierarchy/resolve` request.\n */\nexport interface ResolveTypeHierarchyItemParams {\n\n    /**\n     * The item to resolve.\n     */\n    item: TypeHierarchyItem;\n\n    /**\n     * The hierarchy levels to resolve. `0` indicates no level.\n     */\n    resolve: number;\n\n    /**\n     * The direction of the hierarchy levels to resolve.\n     */\n    direction: TypeHierarchyDirection;\n}\n\n/**\n * The `typeHierarchy/resolve` request is sent from the client to the server to resolve a type hierarchy\n * item by resolving sub- and supertype information.\n */\nexport namespace ResolveTypeHierarchyRequest {\n    export const type = new RequestType<ResolveTypeHierarchyItemParams, TypeHierarchyItem | null, void, void>('typeHierarchy/resolve');\n}\n\nexport interface TypeHierarchyItem {\n\n    /**\n     * The human readable name of the hierarchy item.\n     */\n    name: string;\n\n    /**\n     * Optional detail for the hierarchy item. It can be, for instance, the signature of a function or method.\n     */\n    detail?: string;\n\n    /**\n     * The kind of the hierarchy item. For instance, class or interface.\n     */\n    kind: SymbolKind;\n\n    /**\n     * `true` if the hierarchy item is deprecated. Otherwise, `false`. It is `false` by default.\n     */\n    deprecated?: boolean;\n\n    /**\n     * The URI of the text document where this type hierarchy item belongs to.\n     */\n    uri: string;\n\n    /**\n     * The range enclosing this type hierarchy item not including leading/trailing whitespace but everything else\n     * like comments. This information is typically used to determine if the clients cursor is inside the type\n     * hierarchy item to reveal in the symbol in the UI.\n     */\n    range: Range;\n\n    /**\n     * The range that should be selected and revealed when this type hierarchy item is being picked, e.g the name\n     * of a function. Must be contained by the `range`.\n     */\n    selectionRange: Range;\n\n    /**\n     * If this type hierarchy item is resolved, it contains the direct parents. Could be empty if the item does\n     * not have any direct parents. If not defined, the parents have not been resolved yet.\n     */\n    parents?: TypeHierarchyItem[];\n\n    /**\n     * If this type hierarchy item is resolved, it contains the direct children of the current item. Could be\n     * empty if the item does not have any descendants. If not defined, the children have not been resolved.\n     */\n    children?: TypeHierarchyItem[];\n\n    /**\n     * An optional data field can be used to identify a type hierarchy item in a resolve request.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: any;\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { MessageService } from '@theia/core/lib/common';\nimport { Window, OutputChannel, MessageActionItem, MessageType } from 'monaco-languageclient/lib/services';\nimport { OutputChannelManager } from '@theia/output/lib/common/output-channel';\nimport { OutputContribution } from '@theia/output/lib/browser/output-contribution';\n\n@injectable()\nexport class WindowImpl implements Window {\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(OutputChannelManager) protected readonly outputChannelManager: OutputChannelManager;\n    @inject(OutputContribution) protected readonly outputContribution: OutputContribution;\n\n    showMessage<T extends MessageActionItem>(type: MessageType, message: string, ...actions: T[]): Thenable<T | undefined> {\n        const originalActions = new Map((actions || []).map(action => [action.title, action] as [string, T]));\n        const actionTitles = (actions || []).map(action => action.title);\n        const mapActionType: (result: string | undefined) => (T | undefined) = result => {\n            if (!!result) {\n                return originalActions.get(result);\n            }\n            return undefined;\n        };\n        if (type === MessageType.Error) {\n            return this.messageService.error(message, ...actionTitles).then(mapActionType);\n        }\n        if (type === MessageType.Warning) {\n            return this.messageService.warn(message, ...actionTitles).then(mapActionType);\n        }\n        if (type === MessageType.Info) {\n            return this.messageService.info(message, ...actionTitles).then(mapActionType);\n        }\n        if (type === MessageType.Log) {\n            return this.messageService.log(message, ...actionTitles).then(mapActionType);\n        }\n        return Promise.resolve(undefined);\n    }\n\n    createOutputChannel(name: string): OutputChannel {\n        const outputChannel = this.outputChannelManager.getChannel(name);\n        return {\n            append: outputChannel.append.bind(outputChannel),\n            appendLine: outputChannel.appendLine.bind(outputChannel),\n            show: async (preserveFocus?: boolean) => {\n                const options = Object.assign({\n                    preserveFocus: false,\n                }, { preserveFocus });\n                const activate = !options.preserveFocus;\n                const reveal = options.preserveFocus;\n                await this.outputContribution.openView({ activate, reveal });\n                outputChannel.setVisibility(true);\n            },\n            dispose: () => {\n                this.outputChannelManager.deleteChannel(outputChannel.name);\n            }\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { environment } from '@theia/application-package/lib/environment';\nimport {\n    PrefixQuickOpenService, QuickOpenModel, QuickOpenItem, OpenerService,\n    QuickOpenMode, KeybindingContribution, KeybindingRegistry, QuickOpenHandler, QuickOpenOptions, QuickOpenContribution, QuickOpenHandlerRegistry\n} from '@theia/core/lib/browser';\nimport { Languages, WorkspaceSymbolParams, SymbolInformation, WorkspaceSymbolProvider, CancellationToken } from './language-client-services';\nimport { CancellationTokenSource, CommandRegistry, CommandHandler, Command, SelectionService } from '@theia/core';\nimport URI from '@theia/core/lib/common/uri';\nimport { CommandContribution } from '@theia/core/lib/common';\nimport { Range, Position } from 'vscode-languageserver-types';\n\n@injectable()\nexport class WorkspaceSymbolCommand implements QuickOpenModel, CommandContribution, KeybindingContribution, CommandHandler, QuickOpenHandler, QuickOpenContribution {\n\n    readonly prefix = '#';\n    readonly description = 'Go to Symbol in Workspace';\n\n    private command: Command = {\n        id: 'languages.workspace.symbol',\n        label: 'Go to Symbol in Workspace...'\n    };\n\n    constructor(@inject(Languages) protected languages: Languages,\n        @inject(OpenerService) protected readonly openerService: OpenerService,\n        @inject(PrefixQuickOpenService) protected quickOpenService: PrefixQuickOpenService,\n        @inject(SelectionService) protected selectionService: SelectionService) { }\n\n    isEnabled(): boolean {\n        return this.languages.workspaceSymbolProviders !== undefined;\n    }\n\n    execute(): void {\n        this.quickOpenService.open(this.prefix);\n    }\n\n    getModel(): QuickOpenModel {\n        return this;\n    }\n\n    getOptions(): QuickOpenOptions {\n        return {\n            fuzzyMatchLabel: true,\n            showItemsWithoutHighlight: true,\n            onClose: () => {\n                this.cancellationSource.cancel();\n            }\n        };\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(this.command, this);\n    }\n\n    private isElectron(): boolean {\n        return environment.electron.is();\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: this.command.id,\n            keybinding: this.isElectron() ? 'ctrlcmd+t' : 'ctrlcmd+o',\n        });\n    }\n\n    registerQuickOpenHandlers(handlers: QuickOpenHandlerRegistry): void {\n        handlers.registerHandler(this);\n    }\n\n    private cancellationSource = new CancellationTokenSource();\n\n    async onType(lookFor: string, acceptor: (items: QuickOpenItem[]) => void): Promise<void> {\n        if (this.languages.workspaceSymbolProviders) {\n            this.cancellationSource.cancel();\n            const newCancellationSource = new CancellationTokenSource();\n            this.cancellationSource = newCancellationSource;\n\n            const param: WorkspaceSymbolParams = {\n                query: lookFor\n            };\n\n            const items: QuickOpenItem[] = [];\n\n            const workspaceProviderPromises = [];\n            for (const provider of this.languages.workspaceSymbolProviders) {\n                workspaceProviderPromises.push((async () => {\n                    const symbols = await provider.provideWorkspaceSymbols(param, newCancellationSource.token);\n                    if (symbols && !newCancellationSource.token.isCancellationRequested) {\n                        for (const symbol of symbols) {\n                            items.push(this.createItem(symbol, provider, newCancellationSource.token));\n                        }\n                        acceptor(items);\n                    }\n                    return symbols;\n                })());\n            }\n            Promise.all(workspaceProviderPromises.map(p => p.then(sym => sym, _ => undefined))).then(symbols => {\n                const filteredSymbols = symbols.filter(el => el && el.length !== 0);\n                if (filteredSymbols.length === 0) {\n                    items.push(new QuickOpenItem({\n                        label: lookFor.length === 0 ? 'Type to search for symbols' : 'No symbols matching',\n                        run: () => false\n                    }));\n                    acceptor(items);\n                }\n            }).catch();\n        }\n    }\n\n    protected createItem(sym: SymbolInformation, provider: WorkspaceSymbolProvider, token: CancellationToken): QuickOpenItem {\n        const uri = new URI(sym.location.uri);\n        const icon = this.toCssClassName(sym.kind) || 'unknown';\n        let parent = sym.containerName;\n        if (parent) {\n            parent += ' - ';\n        }\n        parent = (parent || '') + uri.displayName;\n        return new SimpleOpenItem(sym.name, icon, parent, uri.toString(), () => {\n\n            if (provider.resolveWorkspaceSymbol) {\n                provider.resolveWorkspaceSymbol(sym, token).then(resolvedSymbol => {\n                    if (resolvedSymbol) {\n                        this.openURL(uri, resolvedSymbol.location.range.start, resolvedSymbol.location.range.end);\n                    } else {\n                        // the symbol didn't resolve -> use given symbol\n                        this.openURL(uri, sym.location.range.start, sym.location.range.end);\n                    }\n                });\n            } else {\n                // resolveWorkspaceSymbol wasn't specified\n                this.openURL(uri, sym.location.range.start, sym.location.range.end);\n            }\n        });\n    }\n\n    protected toCssClassName(symbolKind: SymbolKind, inline?: boolean): string | undefined {\n        const kind = SymbolKind[symbolKind];\n        if (!kind) {\n            return undefined;\n        }\n        return `codicon ${inline ? 'inline' : 'block'} codicon-symbol-${kind.toLowerCase() || 'property'}`;\n    }\n\n    private openURL(uri: URI, start: Position, end: Position): void {\n        this.openerService.getOpener(uri).then(opener => opener.open(uri, {\n            selection: Range.create(start, end)\n        }));\n    }\n}\n\nclass SimpleOpenItem extends QuickOpenItem {\n\n    constructor(\n        protected readonly label: string,\n        protected readonly icon: string,\n        protected readonly parent: string,\n        protected readonly toolTip: string,\n        protected readonly onOpen: () => void,\n        protected readonly onSelect?: () => void\n    ) {\n        super();\n    }\n\n    getLabel(): string {\n        return this.label;\n    }\n\n    isHidden(): boolean {\n        return false;\n    }\n\n    getTooltip(): string {\n        return this.toolTip;\n    }\n\n    getDescription(): string {\n        return this.parent;\n    }\n\n    getIconClass(): string {\n        return this.icon;\n    }\n\n    run(mode: QuickOpenMode): boolean {\n        if (mode !== QuickOpenMode.OPEN) {\n            if (!this.onSelect) {\n                return false;\n            }\n            this.onSelect();\n            return true;\n        }\n        this.onOpen();\n        return true;\n    }\n}\n\nenum SymbolKind {\n    File = 1,\n    Module = 2,\n    Namespace = 3,\n    Package = 4,\n    Class = 5,\n    Method = 6,\n    Property = 7,\n    Field = 8,\n    Constructor = 9,\n    Enum = 10,\n    Interface = 11,\n    Function = 12,\n    Variable = 13,\n    Constant = 14,\n    String = 15,\n    Number = 16,\n    Boolean = 17,\n    Array = 18,\n    Object = 19,\n    Key = 20,\n    Null = 21,\n    EnumMember = 22,\n    Struct = 23,\n    Event = 24,\n    Operator = 25,\n    TypeParameter = 26\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './language-contribution';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport interface LanguageContribution {\n    readonly id: string;\n    readonly name: string;\n}\n\nexport namespace LanguageContribution {\n    export const servicePath = '/services/languages';\n    export function getPath(contribution: LanguageContribution, sessionId: string = ':id'): string {\n        return servicePath + '/' + contribution.id + '/' + sessionId;\n    }\n    export const Service = Symbol('LanguageContributionService');\n    export interface Service {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        create(contributionId: string, parameters: any): Promise<string>;\n        destroy(sessionId: string): Promise<void>;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\n"],"sourceRoot":""}