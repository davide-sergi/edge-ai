{"version":3,"sources":["webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/output/src/browser/style/output.css","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/output/src/browser/output-contribution.ts","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/output/src/browser/output-widget.tsx","webpack:////Users/sergi/work/projects/edge-ai/theia/theia-ide-1.1.0/packages/output/src/browser/style/output.css?ea54"],"names":[],"mappings":"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","file":"12.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n #outputView {\\n\\tfont-size: var(--theia-ui-font-size1);\\n}\\n\\n#outputView #outputContents {\\n    overflow: auto;\\n    height: inherit;\\n    padding: 6px;\\n    box-sizing: border-box;\\n}\\n\\n.theia-side-panel #outputView #outputContents {\\n    margin-left: 14px;\\n}\\n\\n#outputView #outputChannelList {\\n    line-height: var(--theia-content-line-height);\\n    font-size: var(--theia-ui-font-size1);\\n    \\n    -webkit-appearance: none;\\n    -moz-appearance: none;\\n    background-position: calc(100% - 6px) 8px, calc(100% - 2px) 8px, 100% 0;\\n    background-size: 4px 5px;\\n    background-repeat: no-repeat;\\n    padding-left: 3px;\\n    padding-right: 15px;\\n}\\n\\n#outputView #outputClear {\\n    background-image: var(--theia-icon-clear);\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    display: inline-block;\\n    width: 21px;\\n    opacity: var(--theia-mod-disabled-opacity);;\\n}\\n\\n#outputView #outputClear.enabled {\\n    opacity: 0.7;\\n    cursor: pointer;\\n}\\n\\n#outputView #outputClear.enabled:hover {\\n    opacity: 1;\\n}\\n\\n.output-tab-icon::before {\\n    content: \\\"\\\\F024\\\"\\n}\\n\\n.theia-output-error {\\n    color: var(--theia-errorForeground);\\n}\\n\\n.theia-output-warning {\\n    color: var(--theia-editorWarning-foreground);\\n}\\n\", \"\"]);\n\n// exports\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { Widget, KeybindingRegistry, KeybindingContext, ApplicationShell } from '@theia/core/lib/browser';\nimport { OUTPUT_WIDGET_KIND, OutputWidget } from './output-widget';\nimport { Command, CommandRegistry } from '@theia/core/lib/common';\n\nexport namespace OutputCommands {\n\n    const OUTPUT_CATEGORY = 'Output';\n\n    export const CLEAR_OUTPUT_TOOLBAR: Command = {\n        id: 'output:clear',\n        category: OUTPUT_CATEGORY,\n        label: 'Clear Output',\n        iconClass: 'clear-all'\n    };\n\n    export const SELECT_ALL: Command = {\n        id: 'output:selectAll',\n        category: OUTPUT_CATEGORY,\n        label: 'Select All'\n    };\n\n}\n\n/**\n * Enabled when the `Output` widget is the `activeWidget` in the shell.\n */\n@injectable()\nexport class OutputWidgetIsActiveContext implements KeybindingContext {\n\n    static readonly ID = 'output:isActive';\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    readonly id = OutputWidgetIsActiveContext.ID;\n\n    isEnabled(): boolean {\n        return this.shell.activeWidget instanceof OutputWidget;\n    }\n\n}\n\n@injectable()\nexport class OutputContribution extends AbstractViewContribution<OutputWidget> {\n\n    @inject(OutputWidgetIsActiveContext)\n    protected readonly outputIsActiveContext: OutputWidgetIsActiveContext;\n\n    constructor() {\n        super({\n            widgetId: OUTPUT_WIDGET_KIND,\n            widgetName: 'Output',\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'output:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+u'\n        });\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        super.registerCommands(commands);\n        commands.registerCommand(OutputCommands.CLEAR_OUTPUT_TOOLBAR, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: widget => this.withWidget(widget, outputWidget => this.clear(outputWidget))\n        });\n        commands.registerCommand(OutputCommands.SELECT_ALL, {\n            isEnabled: () => this.outputIsActiveContext.isEnabled(),\n            isVisible: () => this.outputIsActiveContext.isEnabled(),\n            execute: widget => this.withWidget(widget, outputWidget => outputWidget.selectAll())\n        });\n    }\n\n    registerKeybindings(registry: KeybindingRegistry): void {\n        super.registerKeybindings(registry);\n        registry.registerKeybindings({\n            command: OutputCommands.SELECT_ALL.id,\n            keybinding: 'CtrlCmd+A',\n            context: OutputWidgetIsActiveContext.ID\n        });\n    }\n\n    protected async clear(widget: OutputWidget): Promise<void> {\n        widget.clear();\n    }\n\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (problems: OutputWidget) => T): T | false {\n        if (widget instanceof OutputWidget && widget.id === OUTPUT_WIDGET_KIND) {\n            return cb(widget);\n        }\n        return false;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Message } from '@theia/core/lib/browser';\nimport { OutputChannel, OutputChannelManager, OutputChannelSeverity } from '../common/output-channel';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport * as React from 'react';\n\nimport '../../src/browser/style/output.css';\n\nexport const OUTPUT_WIDGET_KIND = 'outputView';\n\n@injectable()\nexport class OutputWidget extends ReactWidget {\n\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n\n    constructor() {\n        super();\n        this.id = OUTPUT_WIDGET_KIND;\n        this.title.label = 'Output';\n        this.title.caption = 'Output';\n        this.title.iconClass = 'fa output-tab-icon';\n        this.title.closable = true;\n        this.addClass('theia-output');\n        this.node.tabIndex = 0;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.outputChannelManager.getChannels().forEach(this.registerListener.bind(this));\n        this.toDispose.push(this.outputChannelManager.onChannelAdded(channel => {\n            this.registerListener(channel);\n            this.update();\n        }));\n        this.toDispose.push(this.outputChannelManager.onSelectedChannelChange(event => {\n            this.update();\n        }));\n        this.update();\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        const channelSelector = document.getElementById(OutputWidget.IDs.CHANNEL_LIST);\n        if (channelSelector) {\n            channelSelector.focus();\n        } else {\n            this.node.focus();\n        }\n    }\n\n    protected registerListener(outputChannel: OutputChannel): void {\n        this.toDispose.push(outputChannel.onContentChange(c => {\n            if (outputChannel === this.outputChannelManager.selectedChannel) {\n                this.update();\n            }\n        }));\n    }\n\n    protected render(): React.ReactNode {\n        return <React.Fragment>\n            {this.renderChannelContents()}\n        </React.Fragment>;\n    }\n\n    clear(): void {\n        if (this.outputChannelManager.selectedChannel) {\n            this.outputChannelManager.selectedChannel.clear();\n        }\n    }\n\n    selectAll(): void {\n        if (this.outputChannelManager.selectedChannel) {\n            const element = document.getElementById(OutputWidget.IDs.CONTENTS);\n            if (element) {\n                const selectElementContent = (htmlElement: HTMLElement) => {\n                    const selection = window.getSelection();\n                    const range = document.createRange();\n                    if (selection && range) {\n                        range.selectNodeContents(htmlElement);\n                        selection.removeAllRanges();\n                        selection.addRange(range);\n                    }\n                };\n                element.focus();\n                selectElementContent(element);\n            }\n        }\n    }\n\n    protected renderChannelContents(): React.ReactNode {\n        return <div id={OutputWidget.IDs.CONTENTS}>{this.renderLines()}</div>;\n    }\n\n    protected renderLines(): React.ReactNode[] {\n        let id = 0;\n        const result = [];\n\n        const style: React.CSSProperties = {\n            whiteSpace: 'pre',\n            fontFamily: 'monospace',\n        };\n\n        if (this.outputChannelManager.selectedChannel) {\n            for (const outputChannelLine of this.outputChannelManager.selectedChannel.getLines()) {\n                const lines = outputChannelLine.text.split(/[\\n\\r]+/);\n                let className;\n                if (outputChannelLine.severity === OutputChannelSeverity.Error) {\n                    className = 'theia-output-error';\n                } else if (outputChannelLine.severity === OutputChannelSeverity.Warning) {\n                    className = 'theia-output-warning';\n                }\n                for (const line of lines) {\n                    result.push(<div style={style} className={className} key={id++}>{line}</div>);\n                }\n            }\n        }\n        if (result.length === 0) {\n            result.push(<div style={style} key={id++}>{'<no output yet>'}</div>);\n        }\n        return result;\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        setTimeout(() => {\n            const div = document.getElementById(OutputWidget.IDs.CONTENTS) as HTMLDivElement;\n            if (div && div.children.length > 0) {\n                div.children[div.children.length - 1].scrollIntoView(false);\n            }\n        });\n    }\n}\n\nexport namespace OutputWidget {\n    export namespace IDs {\n        export const CONTENTS = 'outputContents';\n        export const CHANNEL_LIST = 'outputChannelList';\n    }\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!./output.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!./output.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!./output.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}